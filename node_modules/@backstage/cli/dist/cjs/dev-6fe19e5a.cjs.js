'use strict';

require('commander');
require('chalk');
var index = require('./index-ce78e402.cjs.js');
var fs = require('fs-extra');
require('@backstage/cli-common');
require('@backstage/config/package.json');
var webpack = require('webpack');
require('path');
require('fork-ts-checker-webpack-plugin');
require('html-webpack-plugin');
require('react-dev-utils/ModuleScopePlugin');
require('start-server-webpack-plugin');
require('webpack-node-externals');
require('terser-webpack-plugin');
require('./parallel-a4714c72.cjs.js');
var config = require('./config-ead78a79.cjs.js');
require('mini-css-extract-plugin');
require('./svgrTemplate-2d0d15cf.cjs.js');
require('child_process');
require('util');
require('./run-646af88e.cjs.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);
var webpack__default = /*#__PURE__*/_interopDefaultLegacy(webpack);

async function serveBackend(options) {
  const paths = config.resolveBundlingPaths(options);
  const config$1 = await config.createBackendConfig(paths, {
    ...options,
    isDev: true
  });
  const compiler = webpack__default['default'](config$1);
  const watcher = compiler.watch({
    poll: true
  }, (err) => {
    if (err) {
      console.error(err);
    } else
      console.log("Build succeeded");
  });
  const waitForExit = async () => {
    for (const signal of ["SIGINT", "SIGTERM"]) {
      process.on(signal, () => {
        watcher.close(() => console.log("Stopped watcher"));
        process.exit();
      });
    }
    return new Promise(() => {
    });
  };
  return waitForExit;
}

var dev = async (cmd) => {
  await fs__default['default'].remove(index.paths.resolveTarget("dist"));
  const waitForExit = await serveBackend({
    entry: "src/index",
    checksEnabled: cmd.check,
    inspectEnabled: cmd.inspect
  });
  await waitForExit();
};

exports.default = dev;
//# sourceMappingURL=dev-6fe19e5a.cjs.js.map
