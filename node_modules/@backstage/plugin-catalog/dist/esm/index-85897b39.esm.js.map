{"version":3,"file":"index-85897b39.esm.js","sources":["../../src/utils/getEntityMetadataUrl.ts","../../src/utils/getEntitySourceLocation.ts","../../src/components/AboutCard/AboutField.tsx","../../src/components/AboutCard/AboutContent.tsx","../../src/components/AboutCard/ScmIntegrationIcon.tsx","../../src/components/AboutCard/AboutCard.tsx","../../src/components/EntityContextMenu/EntityContextMenu.tsx","../../src/components/FavouriteEntity/FavouriteEntity.tsx","../../src/components/UnregisterEntityDialog/useUnregisterEntityDialogState.ts","../../src/components/UnregisterEntityDialog/UnregisterEntityDialog.tsx","../../src/components/EntityLayout/EntityLayout.tsx","../../src/components/EntityPageLayout/Tabbed/Tabbed.tsx","../../src/components/EntityPageLayout/EntityPageLayout.tsx","../../src/components/CatalogTable/columns.tsx","../../src/components/CatalogTable/CatalogTable.tsx","../../src/components/EntitySwitch/EntitySwitch.tsx","../../src/components/EntitySwitch/conditions.ts","../../src/filter/context.ts","../../src/filter/EntityFilterGroupsProvider.tsx","../../src/filter/useEntityFilterGroup.ts","../../src/filter/useFilteredEntities.ts","../../src/routes.ts","../../src/components/CatalogFilter/CatalogFilter.tsx","../../src/components/ResultsFilter/ResultsFilter.tsx","../../src/components/useOwnUser.ts","../../src/components/CatalogPage/CatalogLayout.tsx","../../src/components/CatalogPage/CatalogTabs.tsx","../../src/components/CatalogPage/CatalogPage.tsx","../../src/components/EntityLoaderProvider/EntityLoaderProvider.tsx","../../src/components/EntityNotFound/Illo/Illo.tsx","../../src/components/EntityNotFound/EntityNotFound.tsx","../../src/components/Router.tsx","../../src/CatalogClientWrapper.ts","../../src/plugin.ts","../../src/components/EntityOrphanWarning/DeleteEntityDialog.tsx","../../src/components/EntityOrphanWarning/EntityOrphanWarning.tsx"],"sourcesContent":["/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  EDIT_URL_ANNOTATION,\n  Entity,\n  VIEW_URL_ANNOTATION,\n} from '@backstage/catalog-model';\n\nexport function getEntityMetadataViewUrl(entity: Entity): string | undefined {\n  return entity.metadata.annotations?.[VIEW_URL_ANNOTATION];\n}\n\nexport function getEntityMetadataEditUrl(entity: Entity): string | undefined {\n  return entity.metadata.annotations?.[EDIT_URL_ANNOTATION];\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  parseLocationReference,\n  SOURCE_LOCATION_ANNOTATION,\n} from '@backstage/catalog-model';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\n\nexport type EntitySourceLocation = {\n  locationTargetUrl: string;\n  integrationType?: string;\n};\n\nexport function getEntitySourceLocation(\n  entity: Entity,\n  scmIntegrationsApi: ScmIntegrationRegistry,\n): EntitySourceLocation | undefined {\n  const sourceLocation =\n    entity.metadata.annotations?.[SOURCE_LOCATION_ANNOTATION];\n\n  if (!sourceLocation) {\n    return undefined;\n  }\n\n  try {\n    const sourceLocationRef = parseLocationReference(sourceLocation);\n    const integration = scmIntegrationsApi.byUrl(sourceLocationRef.target);\n    return {\n      locationTargetUrl: sourceLocationRef.target,\n      integrationType: integration?.type,\n    };\n  } catch {\n    return undefined;\n  }\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { makeStyles, Typography, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  value: {\n    fontWeight: 'bold',\n    overflow: 'hidden',\n    lineHeight: '24px',\n    wordBreak: 'break-word',\n  },\n  label: {\n    color: theme.palette.text.secondary,\n    textTransform: 'uppercase',\n    fontSize: '10px',\n    fontWeight: 'bold',\n    letterSpacing: 0.5,\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n}));\n\ntype Props = {\n  label: string;\n  value?: string;\n  gridSizes?: Record<string, number>;\n  children?: React.ReactNode;\n};\n\nexport const AboutField = ({ label, value, gridSizes, children }: Props) => {\n  const classes = useStyles();\n\n  // Content is either children or a string prop `value`\n  const content = React.Children.count(children) ? (\n    children\n  ) : (\n    <Typography variant=\"body2\" className={classes.value}>\n      {value || `unknown`}\n    </Typography>\n  );\n  return (\n    <Grid item {...gridSizes}>\n      <Typography variant=\"subtitle2\" className={classes.label}>\n        {label}\n      </Typography>\n      {content}\n    </Grid>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  RELATION_OWNED_BY,\n  RELATION_PART_OF,\n} from '@backstage/catalog-model';\nimport {\n  EntityRefLinks,\n  getEntityRelations,\n} from '@backstage/plugin-catalog-react';\nimport { Chip, Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { AboutField } from './AboutField';\n\nconst useStyles = makeStyles({\n  description: {\n    wordBreak: 'break-word',\n  },\n});\n\ntype Props = {\n  entity: Entity;\n};\n\nexport const AboutContent = ({ entity }: Props) => {\n  const classes = useStyles();\n  const isSystem = entity.kind.toLocaleLowerCase('en-US') === 'system';\n  const isDomain = entity.kind.toLocaleLowerCase('en-US') === 'domain';\n  const isResource = entity.kind.toLocaleLowerCase('en-US') === 'resource';\n  const isComponent = entity.kind.toLocaleLowerCase('en-US') === 'component';\n  const partOfSystemRelations = getEntityRelations(entity, RELATION_PART_OF, {\n    kind: 'system',\n  });\n  const partOfComponentRelations = getEntityRelations(\n    entity,\n    RELATION_PART_OF,\n    {\n      kind: 'component',\n    },\n  );\n  const partOfDomainRelations = getEntityRelations(entity, RELATION_PART_OF, {\n    kind: 'domain',\n  });\n  const ownedByRelations = getEntityRelations(entity, RELATION_OWNED_BY);\n\n  return (\n    <Grid container>\n      <AboutField label=\"Description\" gridSizes={{ xs: 12 }}>\n        <Typography variant=\"body2\" paragraph className={classes.description}>\n          {entity?.metadata?.description || 'No description'}\n        </Typography>\n      </AboutField>\n      <AboutField label=\"Owner\" gridSizes={{ xs: 12, sm: 6, lg: 4 }}>\n        <EntityRefLinks entityRefs={ownedByRelations} defaultKind=\"group\" />\n      </AboutField>\n      {isSystem && (\n        <AboutField\n          label=\"Domain\"\n          value=\"No Domain\"\n          gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n        >\n          <EntityRefLinks\n            entityRefs={partOfDomainRelations}\n            defaultKind=\"domain\"\n          />\n        </AboutField>\n      )}\n      {!isSystem && !isDomain && (\n        <AboutField\n          label=\"System\"\n          value=\"No System\"\n          gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n        >\n          <EntityRefLinks\n            entityRefs={partOfSystemRelations}\n            defaultKind=\"system\"\n          />\n        </AboutField>\n      )}\n      {isComponent && partOfComponentRelations.length > 0 && (\n        <AboutField\n          label=\"Parent Component\"\n          value=\"No Parent Component\"\n          gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n        >\n          <EntityRefLinks\n            entityRefs={partOfComponentRelations}\n            defaultKind=\"component\"\n          />\n        </AboutField>\n      )}\n      {!isSystem && !isDomain && (\n        <AboutField\n          label=\"Type\"\n          value={entity?.spec?.type as string}\n          gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n        />\n      )}\n      {!isSystem && !isDomain && !isResource && (\n        <AboutField\n          label=\"Lifecycle\"\n          value={entity?.spec?.lifecycle as string}\n          gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n        />\n      )}\n      <AboutField\n        label=\"Tags\"\n        value=\"No Tags\"\n        gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n      >\n        {(entity?.metadata?.tags || []).map(t => (\n          <Chip key={t} size=\"small\" label={t} />\n        ))}\n      </AboutField>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport CodeIcon from '@material-ui/icons/Code';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport React from 'react';\n\nexport const ScmIntegrationIcon = ({ type }: { type?: string }) => {\n  // TODO: In the future we might want to support more types here as a GitLab or\n  // Bitbucket icons were requested here in the past, or even use the icon\n  // customization feature of the app. But material UI react doesn't provide more.\n\n  switch (type) {\n    case 'github':\n      return <GitHubIcon />;\n    default:\n      return <CodeIcon />;\n  }\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  ENTITY_DEFAULT_NAMESPACE,\n  RELATION_CONSUMES_API,\n  RELATION_PROVIDES_API,\n} from '@backstage/catalog-model';\nimport {\n  HeaderIconLinkRow,\n  IconLinkVerticalProps,\n  useApi,\n} from '@backstage/core';\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\nimport { getEntityRelations, useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  makeStyles,\n} from '@material-ui/core';\nimport DocsIcon from '@material-ui/icons/Description';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport React from 'react';\nimport { getEntityMetadataEditUrl, getEntitySourceLocation } from '../../utils';\nimport { AboutContent } from './AboutContent';\nimport { ScmIntegrationIcon } from './ScmIntegrationIcon';\n\nconst useStyles = makeStyles({\n  gridItemCard: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: 'calc(100% - 10px)', // for pages without content header\n    marginBottom: '10px',\n  },\n  gridItemCardContent: {\n    flex: 1,\n  },\n});\n\ntype AboutCardProps = {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n  variant?: 'gridItem';\n};\n\nexport function AboutCard({ variant }: AboutCardProps) {\n  const classes = useStyles();\n  const { entity } = useEntity();\n  const scmIntegrationsApi = useApi(scmIntegrationsApiRef);\n  const entitySourceLocation = getEntitySourceLocation(\n    entity,\n    scmIntegrationsApi,\n  );\n  const entityMetadataEditUrl = getEntityMetadataEditUrl(entity);\n  const providesApiRelations = getEntityRelations(\n    entity,\n    RELATION_PROVIDES_API,\n  );\n  const consumesApiRelations = getEntityRelations(\n    entity,\n    RELATION_CONSUMES_API,\n  );\n  const hasApis =\n    providesApiRelations.length > 0 || consumesApiRelations.length > 0;\n\n  const viewInSource: IconLinkVerticalProps = {\n    label: 'View Source',\n    disabled: !entitySourceLocation,\n    icon: <ScmIntegrationIcon type={entitySourceLocation?.integrationType} />,\n    href: entitySourceLocation?.locationTargetUrl,\n  };\n  const viewInTechDocs: IconLinkVerticalProps = {\n    label: 'View TechDocs',\n    disabled: !entity.metadata.annotations?.['backstage.io/techdocs-ref'],\n    icon: <DocsIcon />,\n    href: `/docs/${entity.metadata.namespace || ENTITY_DEFAULT_NAMESPACE}/${\n      entity.kind\n    }/${entity.metadata.name}`,\n  };\n  const viewApi: IconLinkVerticalProps = {\n    title: hasApis ? '' : 'No APIs available',\n    label: 'View API',\n    disabled: !hasApis,\n    icon: <ExtensionIcon />,\n    href: 'api',\n  };\n\n  return (\n    <Card className={variant === 'gridItem' ? classes.gridItemCard : ''}>\n      <CardHeader\n        title=\"About\"\n        action={\n          <IconButton\n            aria-label=\"Edit\"\n            disabled={!entityMetadataEditUrl}\n            title=\"Edit Metadata\"\n            onClick={() => {\n              window.open(entityMetadataEditUrl ?? '#', '_blank');\n            }}\n          >\n            <EditIcon />\n          </IconButton>\n        }\n        subheader={\n          <HeaderIconLinkRow links={[viewInSource, viewInTechDocs, viewApi]} />\n        }\n      />\n      <Divider />\n      <CardContent\n        className={variant === 'gridItem' ? classes.gridItemCardContent : ''}\n      >\n        <AboutContent entity={entity} />\n      </CardContent>\n    </Card>\n  );\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IconComponent } from '@backstage/core';\nimport {\n  Divider,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  MenuList,\n  Popover,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Cancel from '@material-ui/icons/Cancel';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport React, { useState } from 'react';\n\n// TODO(freben): It should probably instead be the case that Header sets the theme text color to white inside itself unconditionally instead\nconst useStyles = makeStyles({\n  button: {\n    color: 'white',\n  },\n});\n\n// NOTE(freben): Intentionally not exported at this point, since it's part of\n// the unstable extra context menu items concept below\ntype ExtraContextMenuItem = {\n  title: string;\n  Icon: IconComponent;\n  onClick: () => void;\n};\n\ntype Props = {\n  UNSTABLE_extraContextMenuItems?: ExtraContextMenuItem[];\n  onUnregisterEntity: () => void;\n};\n\nexport const EntityContextMenu = ({\n  UNSTABLE_extraContextMenuItems,\n  onUnregisterEntity,\n}: Props) => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement>();\n  const classes = useStyles();\n\n  const onOpen = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const onClose = () => {\n    setAnchorEl(undefined);\n  };\n\n  const extraItems = UNSTABLE_extraContextMenuItems && [\n    ...UNSTABLE_extraContextMenuItems.map(item => (\n      <MenuItem\n        key={item.title}\n        onClick={() => {\n          onClose();\n          item.onClick();\n        }}\n      >\n        <ListItemIcon>\n          <item.Icon fontSize=\"small\" />\n        </ListItemIcon>\n        <ListItemText primary={item.title} />\n      </MenuItem>\n    )),\n    <Divider key=\"the divider is here!\" />,\n  ];\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={onOpen}\n        data-testid=\"menu-button\"\n        className={classes.button}\n      >\n        <MoreVert />\n      </IconButton>\n      <Popover\n        open={Boolean(anchorEl)}\n        onClose={onClose}\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuList>\n          {extraItems}\n          <MenuItem\n            onClick={() => {\n              onClose();\n              onUnregisterEntity();\n            }}\n          >\n            <ListItemIcon>\n              <Cancel fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Unregister entity\" />\n          </MenuItem>\n        </MenuList>\n      </Popover>\n    </>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentProps } from 'react';\nimport { useStarredEntities } from '@backstage/plugin-catalog-react';\nimport { IconButton, Tooltip, withStyles } from '@material-ui/core';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport Star from '@material-ui/icons/Star';\nimport { Entity } from '@backstage/catalog-model';\n\ntype Props = ComponentProps<typeof IconButton> & { entity: Entity };\n\nconst YellowStar = withStyles({\n  root: {\n    color: '#f3ba37',\n  },\n})(Star);\n\nexport const favouriteEntityTooltip = (isStarred: boolean) =>\n  isStarred ? 'Remove from favorites' : 'Add to favorites';\n\nexport const favouriteEntityIcon = (isStarred: boolean) =>\n  isStarred ? <YellowStar /> : <StarBorder />;\n\n/**\n * IconButton for showing if a current entity is starred and adding/removing it from the favourite entities\n * @param props MaterialUI IconButton props extended by required `entity` prop\n */\nexport const FavouriteEntity = (props: Props) => {\n  const { toggleStarredEntity, isStarredEntity } = useStarredEntities();\n  const isStarred = isStarredEntity(props.entity);\n  return (\n    <IconButton\n      color=\"inherit\"\n      {...props}\n      onClick={() => toggleStarredEntity(props.entity)}\n    >\n      <Tooltip title={favouriteEntityTooltip(isStarred)}>\n        {favouriteEntityIcon(isStarred)}\n      </Tooltip>\n    </IconButton>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  EntityName,\n  getEntityName,\n  ORIGIN_LOCATION_ANNOTATION,\n} from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { useCallback } from 'react';\nimport { useAsync } from 'react-use';\n\n/**\n * Each distinct state that the dialog can be in at any given time.\n */\nexport type UseUnregisterEntityDialogState =\n  | {\n      type: 'loading';\n    }\n  | {\n      type: 'error';\n      error: Error;\n    }\n  | {\n      type: 'bootstrap';\n      location: string;\n      deleteEntity: () => Promise<void>;\n    }\n  | {\n      type: 'unregister';\n      location: string;\n      colocatedEntities: EntityName[];\n      unregisterLocation: () => Promise<void>;\n      deleteEntity: () => Promise<void>;\n    }\n  | {\n      type: 'only-delete';\n      deleteEntity: () => Promise<void>;\n    };\n\n/**\n * Houses the main logic for unregistering entities and their locations.\n */\nexport function useUnregisterEntityDialogState(\n  entity: Entity,\n): UseUnregisterEntityDialogState {\n  const catalogApi = useApi(catalogApiRef);\n  const locationRef = entity.metadata.annotations?.[ORIGIN_LOCATION_ANNOTATION];\n  const uid = entity.metadata.uid;\n  const isBootstrap = locationRef === 'bootstrap:bootstrap';\n\n  // Load the prerequisite data: what entities that are colocated with us, and\n  // what location that spawned us\n  const prerequisites = useAsync(async () => {\n    const locationPromise = catalogApi.getOriginLocationByEntity(entity);\n\n    let colocatedEntitiesPromise: Promise<Entity[]>;\n    if (!locationRef) {\n      colocatedEntitiesPromise = Promise.resolve([]);\n    } else {\n      const locationAnnotationFilter = `metadata.annotations.${ORIGIN_LOCATION_ANNOTATION}`;\n      colocatedEntitiesPromise = catalogApi\n        .getEntities({\n          filter: { [locationAnnotationFilter]: locationRef },\n          fields: [\n            'kind',\n            'metadata.uid',\n            'metadata.name',\n            'metadata.namespace',\n          ],\n        })\n        .then(response => response.items);\n    }\n\n    return Promise.all([locationPromise, colocatedEntitiesPromise]).then(\n      ([location, colocatedEntities]) => ({\n        location,\n        colocatedEntities,\n      }),\n    );\n  }, [catalogApi, entity]);\n\n  // Unregisters the underlying location and removes all of the entities that\n  // are spawned from it. Can only ever be called when the prerequisites have\n  // finished loading successfully, and if there was a matching location.\n  const unregisterLocation = useCallback(\n    async function unregisterLocationFn() {\n      const { location, colocatedEntities } = prerequisites.value!;\n      await catalogApi.removeLocationById(location!.id);\n      await Promise.allSettled(\n        colocatedEntities.map(e =>\n          catalogApi.removeEntityByUid(e.metadata.uid!),\n        ),\n      );\n    },\n    [catalogApi, prerequisites],\n  );\n\n  // Just removes the entity, without affecting locations in any way.\n  const deleteEntity = useCallback(\n    async function deleteEntityFn() {\n      await catalogApi.removeEntityByUid(uid!);\n    },\n    [catalogApi, uid],\n  );\n\n  // If this is a bootstrap location entity, don't even block on loading\n  // prerequisites. We know that all that we will do is to offer to remove the\n  // entity, and that doesn't require anything from the prerequisites.\n  if (isBootstrap) {\n    return { type: 'bootstrap', location: locationRef!, deleteEntity };\n  }\n\n  // Return early if prerequisites still loading or failing\n  const { loading, error, value } = prerequisites;\n  if (loading) {\n    return { type: 'loading' };\n  } else if (error) {\n    return { type: 'error', error };\n  }\n\n  const { location, colocatedEntities } = value!;\n  if (!location) {\n    return { type: 'only-delete', deleteEntity };\n  }\n  return {\n    type: 'unregister',\n    location: locationRef!,\n    colocatedEntities: colocatedEntities.map(getEntityName),\n    unregisterLocation,\n    deleteEntity,\n  };\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  alertApiRef,\n  configApiRef,\n  Progress,\n  ResponseErrorPanel,\n  useApi,\n} from '@backstage/core';\nimport { EntityRefLink } from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  makeStyles,\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { useCallback, useState } from 'react';\nimport { useUnregisterEntityDialogState } from './useUnregisterEntityDialogState';\n\nconst useStyles = makeStyles({\n  advancedButton: {\n    fontSize: '0.7em',\n  },\n});\n\ntype Props = {\n  open: boolean;\n  onConfirm: () => any;\n  onClose: () => any;\n  entity: Entity;\n};\n\nconst Contents = ({\n  entity,\n  onConfirm,\n}: {\n  entity: Entity;\n  onConfirm: () => any;\n}) => {\n  const alertApi = useApi(alertApiRef);\n  const configApi = useApi(configApiRef);\n  const classes = useStyles();\n  const state = useUnregisterEntityDialogState(entity);\n  const [showDelete, setShowDelete] = useState(false);\n  const [busy, setBusy] = useState(false);\n  const appTitle = configApi.getOptionalString('app.title') ?? 'Backstage';\n\n  const onUnregister = useCallback(\n    async function onUnregisterFn() {\n      if ('unregisterLocation' in state) {\n        setBusy(true);\n        try {\n          await state.unregisterLocation();\n          onConfirm();\n        } catch (err) {\n          alertApi.post({ message: err.message });\n        } finally {\n          setBusy(false);\n        }\n      }\n    },\n    [alertApi, onConfirm, state],\n  );\n\n  const onDelete = useCallback(\n    async function onDeleteFn() {\n      if ('deleteEntity' in state) {\n        setBusy(true);\n        try {\n          await state.deleteEntity();\n          onConfirm();\n        } catch (err) {\n          alertApi.post({ message: err.message });\n        } finally {\n          setBusy(false);\n        }\n      }\n    },\n    [alertApi, onConfirm, state],\n  );\n\n  if (state.type === 'loading') {\n    return <Progress />;\n  }\n\n  if (state.type === 'error') {\n    return <ResponseErrorPanel error={state.error} />;\n  }\n\n  if (state.type === 'bootstrap') {\n    return (\n      <>\n        <Alert severity=\"info\">\n          You cannot unregister this entity, since it originates from a\n          protected Backstage configuration (location \"{state.location}\"). If\n          you believe this is in error, please contact the {appTitle}{' '}\n          integrator.\n        </Alert>\n\n        <Box marginTop={2}>\n          {!showDelete && (\n            <Button\n              variant=\"text\"\n              size=\"small\"\n              color=\"primary\"\n              className={classes.advancedButton}\n              onClick={() => setShowDelete(true)}\n            >\n              Advanced Options\n            </Button>\n          )}\n\n          {showDelete && (\n            <>\n              <DialogContentText>\n                You have the option to delete the entity itself from the\n                catalog. Note that this should only be done if you know that the\n                catalog file has been deleted at, or moved from, its origin\n                location. If that is not the case, the entity will reappear\n                shortly as the next refresh round is performed by the catalog.\n              </DialogContentText>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={busy}\n                onClick={onDelete}\n              >\n                Delete Entity\n              </Button>\n            </>\n          )}\n        </Box>\n      </>\n    );\n  }\n\n  if (state.type === 'only-delete') {\n    return (\n      <>\n        <DialogContentText>\n          This entity does not seem to originate from a location. You therefore\n          only have the option to delete it outright from the catalog.\n        </DialogContentText>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={busy}\n          onClick={onDelete}\n        >\n          Delete Entity\n        </Button>\n      </>\n    );\n  }\n\n  if (state.type === 'unregister') {\n    return (\n      <>\n        <DialogContentText>\n          This action will unregister the following entities:\n        </DialogContentText>\n        <DialogContentText component=\"ul\">\n          {state.colocatedEntities.map(e => (\n            <li key={`${e.kind}:${e.namespace}/${e.name}`}>\n              <EntityRefLink entityRef={e} />\n            </li>\n          ))}\n        </DialogContentText>\n        <DialogContentText>\n          Located at the following location:\n        </DialogContentText>\n        <DialogContentText component=\"ul\">\n          <li>{state.location}</li>\n        </DialogContentText>\n        <DialogContentText>\n          To undo, just re-register the entity in {appTitle}.\n        </DialogContentText>\n        <Box marginTop={2}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={busy}\n            onClick={onUnregister}\n          >\n            Unregister Location\n          </Button>\n          {!showDelete && (\n            <Box component=\"span\" marginLeft={2}>\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                color=\"primary\"\n                className={classes.advancedButton}\n                onClick={() => setShowDelete(true)}\n              >\n                Advanced Options\n              </Button>\n            </Box>\n          )}\n        </Box>\n\n        {showDelete && (\n          <>\n            <Box paddingTop={4} paddingBottom={4}>\n              <Divider />\n            </Box>\n            <DialogContentText>\n              You also have the option to delete the entity itself from the\n              catalog. Note that this should only be done if you know that the\n              catalog file has been deleted at, or moved from, its origin\n              location. If that is not the case, the entity will reappear\n              shortly as the next refresh round is performed by the catalog.\n            </DialogContentText>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={busy}\n              onClick={onDelete}\n            >\n              Delete Entity\n            </Button>\n          </>\n        )}\n      </>\n    );\n  }\n\n  return <Alert severity=\"error\">Internal error: Unknown state</Alert>;\n};\n\nexport const UnregisterEntityDialog = ({\n  open,\n  onConfirm,\n  onClose,\n  entity,\n}: Props) => (\n  <Dialog open={open} onClose={onClose}>\n    <DialogTitle id=\"responsive-dialog-title\">\n      Are you sure you want to unregister this entity?\n    </DialogTitle>\n    <DialogContent>\n      <Contents entity={entity} onConfirm={onConfirm} />\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={onClose} color=\"primary\">\n        Cancel\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  ENTITY_DEFAULT_NAMESPACE,\n  RELATION_OWNED_BY,\n} from '@backstage/catalog-model';\nimport {\n  attachComponentData,\n  Content,\n  Header,\n  HeaderLabel,\n  IconComponent,\n  Page,\n  Progress,\n  RoutedTabs,\n} from '@backstage/core';\nimport {\n  EntityContext,\n  EntityRefLinks,\n  getEntityRelations,\n  useEntityCompoundName,\n} from '@backstage/plugin-catalog-react';\nimport { Box, TabProps } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport {\n  Children,\n  default as React,\n  Fragment,\n  isValidElement,\n  useContext,\n  useState,\n} from 'react';\nimport { useNavigate } from 'react-router';\nimport { EntityContextMenu } from '../EntityContextMenu/EntityContextMenu';\nimport { FavouriteEntity } from '../FavouriteEntity/FavouriteEntity';\nimport { UnregisterEntityDialog } from '../UnregisterEntityDialog/UnregisterEntityDialog';\n\ntype SubRoute = {\n  path: string;\n  title: string;\n  children: JSX.Element;\n  if?: (entity: Entity) => boolean;\n  tabProps?: TabProps<React.ElementType, { component?: React.ElementType }>;\n};\n\nconst Route: (props: SubRoute) => null = () => null;\n\n// This causes all mount points that are discovered within this route to use the path of the route itself\nattachComponentData(Route, 'core.gatherMountPoints', true);\n\nfunction createSubRoutesFromChildren(\n  childrenProps: React.ReactNode,\n  entity: Entity | undefined,\n): SubRoute[] {\n  // Directly comparing child.type with Route will not work with in\n  // combination with react-hot-loader in storybook\n  // https://github.com/gaearon/react-hot-loader/issues/304\n  const routeType = (\n    <Route path=\"\" title=\"\">\n      <div />\n    </Route>\n  ).type;\n\n  return Children.toArray(childrenProps).flatMap(child => {\n    if (!isValidElement(child)) {\n      return [];\n    }\n\n    if (child.type === Fragment) {\n      return createSubRoutesFromChildren(child.props.children, entity);\n    }\n\n    if (child.type !== routeType) {\n      throw new Error('Child of EntityLayout must be an EntityLayout.Route');\n    }\n\n    const { path, title, children, if: condition, tabProps } = child.props;\n    if (condition && entity && !condition(entity)) {\n      return [];\n    }\n\n    return [{ path, title, children, tabProps }];\n  });\n}\n\nconst EntityLayoutTitle = ({\n  entity,\n  title,\n}: {\n  title: string;\n  entity: Entity | undefined;\n}) => (\n  <Box display=\"inline-flex\" alignItems=\"center\" height=\"1em\">\n    {title}\n    {entity && <FavouriteEntity entity={entity} />}\n  </Box>\n);\n\nconst headerProps = (\n  paramKind: string | undefined,\n  paramNamespace: string | undefined,\n  paramName: string | undefined,\n  entity: Entity | undefined,\n): { headerTitle: string; headerType: string } => {\n  const kind = paramKind ?? entity?.kind ?? '';\n  const namespace = paramNamespace ?? entity?.metadata.namespace ?? '';\n  const name = paramName ?? entity?.metadata.name ?? '';\n  return {\n    headerTitle: `${name}${\n      namespace && namespace !== ENTITY_DEFAULT_NAMESPACE\n        ? ` in ${namespace}`\n        : ''\n    }`,\n    headerType: (() => {\n      let t = kind.toLocaleLowerCase('en-US');\n      if (entity && entity.spec && 'type' in entity.spec) {\n        t += ' — ';\n        t += (entity.spec as { type: string }).type.toLocaleLowerCase('en-US');\n      }\n      return t;\n    })(),\n  };\n};\n\nconst EntityLabels = ({ entity }: { entity: Entity }) => {\n  const ownedByRelations = getEntityRelations(entity, RELATION_OWNED_BY);\n  return (\n    <>\n      {ownedByRelations.length > 0 && (\n        <HeaderLabel\n          label=\"Owner\"\n          value={\n            <EntityRefLinks\n              entityRefs={ownedByRelations}\n              defaultKind=\"Group\"\n              color=\"inherit\"\n            />\n          }\n        />\n      )}\n      {entity.spec?.lifecycle && (\n        <HeaderLabel label=\"Lifecycle\" value={entity.spec.lifecycle} />\n      )}\n    </>\n  );\n};\n\n// NOTE(freben): Intentionally not exported at this point, since it's part of\n// the unstable extra context menu items concept below\ntype ExtraContextMenuItem = {\n  title: string;\n  Icon: IconComponent;\n  onClick: () => void;\n};\n\ntype EntityLayoutProps = {\n  UNSTABLE_extraContextMenuItems?: ExtraContextMenuItem[];\n  children?: React.ReactNode;\n};\n\n/**\n * EntityLayout is a compound component, which allows you to define a layout for\n * entities using a sub-navigation mechanism.\n *\n * Consists of two parts: EntityLayout and EntityLayout.Route\n *\n * @example\n * ```jsx\n * <EntityLayout>\n *   <EntityLayout.Route path=\"/example\" title=\"Example tab\">\n *     <div>This is rendered under /example/anything-here route</div>\n *   </EntityLayout.Route>\n * </EntityLayout>\n * ```\n */\nexport const EntityLayout = ({\n  UNSTABLE_extraContextMenuItems,\n  children,\n}: EntityLayoutProps) => {\n  const { kind, namespace, name } = useEntityCompoundName();\n  const { entity, loading, error } = useContext(EntityContext);\n\n  const routes = createSubRoutesFromChildren(children, entity);\n  const { headerTitle, headerType } = headerProps(\n    kind,\n    namespace,\n    name,\n    entity,\n  );\n\n  const [confirmationDialogOpen, setConfirmationDialogOpen] = useState(false);\n  const navigate = useNavigate();\n  const cleanUpAfterRemoval = async () => {\n    setConfirmationDialogOpen(false);\n    navigate('/');\n  };\n\n  const showRemovalDialog = () => setConfirmationDialogOpen(true);\n\n  return (\n    <Page themeId={entity?.spec?.type?.toString() ?? 'home'}>\n      <Header\n        title={<EntityLayoutTitle title={headerTitle} entity={entity!} />}\n        pageTitleOverride={headerTitle}\n        type={headerType}\n      >\n        {entity && (\n          <>\n            <EntityLabels entity={entity} />\n            <EntityContextMenu\n              UNSTABLE_extraContextMenuItems={UNSTABLE_extraContextMenuItems}\n              onUnregisterEntity={showRemovalDialog}\n            />\n          </>\n        )}\n      </Header>\n\n      {loading && <Progress />}\n\n      {entity && <RoutedTabs routes={routes} />}\n\n      {error && (\n        <Content>\n          <Alert severity=\"error\">{error.toString()}</Alert>\n        </Content>\n      )}\n      <UnregisterEntityDialog\n        open={confirmationDialogOpen}\n        entity={entity!}\n        onConfirm={cleanUpAfterRemoval}\n        onClose={() => setConfirmationDialogOpen(false)}\n      />\n    </Page>\n  );\n};\n\nEntityLayout.Route = Route;\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport {\n  useParams,\n  useNavigate,\n  PartialRouteObject,\n  matchRoutes,\n  RouteObject,\n  useRoutes,\n  Navigate,\n  RouteMatch,\n} from 'react-router';\nimport { Tab, HeaderTabs, Content } from '@backstage/core';\nimport { Helmet } from 'react-helmet';\n\nconst getSelectedIndexOrDefault = (\n  matchedRoute: RouteMatch,\n  tabs: Tab[],\n  defaultIndex = 0,\n) => {\n  if (!matchedRoute) return defaultIndex;\n  const tabIndex = tabs.findIndex(t => t.id === matchedRoute.route.path);\n  return ~tabIndex ? tabIndex : defaultIndex;\n};\n\n/**\n * Compound component, which allows you to define layout\n * for EntityPage using Tabs as a sub-navigation mechanism\n * Consists of 2 parts: Tabbed.Layout and Tabbed.Content.\n * Takes care of: tabs, routes, document titles, spacing around content\n *\n * @example\n * ```jsx\n * <Tabbed.Layout>\n *   <Tabbed.Content\n *      title=\"Example tab\"\n *      route=\"/example/*\"\n *      element={<div>This is rendered under /example/anything-here route</div>}\n *   />\n * </TabbedLayout>\n * ```\n */\nexport const Tabbed = {\n  Layout: ({ children }: { children: React.ReactNode }) => {\n    const routes: PartialRouteObject[] = [];\n    const tabs: Tab[] = [];\n    const params = useParams();\n    const navigate = useNavigate();\n\n    React.Children.forEach(children, child => {\n      if (!React.isValidElement(child)) {\n        // Skip conditionals resolved to falses/nulls/undefineds etc\n        return;\n      }\n      if (child.type !== Tabbed.Content) {\n        throw new Error(\n          'This component only accepts Content elements as direct children. Check the code of the EntityPage.',\n        );\n      }\n      const pathAndId = (child as JSX.Element).props.path;\n\n      // Child here must be then always a functional component without any wrappers\n      tabs.push({\n        id: pathAndId,\n        label: (child as JSX.Element).props.title,\n      });\n\n      routes.push({\n        path: pathAndId,\n        element: child.props.element,\n      });\n    });\n\n    // Add catch-all for incorrect sub-routes\n    if ((routes?.[0]?.path ?? '') !== '')\n      routes.push({\n        path: '/*',\n        element: <Navigate to={routes[0].path!} />,\n      });\n\n    const [matchedRoute] =\n      matchRoutes(routes as RouteObject[], `/${params['*']}`) ?? [];\n    const selectedIndex = getSelectedIndexOrDefault(matchedRoute, tabs);\n    const currentTab = tabs[selectedIndex];\n    const title = currentTab?.label;\n\n    const onTabChange = (index: number) =>\n      // Remove trailing /*\n      // And remove leading / for relative navigation\n      // Note! route resolves relative to the position in the React tree,\n      // not relative to current location\n      navigate(tabs[index].id.replace(/\\/\\*$/, '').replace(/^\\//, ''));\n\n    const currentRouteElement = useRoutes(routes);\n\n    if (!currentTab) return null;\n    return (\n      <>\n        <HeaderTabs\n          tabs={tabs}\n          selectedIndex={selectedIndex}\n          onChange={onTabChange}\n        />\n        <Content>\n          <Helmet title={title} />\n          {currentRouteElement}\n        </Content>\n      </>\n    );\n  },\n  Content: (_props: { path: string; title: string; element: JSX.Element }) =>\n    null,\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Entity,\n  ENTITY_DEFAULT_NAMESPACE,\n  RELATION_OWNED_BY,\n} from '@backstage/catalog-model';\nimport {\n  Content,\n  Header,\n  HeaderLabel,\n  IconComponent,\n  Link,\n  Page,\n  Progress,\n  ResponseErrorPanel,\n  WarningPanel,\n} from '@backstage/core';\nimport {\n  EntityContext,\n  EntityRefLinks,\n  getEntityRelations,\n  useEntityCompoundName,\n} from '@backstage/plugin-catalog-react';\nimport { Box } from '@material-ui/core';\nimport React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { EntityContextMenu } from '../EntityContextMenu/EntityContextMenu';\nimport { FavouriteEntity } from '../FavouriteEntity/FavouriteEntity';\nimport { UnregisterEntityDialog } from '../UnregisterEntityDialog/UnregisterEntityDialog';\nimport { Tabbed } from './Tabbed';\n\nconst EntityPageTitle = ({\n  entity,\n  title,\n}: {\n  title: string;\n  entity: Entity | undefined;\n}) => (\n  <Box display=\"inline-flex\" alignItems=\"center\" height=\"1em\">\n    {title}\n    {entity && <FavouriteEntity entity={entity} />}\n  </Box>\n);\n\nconst EntityLabels = ({ entity }: { entity: Entity }) => {\n  const ownedByRelations = getEntityRelations(entity, RELATION_OWNED_BY);\n  return (\n    <>\n      {ownedByRelations.length > 0 && (\n        <HeaderLabel\n          label=\"Owner\"\n          value={\n            <EntityRefLinks\n              entityRefs={ownedByRelations}\n              defaultKind=\"Group\"\n              color=\"inherit\"\n            />\n          }\n        />\n      )}\n      {entity.spec?.lifecycle && (\n        <HeaderLabel label=\"Lifecycle\" value={entity.spec.lifecycle} />\n      )}\n    </>\n  );\n};\n\nconst headerProps = (\n  kind: string,\n  namespace: string | undefined,\n  name: string,\n  entity: Entity | undefined,\n): { headerTitle: string; headerType: string } => {\n  return {\n    headerTitle: `${name}${\n      namespace && namespace !== ENTITY_DEFAULT_NAMESPACE\n        ? ` in ${namespace}`\n        : ''\n    }`,\n    headerType: (() => {\n      let t = kind.toLocaleLowerCase('en-US');\n      if (entity && entity.spec && 'type' in entity.spec) {\n        t += ' — ';\n        t += (entity.spec as { type: string }).type.toLocaleLowerCase('en-US');\n      }\n      return t;\n    })(),\n  };\n};\n\n// NOTE(freben): Intentionally not exported at this point, since it's part of\n// the unstable extra context menu items concept below\ntype ExtraContextMenuItem = {\n  title: string;\n  Icon: IconComponent;\n  onClick: () => void;\n};\n\ntype EntityPageLayoutProps = {\n  UNSTABLE_extraContextMenuItems?: ExtraContextMenuItem[];\n  children?: React.ReactNode;\n};\n\nexport const EntityPageLayout = ({\n  children,\n  UNSTABLE_extraContextMenuItems,\n}: EntityPageLayoutProps) => {\n  const { kind, namespace, name } = useEntityCompoundName();\n  const { entity, loading, error } = useContext(EntityContext);\n  const { headerTitle, headerType } = headerProps(\n    kind,\n    namespace,\n    name,\n    entity!,\n  );\n\n  const [confirmationDialogOpen, setConfirmationDialogOpen] = useState(false);\n  const navigate = useNavigate();\n  const cleanUpAfterRemoval = async () => {\n    setConfirmationDialogOpen(false);\n    navigate('/');\n  };\n\n  const showRemovalDialog = () => setConfirmationDialogOpen(true);\n\n  return (\n    <Page themeId={entity?.spec?.type?.toString() ?? 'home'}>\n      <Header\n        title={<EntityPageTitle title={headerTitle} entity={entity!} />}\n        pageTitleOverride={headerTitle}\n        type={headerType}\n      >\n        {/* TODO: Make entity labels configurable for entity kind / type */}\n        {entity && (\n          <>\n            <EntityLabels entity={entity} />\n            <EntityContextMenu\n              UNSTABLE_extraContextMenuItems={UNSTABLE_extraContextMenuItems}\n              onUnregisterEntity={showRemovalDialog}\n            />\n          </>\n        )}\n      </Header>\n\n      {loading && (\n        <Content>\n          <Progress />\n        </Content>\n      )}\n\n      {entity && <Tabbed.Layout>{children}</Tabbed.Layout>}\n\n      {error && (\n        <Content>\n          <ResponseErrorPanel error={error} />\n        </Content>\n      )}\n\n      {!loading && !error && !entity && (\n        <Content>\n          <WarningPanel title=\"Entity not found\">\n            There is no {kind} with the requested{' '}\n            <Link to=\"https://backstage.io/docs/features/software-catalog/references\">\n              kind, namespace, and name\n            </Link>\n            .\n          </WarningPanel>\n        </Content>\n      )}\n\n      <UnregisterEntityDialog\n        open={confirmationDialogOpen}\n        entity={entity!}\n        onConfirm={cleanUpAfterRemoval}\n        onClose={() => setConfirmationDialogOpen(false)}\n      />\n    </Page>\n  );\n};\n\nEntityPageLayout.Content = Tabbed.Content;\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { EntityRefLink, EntityRefLinks } from '@backstage/plugin-catalog-react';\nimport { OverflowTooltip, TableColumn } from '@backstage/core';\nimport { Chip } from '@material-ui/core';\nimport { EntityRow } from './types';\n\nexport function createNameColumn(): TableColumn<EntityRow> {\n  return {\n    title: 'Name',\n    field: 'resolved.name',\n    highlight: true,\n    render: ({ entity }) => (\n      <EntityRefLink entityRef={entity} defaultKind=\"Component\" />\n    ),\n  };\n}\n\nexport function createSystemColumn(): TableColumn<EntityRow> {\n  return {\n    title: 'System',\n    field: 'resolved.partOfSystemRelationTitle',\n    render: ({ resolved }) => (\n      <EntityRefLinks\n        entityRefs={resolved.partOfSystemRelations}\n        defaultKind=\"system\"\n      />\n    ),\n  };\n}\n\nexport function createOwnerColumn(): TableColumn<EntityRow> {\n  return {\n    title: 'Owner',\n    field: 'resolved.ownedByRelationsTitle',\n    render: ({ resolved }) => (\n      <EntityRefLinks\n        entityRefs={resolved.ownedByRelations}\n        defaultKind=\"group\"\n      />\n    ),\n  };\n}\n\nexport function createSpecTypeColumn(): TableColumn<EntityRow> {\n  return {\n    title: 'Type',\n    field: 'entity.spec.type',\n    hidden: true,\n  };\n}\n\nexport function createSpecLifecycleColumn(): TableColumn<EntityRow> {\n  return {\n    title: 'Lifecycle',\n    field: 'entity.spec.lifecycle',\n  };\n}\n\nexport function createMetadataDescriptionColumn(): TableColumn<EntityRow> {\n  return {\n    title: 'Description',\n    field: 'entity.metadata.description',\n    render: ({ entity }) => (\n      <OverflowTooltip\n        text={entity.metadata.description}\n        placement=\"bottom-start\"\n      />\n    ),\n    width: 'auto',\n  };\n}\n\nexport function createTagsColumn(): TableColumn<EntityRow> {\n  return {\n    title: 'Tags',\n    field: 'entity.metadata.tags',\n    cellStyle: {\n      padding: '0px 16px 0px 20px',\n    },\n    render: ({ entity }) => (\n      <>\n        {entity.metadata.tags &&\n          entity.metadata.tags.map(t => (\n            <Chip\n              key={t}\n              label={t}\n              size=\"small\"\n              variant=\"outlined\"\n              style={{ marginBottom: '0px' }}\n            />\n          ))}\n      </>\n    ),\n  };\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Entity,\n  RELATION_OWNED_BY,\n  RELATION_PART_OF,\n} from '@backstage/catalog-model';\nimport {\n  CodeSnippet,\n  Table,\n  TableColumn,\n  TableProps,\n  WarningPanel,\n} from '@backstage/core';\nimport {\n  formatEntityRefTitle,\n  getEntityRelations,\n  useStarredEntities,\n} from '@backstage/plugin-catalog-react';\nimport Edit from '@material-ui/icons/Edit';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport React from 'react';\nimport {\n  getEntityMetadataEditUrl,\n  getEntityMetadataViewUrl,\n} from '../../utils';\nimport {\n  favouriteEntityIcon,\n  favouriteEntityTooltip,\n} from '../FavouriteEntity/FavouriteEntity';\nimport * as columnFactories from './columns';\nimport { EntityRow } from './types';\n\nconst defaultColumns: TableColumn<EntityRow>[] = [\n  columnFactories.createNameColumn(),\n  columnFactories.createSystemColumn(),\n  columnFactories.createOwnerColumn(),\n  columnFactories.createSpecTypeColumn(),\n  columnFactories.createSpecLifecycleColumn(),\n  columnFactories.createMetadataDescriptionColumn(),\n  columnFactories.createTagsColumn(),\n];\n\ntype CatalogTableProps = {\n  entities: Entity[];\n  titlePreamble: string;\n  loading: boolean;\n  error?: any;\n  view?: string;\n  columns?: TableColumn<EntityRow>[];\n};\n\nexport const CatalogTable = ({\n  entities,\n  loading,\n  error,\n  titlePreamble,\n  view,\n  columns,\n}: CatalogTableProps) => {\n  const { isStarredEntity, toggleStarredEntity } = useStarredEntities();\n\n  if (error) {\n    return (\n      <div>\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not fetch catalog entities.\"\n        >\n          <CodeSnippet language=\"text\" text={error.toString()} />\n        </WarningPanel>\n      </div>\n    );\n  }\n\n  const actions: TableProps<EntityRow>['actions'] = [\n    ({ entity }) => {\n      const url = getEntityMetadataViewUrl(entity);\n      return {\n        icon: () => <OpenInNew fontSize=\"small\" />,\n        tooltip: 'View',\n        disabled: !url,\n        onClick: () => {\n          if (!url) return;\n          window.open(url, '_blank');\n        },\n      };\n    },\n    ({ entity }) => {\n      const url = getEntityMetadataEditUrl(entity);\n      return {\n        icon: () => <Edit fontSize=\"small\" />,\n        tooltip: 'Edit',\n        disabled: !url,\n        onClick: () => {\n          if (!url) return;\n          window.open(url, '_blank');\n        },\n      };\n    },\n    ({ entity }) => {\n      const isStarred = isStarredEntity(entity);\n      return {\n        cellStyle: { paddingLeft: '1em' },\n        icon: () => favouriteEntityIcon(isStarred),\n        tooltip: favouriteEntityTooltip(isStarred),\n        onClick: () => toggleStarredEntity(entity),\n      };\n    },\n  ];\n\n  const rows = entities.map(entity => {\n    const partOfSystemRelations = getEntityRelations(entity, RELATION_PART_OF, {\n      kind: 'system',\n    });\n    const ownedByRelations = getEntityRelations(entity, RELATION_OWNED_BY);\n\n    return {\n      entity,\n      resolved: {\n        name: formatEntityRefTitle(entity, {\n          defaultKind: 'Component',\n        }),\n        ownedByRelationsTitle: ownedByRelations\n          .map(r => formatEntityRefTitle(r, { defaultKind: 'group' }))\n          .join(', '),\n        ownedByRelations,\n        partOfSystemRelationTitle: partOfSystemRelations\n          .map(r =>\n            formatEntityRefTitle(r, {\n              defaultKind: 'system',\n            }),\n          )\n          .join(', '),\n        partOfSystemRelations,\n      },\n    };\n  });\n\n  const typeColumn = (columns || defaultColumns).find(c => c.title === 'Type');\n  if (typeColumn) {\n    typeColumn.hidden = view !== 'Other';\n  }\n\n  return (\n    <Table<EntityRow>\n      isLoading={loading}\n      columns={columns || defaultColumns}\n      options={{\n        paging: true,\n        pageSize: 20,\n        actionsColumnIndex: -1,\n        loadingType: 'linear',\n        showEmptyDataSourceMessage: !loading,\n        padding: 'dense',\n        pageSizeOptions: [20, 50, 100],\n      }}\n      title={`${titlePreamble} (${(entities && entities.length) || 0})`}\n      data={rows}\n      actions={actions}\n    />\n  );\n};\n\nCatalogTable.columns = columnFactories;\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  Children,\n  Fragment,\n  isValidElement,\n  PropsWithChildren,\n  ReactNode,\n  useMemo,\n} from 'react';\n\nconst EntitySwitchCase = (_: {\n  if?: (entity: Entity) => boolean;\n  children: ReactNode;\n}) => null;\n\ntype SwitchCase = {\n  if?: (entity: Entity) => boolean;\n  children: JSX.Element;\n};\n\nfunction createSwitchCasesFromChildren(childrenNode: ReactNode): SwitchCase[] {\n  return Children.toArray(childrenNode).flatMap(child => {\n    if (!isValidElement(child)) {\n      return [];\n    }\n\n    if (child.type === Fragment) {\n      return createSwitchCasesFromChildren(child.props.children);\n    }\n\n    if (child.type !== EntitySwitchCase) {\n      throw new Error(`Child of EntitySwitch is not an EntitySwitch.Case`);\n    }\n\n    const { if: condition, children } = child.props;\n    return [{ if: condition, children }];\n  });\n}\n\nexport const EntitySwitch = ({ children }: PropsWithChildren<{}>) => {\n  const { entity } = useEntity();\n  const switchCases = useMemo(() => createSwitchCasesFromChildren(children), [\n    children,\n  ]);\n\n  const matchingCase = switchCases.find(switchCase =>\n    switchCase.if ? switchCase.if(entity) : true,\n  );\n  return matchingCase?.children ?? null;\n};\n\nEntitySwitch.Case = EntitySwitchCase;\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, ComponentEntity } from '@backstage/catalog-model';\n\nfunction strCmp(a: string | undefined, b: string | undefined): boolean {\n  return Boolean(a && a?.toLowerCase() === b?.toLowerCase());\n}\n\nexport function isKind(kind: string) {\n  return (entity: Entity) => strCmp(entity?.kind, kind);\n}\n\nexport function isComponentType(type: string) {\n  return (entity: Entity) => {\n    if (!strCmp(entity?.kind, 'component')) {\n      return false;\n    }\n    const componentEntity = entity as ComponentEntity;\n    return strCmp(componentEntity.spec.type, type);\n  };\n}\n\nexport function isNamespace(namespace: string) {\n  return (entity: Entity) => strCmp(entity?.metadata?.namespace, namespace);\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { createContext } from 'react';\nimport { FilterGroup, FilterGroupStates } from './types';\n\nexport type FilterGroupsContext = {\n  register: (\n    filterGroupId: string,\n    filterGroup: FilterGroup,\n    initialSelectedFilterIds?: string[],\n  ) => void;\n  unregister: (filterGroupId: string) => void;\n  setGroupSelectedFilters: (filterGroupId: string, filterIds: string[]) => void;\n  setSelectedTags: (tags: string[]) => void;\n  reload: () => Promise<void>;\n  loading: boolean;\n  error?: Error;\n  filterGroupStates: { [filterGroupId: string]: FilterGroupStates };\n  matchingEntities: Entity[];\n  availableTags: string[];\n  isCatalogEmpty: boolean;\n};\n\n/**\n * The context that maintains shared state for all visible filter groups.\n */\nexport const filterGroupsContext = createContext<\n  FilterGroupsContext | undefined\n>(undefined);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useAsyncFn } from 'react-use';\nimport { filterGroupsContext, FilterGroupsContext } from './context';\nimport {\n  EntityFilterFn,\n  FilterGroup,\n  FilterGroupState,\n  FilterGroupStates,\n} from './types';\n\n/**\n * Implementation of the shared filter groups state.\n */\nexport const EntityFilterGroupsProvider = ({\n  children,\n}: {\n  children?: React.ReactNode;\n}) => {\n  const state = useProvideEntityFilters();\n  return (\n    <filterGroupsContext.Provider value={state}>\n      {children}\n    </filterGroupsContext.Provider>\n  );\n};\n\n// The hook that implements the actual context building\nfunction useProvideEntityFilters(): FilterGroupsContext {\n  const catalogApi = useApi(catalogApiRef);\n  const [{ value: entities, error }, doReload] = useAsyncFn(async () => {\n    const response = await catalogApi.getEntities({\n      filter: { kind: 'Component' },\n    });\n    return response.items;\n  });\n\n  const filterGroups = useRef<{\n    [filterGroupId: string]: FilterGroup;\n  }>({});\n  const selectedFilterKeys = useRef<{\n    [filterGroupId: string]: Set<string>;\n  }>({});\n  const selectedTags = useRef<string[]>([]);\n  const [filterGroupStates, setFilterGroupStates] = useState<{\n    [filterGroupId: string]: FilterGroupStates;\n  }>({});\n  const [matchingEntities, setMatchingEntities] = useState<Entity[]>([]);\n  const [availableTags, setAvailableTags] = useState<string[]>([]);\n  const [isCatalogEmpty, setCatalogEmpty] = useState<boolean>(false);\n\n  useEffect(() => {\n    doReload();\n  }, [doReload]);\n\n  const rebuild = useCallback(() => {\n    setFilterGroupStates(\n      buildStates(\n        filterGroups.current,\n        selectedFilterKeys.current,\n        selectedTags.current,\n        entities,\n        error,\n      ),\n    );\n    setMatchingEntities(\n      buildMatchingEntities(\n        filterGroups.current,\n        selectedFilterKeys.current,\n        selectedTags.current,\n        entities,\n      ),\n    );\n    setAvailableTags(collectTags(entities));\n    setCatalogEmpty(entities !== undefined && entities.length === 0);\n  }, [entities, error]);\n\n  const register = useCallback(\n    (\n      filterGroupId: string,\n      filterGroup: FilterGroup,\n      initialSelectedFilterIds?: string[],\n    ) => {\n      filterGroups.current[filterGroupId] = filterGroup;\n      selectedFilterKeys.current[filterGroupId] = new Set(\n        initialSelectedFilterIds ?? [],\n      );\n      rebuild();\n    },\n    [rebuild],\n  );\n\n  const unregister = useCallback(\n    (filterGroupId: string) => {\n      delete filterGroups.current[filterGroupId];\n      delete selectedFilterKeys.current[filterGroupId];\n      rebuild();\n    },\n    [rebuild],\n  );\n\n  const setGroupSelectedFilters = useCallback(\n    (filterGroupId: string, filters: string[]) => {\n      selectedFilterKeys.current[filterGroupId] = new Set(filters);\n      rebuild();\n    },\n    [rebuild],\n  );\n\n  const setSelectedTags = useCallback(\n    (tags: string[]) => {\n      selectedTags.current = tags;\n      rebuild();\n    },\n    [rebuild],\n  );\n\n  const reload = useCallback(async () => {\n    await doReload();\n  }, [doReload]);\n\n  return {\n    register,\n    unregister,\n    setGroupSelectedFilters,\n    setSelectedTags,\n    reload,\n    loading: !error && !entities,\n    error,\n    filterGroupStates,\n    matchingEntities,\n    availableTags,\n    isCatalogEmpty,\n  };\n}\n\n// Given all filter groups and what filters are actually selected, along with\n// the loading state for entities, generate the state of each individual filter\nfunction buildStates(\n  filterGroups: { [filterGroupId: string]: FilterGroup },\n  selectedFilterKeys: { [filterGroupId: string]: Set<string> },\n  selectedTags: string[],\n  entities?: Entity[],\n  error?: Error,\n): { [filterGroupId: string]: FilterGroupStates } {\n  // On error - all entries are an error state\n  if (error) {\n    return Object.fromEntries(\n      Object.keys(filterGroups).map(filterGroupId => [\n        filterGroupId,\n        { type: 'error', error },\n      ]),\n    );\n  }\n\n  // On startup - all entries are a loading state\n  if (!entities) {\n    return Object.fromEntries(\n      Object.keys(filterGroups).map(filterGroupId => [\n        filterGroupId,\n        { type: 'loading' },\n      ]),\n    );\n  }\n\n  const result: { [filterGroupId: string]: FilterGroupStates } = {};\n  for (const [filterGroupId, filterGroup] of Object.entries(filterGroups)) {\n    const otherMatchingEntities = buildMatchingEntities(\n      filterGroups,\n      selectedFilterKeys,\n      selectedTags,\n      entities,\n      filterGroupId,\n    );\n    const groupState: FilterGroupState = { filters: {} };\n    for (const [filterId, filterFn] of Object.entries(filterGroup.filters)) {\n      const isSelected = !!selectedFilterKeys[filterGroupId]?.has(filterId);\n      const matchCount = otherMatchingEntities.filter(entity =>\n        filterFn(entity),\n      ).length;\n      groupState.filters[filterId] = { isSelected, matchCount };\n    }\n    result[filterGroupId] = { type: 'ready', state: groupState };\n  }\n\n  return result;\n}\n\n// Given all entites, find all possible tags and provide them in a sorted list.\nfunction collectTags(entities?: Entity[]): string[] {\n  const tags = new Set<string>();\n  (entities || []).forEach(e => {\n    if (e.metadata.tags) {\n      e.metadata.tags.forEach(t => tags.add(t));\n    }\n  });\n  return Array.from(tags).sort();\n}\n\n// Given all filter groups and what filters are actually selected, extract all\n// entities that match all those filter groups.\nfunction buildMatchingEntities(\n  filterGroups: { [filterGroupId: string]: FilterGroup },\n  selectedFilterKeys: { [filterGroupId: string]: Set<string> },\n  selectedTags: string[],\n  entities?: Entity[],\n  excludeFilterGroupId?: string,\n): Entity[] {\n  // Build one filter fn per filter group\n  const allFilters: EntityFilterFn[] = [];\n  for (const [filterGroupId, filterGroup] of Object.entries(filterGroups)) {\n    if (excludeFilterGroupId === filterGroupId) {\n      continue;\n    }\n\n    // Pick out all of the filter functions in the group that are actually\n    // selected\n    const groupFilters: EntityFilterFn[] = [];\n    for (const [filterId, filterFn] of Object.entries(filterGroup.filters)) {\n      if (!!selectedFilterKeys[filterGroupId]?.has(filterId)) {\n        groupFilters.push(filterFn);\n      }\n    }\n\n    // Need to match any of the selected filters in the group - if there is\n    // any at all\n    if (groupFilters.length) {\n      allFilters.push(entity => groupFilters.some(fn => fn(entity)));\n    }\n  }\n\n  // Filter by tags, if at least one tag is selected. Include all entities\n  // that have at least one of the selected tags\n  if (selectedTags.length > 0) {\n    allFilters.push(\n      entity =>\n        !!entity.metadata.tags &&\n        entity.metadata.tags.some(t => selectedTags.includes(t)),\n    );\n  }\n\n  // All filter groups that had any checked filters need to match. Note that\n  // every() always returns true for an empty array.\n  return entities?.filter(entity => allFilters.every(fn => fn(entity))) ?? [];\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useContext, useEffect, useMemo } from 'react';\nimport { filterGroupsContext } from './context';\nimport { FilterGroup, FilterGroupStates } from './types';\n\nexport type EntityFilterGroupOutput = {\n  state: FilterGroupStates;\n  setSelectedFilters: (filterIds: string[]) => void;\n};\n\n/**\n * Hook that exposes the relevant data and operations for a single filter\n * group.\n */\nexport const useEntityFilterGroup = (\n  filterGroupId: string,\n  filterGroup: FilterGroup,\n  initialSelectedFilters?: string[],\n): EntityFilterGroupOutput => {\n  const context = useContext(filterGroupsContext);\n  if (!context) {\n    throw new Error(`Must be used inside an EntityFilterGroupsProvider`);\n  }\n  const {\n    register,\n    unregister,\n    setGroupSelectedFilters,\n    filterGroupStates,\n  } = context;\n\n  // on state changes unregisters and registers the filtergroup\n  // ensure that it re-registers with the correct filter as the prop changes and not the default\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const initialMemo = useMemo(() => {\n    return initialSelectedFilters?.slice();\n  }, [initialSelectedFilters]);\n\n  // Register the group on mount, and unregister on unmount\n  useEffect(() => {\n    register(filterGroupId, filterGroup, initialMemo);\n    return () => unregister(filterGroupId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [register, unregister, filterGroupId, filterGroup]);\n\n  const setSelectedFilters = useCallback(\n    (filters: string[]) => {\n      setGroupSelectedFilters(filterGroupId, filters);\n    },\n    [setGroupSelectedFilters, filterGroupId],\n  );\n\n  let state = filterGroupStates[filterGroupId];\n  if (!state) {\n    state = { type: 'loading' };\n  }\n\n  return { state, setSelectedFilters };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useContext } from 'react';\nimport { filterGroupsContext } from './context';\n\n/**\n * Hook that exposes the result of applying a set of filter groups.\n */\nexport function useFilteredEntities() {\n  const context = useContext(filterGroupsContext);\n  if (!context) {\n    throw new Error(`Must be used inside an EntityFilterGroupsProvider`);\n  }\n\n  return {\n    loading: context.loading,\n    error: context.error,\n    matchingEntities: context.matchingEntities,\n    availableTags: context.availableTags,\n    isCatalogEmpty: context.isCatalogEmpty,\n    reload: context.reload,\n  };\n}\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createExternalRouteRef } from '@backstage/core';\n\nexport const createComponentRouteRef = createExternalRouteRef({\n  id: 'create-component',\n  optional: true,\n});\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { IconComponent } from '@backstage/core';\nimport {\n  Card,\n  List,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  MenuItem,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { FilterGroup, useEntityFilterGroup } from '../../filter';\n\nexport type ButtonGroup = {\n  name: string;\n  items: {\n    id: string;\n    label: string;\n    icon?: IconComponent;\n    filterFn: (entity: Entity) => boolean;\n  }[];\n};\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .11)',\n    boxShadow: 'none',\n  },\n  title: {\n    margin: theme.spacing(1, 0, 0, 1),\n    textTransform: 'uppercase',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  listIcon: {\n    minWidth: 30,\n    color: theme.palette.text.primary,\n  },\n  menuItem: {\n    minHeight: theme.spacing(6),\n  },\n  groupWrapper: {\n    margin: theme.spacing(1, 1, 2, 1),\n  },\n  menuTitle: {\n    fontWeight: 500,\n  },\n}));\n\ntype OnChangeCallback = (item: { id: string; label: string }) => void;\n\ntype Props = {\n  buttonGroups: ButtonGroup[];\n  initiallySelected: string;\n  onChange?: OnChangeCallback;\n};\n\n/**\n * Sidebar filter type and human readable label for it. owned/starred/all\n */\nexport type CatalogFilterType = {\n  id: string;\n  label: string;\n};\n\n/**\n * The main filter group in the sidebar, toggling owned/starred/all.\n */\nexport const CatalogFilter = ({\n  buttonGroups,\n  onChange,\n  initiallySelected,\n}: Props) => {\n  const classes = useStyles();\n  const { currentFilter, setCurrentFilter, getFilterCount } = useFilter(\n    buttonGroups,\n    initiallySelected,\n  );\n\n  const onChangeRef = useRef<OnChangeCallback>();\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  const setCurrent = useCallback(\n    (item: { id: string; label: string }) => {\n      setCurrentFilter(item.id);\n      onChangeRef.current?.({ id: item.id, label: item.label });\n    },\n    [setCurrentFilter],\n  );\n\n  // Make one initial onChange to inform the surroundings about the selected\n  // item\n  useEffect(() => {\n    const items = buttonGroups.flatMap(g => g.items);\n    const item = items.find(i => i.id === initiallySelected) || items[0];\n    if (item) {\n      onChangeRef.current?.({ id: item.id, label: item.label });\n    }\n    // intentionally only happens on startup\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Card className={classes.root}>\n      {buttonGroups.map(group => (\n        <React.Fragment key={group.name}>\n          <Typography variant=\"subtitle2\" className={classes.title}>\n            {group.name}\n          </Typography>\n          <Card className={classes.groupWrapper}>\n            <List disablePadding dense>\n              {group.items.map(item => (\n                <MenuItem\n                  key={item.id}\n                  button\n                  divider\n                  onClick={() => setCurrent(item)}\n                  selected={item.id === currentFilter}\n                  className={classes.menuItem}\n                >\n                  {item.icon && (\n                    <ListItemIcon className={classes.listIcon}>\n                      <item.icon fontSize=\"small\" />\n                    </ListItemIcon>\n                  )}\n                  <ListItemText>\n                    <Typography variant=\"body1\" className={classes.menuTitle}>\n                      {item.label}\n                    </Typography>\n                  </ListItemText>\n                  <ListItemSecondaryAction>\n                    {getFilterCount(item.id) ?? '-'}\n                  </ListItemSecondaryAction>\n                </MenuItem>\n              ))}\n            </List>\n          </Card>\n        </React.Fragment>\n      ))}\n    </Card>\n  );\n};\n\nfunction useFilter(\n  buttonGroups: ButtonGroup[],\n  initiallySelected: string,\n): {\n  currentFilter: string;\n  setCurrentFilter: (filterId: string) => void;\n  getFilterCount: (filterId: string) => number | undefined;\n} {\n  const [currentFilter, setCurrentFilter] = useState(initiallySelected);\n\n  const filterGroup = useMemo<FilterGroup>(\n    () => ({\n      filters: Object.fromEntries(\n        buttonGroups.flatMap(g => g.items).map(i => [i.id, i.filterFn]),\n      ),\n    }),\n    [buttonGroups],\n  );\n\n  const { setSelectedFilters, state } = useEntityFilterGroup(\n    'primary-sidebar',\n    filterGroup,\n    [initiallySelected],\n  );\n\n  const setCurrent = useCallback(\n    (filterId: string) => {\n      setCurrentFilter(filterId);\n      setSelectedFilters([filterId]);\n    },\n    [setCurrentFilter, setSelectedFilters],\n  );\n\n  const getFilterCount = useCallback(\n    (filterId: string) => {\n      if (state.type !== 'ready') {\n        return undefined;\n      }\n      return state.state.filters[filterId].matchCount;\n    },\n    [state],\n  );\n\n  return {\n    currentFilter,\n    setCurrentFilter: setCurrent,\n    getFilterCount,\n  };\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { filterGroupsContext } from '../../filter/context';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  filterBox: {\n    display: 'flex',\n    margin: theme.spacing(2, 0, 0, 0),\n  },\n  filterBoxTitle: {\n    margin: theme.spacing(1, 0, 0, 1),\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  title: {\n    margin: theme.spacing(1, 0, 0, 1),\n    textTransform: 'uppercase',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  checkbox: {\n    padding: theme.spacing(0, 1, 0, 1),\n  },\n}));\n\ntype Props = {\n  availableTags: string[];\n};\n\n/**\n * The additional results filter in the sidebar.\n */\nexport const ResultsFilter = ({ availableTags }: Props) => {\n  const classes = useStyles();\n\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  const context = useContext(filterGroupsContext);\n  if (!context) {\n    throw new Error(`Must be used inside an EntityFilterGroupsProvider`);\n  }\n  const setSelectedTagsFilter = context?.setSelectedTags;\n\n  const updateSelectedTags = useCallback(\n    (tags: string[]) => {\n      setSelectedTags(tags);\n      setSelectedTagsFilter(tags);\n    },\n    [setSelectedTags, setSelectedTagsFilter],\n  );\n\n  return (\n    <>\n      <div className={classes.filterBox}>\n        <Typography variant=\"subtitle2\" className={classes.filterBoxTitle}>\n          Refine Results\n        </Typography>{' '}\n        <Button onClick={() => updateSelectedTags([])}>Clear</Button>\n      </div>\n      <Divider />\n      <Typography variant=\"subtitle2\" className={classes.title}>\n        Tags\n      </Typography>\n      <List disablePadding dense>\n        {availableTags.map(t => {\n          const labelId = `checkbox-list-label-${t}`;\n          return (\n            <ListItem\n              key={t}\n              dense\n              button\n              onClick={() =>\n                updateSelectedTags(\n                  selectedTags.includes(t)\n                    ? selectedTags.filter(s => s !== t)\n                    : [...selectedTags, t],\n                )\n              }\n            >\n              <Checkbox\n                edge=\"start\"\n                color=\"primary\"\n                checked={selectedTags.includes(t)}\n                tabIndex={-1}\n                disableRipple\n                className={classes.checkbox}\n                inputProps={{ 'aria-labelledby': labelId }}\n              />\n              <ListItemText id={labelId} primary={t} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserEntity } from '@backstage/catalog-model';\nimport { identityApiRef, useApi } from '@backstage/core';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { useAsync } from 'react-use';\nimport { AsyncState } from 'react-use/lib/useAsync';\n\n/**\n * Get the catalog User entity (if any) that matches the logged-in user.\n */\nexport function useOwnUser(): AsyncState<UserEntity | undefined> {\n  const catalogApi = useApi(catalogApiRef);\n  const identityApi = useApi(identityApiRef);\n\n  // TODO: get the full entity (or at least the full entity name) from the\n  // identityApi\n  return useAsync(\n    () =>\n      catalogApi.getEntityByName({\n        kind: 'User',\n        namespace: 'default',\n        name: identityApi.getUserId(),\n      }) as Promise<UserEntity | undefined>,\n    [catalogApi, identityApi],\n  );\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { configApiRef, Header, Page, useApi } from '@backstage/core';\nimport React from 'react';\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nconst CatalogLayout = ({ children }: Props) => {\n  const orgName =\n    useApi(configApiRef).getOptionalString('organization.name') ?? 'Backstage';\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        title={`${orgName} Catalog`}\n        subtitle={`Catalog of software components at ${orgName}`}\n        pageTitleOverride=\"Home\"\n      />\n      {children}\n    </Page>\n  );\n};\n\nexport default CatalogLayout;\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { HeaderTabs } from '@backstage/core';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { FilterGroup, useEntityFilterGroup } from '../../filter';\n\n/**\n * A component type, and a human readable label for it.\n */\nexport type LabeledComponentType = {\n  id: string;\n  label: string;\n};\n\n/**\n * Called on mount, and when the selected tab changes.\n */\nexport type OnChangeCallback = (tab: LabeledComponentType) => void;\n\ntype Props = {\n  tabs: LabeledComponentType[];\n  onChange?: OnChangeCallback;\n};\n\n/**\n * The tabs at the top of the catalog list page, for component type filtering.\n */\nexport const CatalogTabs = ({ tabs, onChange }: Props) => {\n  const filterGroup = useMemo<FilterGroup>(() => {\n    const otherType = 'other';\n    const wellKnownTypes = tabs.map(t => t.id).filter(t => t !== otherType);\n    const isOtherType = (entity: Entity) =>\n      !wellKnownTypes.includes(entity.spec?.type as string);\n\n    return {\n      filters: Object.fromEntries(\n        tabs.map(t => [\n          t.id,\n          (entity: Entity) =>\n            (t.id === otherType && isOtherType(entity)) ||\n            entity.spec?.type === t.id,\n        ]),\n      ),\n    };\n  }, [tabs]);\n\n  const { setSelectedFilters } = useEntityFilterGroup('type', filterGroup, [\n    tabs[0].id,\n  ]);\n\n  const [currentTabIndex, setCurrentTabIndex] = useState<number>(0);\n\n  // Hold a reference to the callback\n  const onChangeRef = useRef<OnChangeCallback>();\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  useEffect(() => {\n    onChangeRef.current?.(tabs[currentTabIndex]);\n  }, [tabs, currentTabIndex]);\n\n  const switchTab = useCallback(\n    (index: number) => {\n      const tab = tabs[index];\n      setSelectedFilters([tab.id]);\n      setCurrentTabIndex(index);\n      onChangeRef.current?.(tab);\n    },\n    [tabs, setSelectedFilters],\n  );\n\n  return <HeaderTabs tabs={tabs} onChange={switchTab} />;\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  configApiRef,\n  Content,\n  ContentHeader,\n  errorApiRef,\n  SupportButton,\n  TableColumn,\n  useApi,\n  useRouteRef,\n} from '@backstage/core';\nimport {\n  catalogApiRef,\n  isOwnerOf,\n  useStarredEntities,\n} from '@backstage/plugin-catalog-react';\n\nimport { Button, makeStyles } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport StarIcon from '@material-ui/icons/Star';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { EntityFilterGroupsProvider, useFilteredEntities } from '../../filter';\nimport { createComponentRouteRef } from '../../routes';\nimport {\n  ButtonGroup,\n  CatalogFilter,\n  CatalogFilterType,\n} from '../CatalogFilter/CatalogFilter';\nimport { CatalogTable } from '../CatalogTable/CatalogTable';\nimport { EntityRow } from '../CatalogTable/types';\nimport { ResultsFilter } from '../ResultsFilter/ResultsFilter';\nimport { useOwnUser } from '../useOwnUser';\nimport CatalogLayout from './CatalogLayout';\nimport { CatalogTabs, LabeledComponentType } from './CatalogTabs';\n\nconst useStyles = makeStyles(theme => ({\n  contentWrapper: {\n    display: 'grid',\n    gridTemplateAreas: \"'filters' 'table'\",\n    gridTemplateColumns: '250px 1fr',\n    gridColumnGap: theme.spacing(2),\n  },\n  buttonSpacing: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nexport type CatalogPageProps = {\n  initiallySelectedFilter?: string;\n  columns?: TableColumn<EntityRow>[];\n};\n\nconst CatalogPageContents = (props: CatalogPageProps) => {\n  const styles = useStyles();\n  const {\n    loading,\n    error,\n    reload,\n    matchingEntities,\n    availableTags,\n    isCatalogEmpty,\n  } = useFilteredEntities();\n  const configApi = useApi(configApiRef);\n  const catalogApi = useApi(catalogApiRef);\n  const errorApi = useApi(errorApiRef);\n  const { isStarredEntity } = useStarredEntities();\n  const [selectedTab, setSelectedTab] = useState<string>();\n  const [\n    selectedSidebarItem,\n    setSelectedSidebarItem,\n  ] = useState<CatalogFilterType>();\n  const orgName = configApi.getOptionalString('organization.name') ?? 'Company';\n  const initiallySelectedFilter =\n    selectedSidebarItem?.id ?? props.initiallySelectedFilter ?? 'owned';\n  const createComponentLink = useRouteRef(createComponentRouteRef);\n  const addMockData = useCallback(async () => {\n    try {\n      const promises: Promise<unknown>[] = [];\n      const root = configApi.getConfig('catalog.exampleEntityLocations');\n      for (const type of root.keys()) {\n        for (const target of root.getStringArray(type)) {\n          promises.push(catalogApi.addLocation({ target }));\n        }\n      }\n      await Promise.all(promises);\n      await reload();\n    } catch (err) {\n      errorApi.post(err);\n    }\n  }, [catalogApi, configApi, errorApi, reload]);\n\n  const tabs = useMemo<LabeledComponentType[]>(\n    () => [\n      {\n        id: 'service',\n        label: 'Services',\n      },\n      {\n        id: 'website',\n        label: 'Websites',\n      },\n      {\n        id: 'library',\n        label: 'Libraries',\n      },\n      {\n        id: 'documentation',\n        label: 'Documentation',\n      },\n      {\n        id: 'other',\n        label: 'Other',\n      },\n    ],\n    [],\n  );\n\n  const { value: user } = useOwnUser();\n\n  const filterGroups = useMemo<ButtonGroup[]>(\n    () => [\n      {\n        name: 'Personal',\n        items: [\n          {\n            id: 'owned',\n            label: 'Owned',\n            icon: SettingsIcon,\n            filterFn: entity => user !== undefined && isOwnerOf(user, entity),\n          },\n          {\n            id: 'starred',\n            label: 'Starred',\n            icon: StarIcon,\n            filterFn: isStarredEntity,\n          },\n        ],\n      },\n      {\n        name: orgName,\n        items: [\n          {\n            id: 'all',\n            label: 'All',\n            filterFn: () => true,\n          },\n        ],\n      },\n    ],\n    [isStarredEntity, orgName, user],\n  );\n\n  const showAddExampleEntities =\n    configApi.has('catalog.exampleEntityLocations') && isCatalogEmpty;\n\n  return (\n    <CatalogLayout>\n      <CatalogTabs\n        tabs={tabs}\n        onChange={({ label }) => setSelectedTab(label)}\n      />\n      <Content>\n        <ContentHeader title={selectedTab ?? ''}>\n          {createComponentLink && (\n            <Button\n              component={RouterLink}\n              variant=\"contained\"\n              color=\"primary\"\n              to={createComponentLink()}\n            >\n              Create Component\n            </Button>\n          )}\n          {showAddExampleEntities && (\n            <Button\n              className={styles.buttonSpacing}\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={addMockData}\n            >\n              Add example components\n            </Button>\n          )}\n          <SupportButton>All your software catalog entities</SupportButton>\n        </ContentHeader>\n        <div className={styles.contentWrapper}>\n          <div>\n            <CatalogFilter\n              buttonGroups={filterGroups}\n              onChange={({ label, id }) =>\n                setSelectedSidebarItem({ label, id })\n              }\n              initiallySelected={initiallySelectedFilter}\n            />\n            <ResultsFilter availableTags={availableTags} />\n          </div>\n          <CatalogTable\n            titlePreamble={selectedSidebarItem?.label ?? ''}\n            view={selectedTab}\n            columns={props.columns}\n            entities={matchingEntities}\n            loading={loading}\n            error={error}\n          />\n        </div>\n      </Content>\n    </CatalogLayout>\n  );\n};\n\nexport const CatalogPage = (props: CatalogPageProps) => (\n  <EntityFilterGroupsProvider>\n    <CatalogPageContents {...props} />\n  </EntityFilterGroupsProvider>\n);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  EntityContext,\n  useEntityFromUrl,\n} from '@backstage/plugin-catalog-react';\nimport React, { ReactNode } from 'react';\n\nexport const EntityLoaderProvider = ({ children }: { children: ReactNode }) => {\n  const { entity, loading, error } = useEntityFromUrl();\n\n  return (\n    <EntityContext.Provider value={{ entity, loading, error }}>\n      {children}\n    </EntityContext.Provider>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport IlloSvgUrl from './illo.svg';\n\nconst useStyles = makeStyles(theme => ({\n  illo: {\n    maxWidth: '60%',\n    top: 100,\n    right: 20,\n    position: 'absolute',\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '96%',\n      position: 'relative',\n      top: 'unset',\n      right: 'unset',\n      margin: `${theme.spacing(10)}px auto ${theme.spacing(4)}px`,\n    },\n  },\n}));\n\nexport const Illo = () => {\n  const classes = useStyles();\n  return (\n    <img\n      src={IlloSvgUrl}\n      className={classes.illo}\n      alt=\"Illustration on entity not found page\"\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Grid, Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BackstageTheme } from '@backstage/theme';\n\nimport { Illo } from './Illo';\n\nconst useStyles = makeStyles<BackstageTheme>(theme => ({\n  container: {\n    paddingTop: theme.spacing(24),\n    paddingLeft: theme.spacing(8),\n    [theme.breakpoints.down('xs')]: {\n      padding: theme.spacing(2),\n    },\n  },\n  title: {\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      fontSize: 32,\n    },\n  },\n  body: {\n    paddingBottom: theme.spacing(6),\n    [theme.breakpoints.down('xs')]: {\n      paddingBottom: theme.spacing(5),\n    },\n  },\n}));\n\nexport const EntityNotFound = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={0} className={classes.container}>\n      <Illo />\n      <Grid item xs={12} sm={6}>\n        <Typography variant=\"h2\" className={classes.title}>\n          Entity was not found\n        </Typography>\n        <Typography variant=\"body1\" className={classes.body}>\n          Want to help us build this? Check out our Getting Started\n          documentation.\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          href=\"https://backstage.io/docs\"\n        >\n          DOCS\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ENTITY_DEFAULT_NAMESPACE } from '@backstage/catalog-model';\nimport { Content } from '@backstage/core';\nimport {\n  entityRoute,\n  rootRoute,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport { Link, Typography } from '@material-ui/core';\nimport React, { ComponentType } from 'react';\nimport { Navigate, Route, Routes, useParams } from 'react-router';\nimport { CatalogPage } from './CatalogPage';\nimport { EntityLoaderProvider } from './EntityLoaderProvider';\nimport { EntityNotFound } from './EntityNotFound';\nimport { EntityPageLayout } from './EntityPageLayout';\n\nconst DefaultEntityPage = () => (\n  <EntityPageLayout>\n    <EntityPageLayout.Content\n      path=\"/\"\n      title=\"Overview\"\n      element={\n        <Content>\n          <Typography variant=\"h2\">This is the default entity page.</Typography>\n          <Typography variant=\"body1\">\n            To override this component with your custom implementation, read\n            docs on{' '}\n            <Link target=\"_blank\" href=\"https://backstage.io/docs\">\n              backstage.io/docs\n            </Link>\n          </Typography>\n        </Content>\n      }\n    />\n  </EntityPageLayout>\n);\n\nconst EntityPageSwitch = ({ EntityPage }: { EntityPage: ComponentType }) => {\n  const { entity, loading, error } = useEntity();\n  // Loading and error states\n  if (loading) return <EntityPageLayout />;\n  if (error || !entity) return <EntityNotFound />;\n\n  // Otherwise EntityPage provided from the App\n  // Note that EntityPage will include EntityPageLayout already\n  return <EntityPage />;\n};\n\nconst OldEntityRouteRedirect = () => {\n  const { optionalNamespaceAndName, '*': rest } = useParams() as any;\n  const [name, namespace] = optionalNamespaceAndName.split(':').reverse();\n  const namespaceLower =\n    namespace?.toLocaleLowerCase('en-US') ?? ENTITY_DEFAULT_NAMESPACE;\n  const restWithSlash = rest ? `/${rest}` : '';\n  return (\n    <Navigate\n      to={`../../${namespaceLower}/component/${name}${restWithSlash}`}\n    />\n  );\n};\n\nexport const Router = ({\n  EntityPage = DefaultEntityPage,\n}: {\n  EntityPage?: ComponentType;\n}) => (\n  <Routes>\n    <Route path={`${rootRoute.path}`} element={<CatalogPage />} />\n    <Route\n      path={`${entityRoute.path}`}\n      element={\n        <EntityLoaderProvider>\n          <EntityPageSwitch EntityPage={EntityPage} />\n        </EntityLoaderProvider>\n      }\n    />\n    <Route\n      path=\"Component/:optionalNamespaceAndName/*\"\n      element={<OldEntityRouteRedirect />}\n    />\n  </Routes>\n);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, EntityName, Location } from '@backstage/catalog-model';\nimport {\n  AddLocationRequest,\n  AddLocationResponse,\n  CatalogApi,\n  CatalogEntitiesRequest,\n  CatalogListResponse,\n  CatalogClient,\n} from '@backstage/catalog-client';\nimport { IdentityApi } from '@backstage/core';\n\ntype CatalogRequestOptions = {\n  token?: string;\n};\n\n/**\n * CatalogClient wrapper that injects identity token for all requests\n */\nexport class CatalogClientWrapper implements CatalogApi {\n  private readonly identityApi: IdentityApi;\n  private readonly client: CatalogClient;\n\n  constructor(options: { client: CatalogClient; identityApi: IdentityApi }) {\n    this.client = options.client;\n    this.identityApi = options.identityApi;\n  }\n\n  async getLocationById(\n    id: string,\n    options?: CatalogRequestOptions,\n  ): Promise<Location | undefined> {\n    return await this.client.getLocationById(id, {\n      token: options?.token ?? (await this.identityApi.getIdToken()),\n    });\n  }\n\n  async getEntities(\n    request?: CatalogEntitiesRequest,\n    options?: CatalogRequestOptions,\n  ): Promise<CatalogListResponse<Entity>> {\n    return await this.client.getEntities(request, {\n      token: options?.token ?? (await this.identityApi.getIdToken()),\n    });\n  }\n\n  async getEntityByName(\n    compoundName: EntityName,\n    options?: CatalogRequestOptions,\n  ): Promise<Entity | undefined> {\n    return await this.client.getEntityByName(compoundName, {\n      token: options?.token ?? (await this.identityApi.getIdToken()),\n    });\n  }\n\n  async addLocation(\n    request: AddLocationRequest,\n    options?: CatalogRequestOptions,\n  ): Promise<AddLocationResponse> {\n    return await this.client.addLocation(request, {\n      token: options?.token ?? (await this.identityApi.getIdToken()),\n    });\n  }\n\n  async getOriginLocationByEntity(\n    entity: Entity,\n    options?: CatalogRequestOptions,\n  ): Promise<Location | undefined> {\n    return await this.client.getOriginLocationByEntity(entity, {\n      token: options?.token ?? (await this.identityApi.getIdToken()),\n    });\n  }\n\n  async getLocationByEntity(\n    entity: Entity,\n    options?: CatalogRequestOptions,\n  ): Promise<Location | undefined> {\n    return await this.client.getLocationByEntity(entity, {\n      token: options?.token ?? (await this.identityApi.getIdToken()),\n    });\n  }\n\n  async removeLocationById(\n    id: string,\n    options?: CatalogRequestOptions,\n  ): Promise<void> {\n    return await this.client.removeLocationById(id, {\n      token: options?.token ?? (await this.identityApi.getIdToken()),\n    });\n  }\n\n  async removeEntityByUid(\n    uid: string,\n    options?: CatalogRequestOptions,\n  ): Promise<void> {\n    return await this.client.removeEntityByUid(uid, {\n      token: options?.token ?? (await this.identityApi.getIdToken()),\n    });\n  }\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogClient } from '@backstage/catalog-client';\nimport {\n  createApiFactory,\n  createComponentExtension,\n  createPlugin,\n  createRoutableExtension,\n  discoveryApiRef,\n  identityApiRef,\n} from '@backstage/core';\nimport {\n  catalogApiRef,\n  catalogRouteRef,\n  entityRouteRef,\n} from '@backstage/plugin-catalog-react';\nimport { CatalogClientWrapper } from './CatalogClientWrapper';\nimport { createComponentRouteRef } from './routes';\n\nexport const catalogPlugin = createPlugin({\n  id: 'catalog',\n  apis: [\n    createApiFactory({\n      api: catalogApiRef,\n      deps: { discoveryApi: discoveryApiRef, identityApi: identityApiRef },\n      factory: ({ discoveryApi, identityApi }) =>\n        new CatalogClientWrapper({\n          client: new CatalogClient({ discoveryApi }),\n          identityApi,\n        }),\n    }),\n  ],\n  routes: {\n    catalogIndex: catalogRouteRef,\n    catalogEntity: entityRouteRef,\n  },\n  externalRoutes: {\n    createComponent: createComponentRouteRef,\n  },\n});\n\nexport const CatalogIndexPage = catalogPlugin.provide(\n  createRoutableExtension({\n    component: () =>\n      import('./components/CatalogPage').then(m => m.CatalogPage),\n    mountPoint: catalogRouteRef,\n  }),\n);\n\nexport const CatalogEntityPage = catalogPlugin.provide(\n  createRoutableExtension({\n    component: () =>\n      import('./components/CatalogEntityPage').then(m => m.CatalogEntityPage),\n    mountPoint: entityRouteRef,\n  }),\n);\n\nexport const EntityAboutCard = catalogPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () => import('./components/AboutCard').then(m => m.AboutCard),\n    },\n  }),\n);\n\nexport const EntityLinksCard = catalogPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/EntityLinksCard').then(m => m.EntityLinksCard),\n    },\n  }),\n);\n\nexport const EntityHasSystemsCard = catalogPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/HasSystemsCard').then(m => m.HasSystemsCard),\n    },\n  }),\n);\n\nexport const EntityHasComponentsCard = catalogPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/HasComponentsCard').then(m => m.HasComponentsCard),\n    },\n  }),\n);\n\nexport const EntityHasSubcomponentsCard = catalogPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/HasSubcomponentsCard').then(\n          m => m.HasSubcomponentsCard,\n        ),\n    },\n  }),\n);\n\nexport const EntityHasResourcesCard = catalogPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/HasResourcesCard').then(m => m.HasResourcesCard),\n    },\n  }),\n);\n\nexport const EntityDependsOnComponentsCard = catalogPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/DependsOnComponentsCard').then(\n          m => m.DependsOnComponentsCard,\n        ),\n    },\n  }),\n);\n\nexport const EntityDependsOnResourcesCard = catalogPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/DependsOnResourcesCard').then(\n          m => m.DependsOnResourcesCard,\n        ),\n    },\n  }),\n);\n\nexport const EntitySystemDiagramCard = catalogPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/SystemDiagramCard').then(m => m.SystemDiagramCard),\n    },\n  }),\n);\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { alertApiRef, useApi } from '@backstage/core';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { Button, Dialog, DialogActions, DialogTitle } from '@material-ui/core';\nimport React, { useState } from 'react';\n\ntype Props = {\n  open: boolean;\n  onClose: () => any;\n  onConfirm: () => any;\n  entity: Entity;\n};\n\nexport const DeleteEntityDialog = ({\n  open,\n  onClose,\n  onConfirm,\n  entity,\n}: Props) => {\n  const [busy, setBusy] = useState(false);\n  const catalogApi = useApi(catalogApiRef);\n  const alertApi = useApi(alertApiRef);\n\n  const onDelete = async () => {\n    setBusy(true);\n    try {\n      const uid = entity.metadata.uid;\n      await catalogApi.removeEntityByUid(uid!);\n      onConfirm();\n    } catch (err) {\n      alertApi.post({ message: err.message });\n    } finally {\n      setBusy(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle id=\"responsive-dialog-title\">\n        Are you sure you want to delete this entity?\n      </DialogTitle>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={busy}\n          onClick={onDelete}\n        >\n          Delete\n        </Button>\n        <Button onClick={onClose} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { useRouteRef } from '@backstage/core';\nimport { catalogRouteRef, useEntity } from '@backstage/plugin-catalog-react';\nimport { Alert } from '@material-ui/lab';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { DeleteEntityDialog } from './DeleteEntityDialog';\n\nexport const isOrphan = (entity: Entity) =>\n  entity?.metadata?.annotations?.['backstage.io/orphan'] === 'true';\n\n/**\n * Displays a warning alert if the entity is marked as orphan with the ability to delete said entity.\n */\nexport const EntityOrphanWarning = () => {\n  const navigate = useNavigate();\n  const catalogLink = useRouteRef(catalogRouteRef);\n  const [confirmationDialogOpen, setConfirmationDialogOpen] = useState(false);\n  const { entity } = useEntity();\n\n  const cleanUpAfterRemoval = async () => {\n    setConfirmationDialogOpen(false);\n    navigate(catalogLink());\n  };\n\n  return (\n    <>\n      <Alert severity=\"warning\" onClick={() => setConfirmationDialogOpen(true)}>\n        This entity is not referenced by any location and is therefore not\n        receiving updates. Click here to delete.\n      </Alert>\n      <DeleteEntityDialog\n        open={confirmationDialogOpen}\n        entity={entity!}\n        onConfirm={cleanUpAfterRemoval}\n        onClose={() => setConfirmationDialogOpen(false)}\n      />\n    </>\n  );\n};\n"],"names":["useStyles","makeStyles","Alert","EntityLabels","headerProps","columnFactories.createNameColumn","columnFactories.createSystemColumn","columnFactories.createOwnerColumn","columnFactories.createSpecTypeColumn","columnFactories.createSpecLifecycleColumn","columnFactories.createMetadataDescriptionColumn","columnFactories.createTagsColumn","Edit","StarIcon","RouterLink","Link","Route"],"mappings":"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"}