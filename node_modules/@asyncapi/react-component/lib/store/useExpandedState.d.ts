/// <reference types="react" />
import { CONTAINER_LABELS, ITEM_LABELS } from '../constants';
interface ClickedItem {
    label: CONTAINER_LABELS | ITEM_LABELS | 'COLLAPSE_BUTTON' | '';
    itemName?: string;
    state: boolean;
    scroll?: boolean;
}
interface Props {
    numberOfElements?: number;
    numberOfExpandedElement?: number;
}
export declare const useExpandedContext: import("constate/dist/ts/src/types").ContextHookReturn<Props, {
    expanded: boolean;
    setExpanded: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    numberOfElements: number | undefined;
    numberOfExpanded: number;
    setNumberOfExpanded: import("react").Dispatch<import("react").SetStateAction<number>>;
    clickedItem: ClickedItem;
    setClickedItem: ({ label, ...rest }: ClickedItem) => void;
    scrollToView: boolean;
    setScrollToView: import("react").Dispatch<import("react").SetStateAction<boolean>>;
}, []>;
export {};
