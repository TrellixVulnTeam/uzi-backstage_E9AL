{"version":3,"file":"index.esm.js","sources":["../src/api.ts","../src/client.ts","../src/routes.ts","../src/plugin.ts","../src/reader/transformers/addBaseUrl.ts","../src/reader/transformers/addGitFeedbackLink.ts","../src/reader/transformers/rewriteDocLinks.ts","../src/reader/transformers/addLinkClickListener.ts","../src/reader/transformers/removeMkdocsHeader.ts","../src/reader/transformers/simplifyMkdocsFooter.ts","../src/reader/transformers/onCssReady.ts","../src/reader/transformers/sanitizeDOM/tags.ts","../src/reader/transformers/sanitizeDOM/attributes.ts","../src/reader/transformers/sanitizeDOM/index.ts","../src/reader/transformers/injectCss.ts","../src/reader/transformers/transformer.ts","../src/reader/components/TechDocsNotFound.tsx","../src/reader/components/TechDocsProgressBar.tsx","../src/reader/components/useRawPage.ts","../src/reader/components/Reader.tsx","../src/home/hooks/useOwnUser.ts","../src/home/components/DocsTable.tsx","../src/home/components/DocsCardGrid.tsx","../src/home/components/TechDocsCustomHome.tsx","../src/home/components/TechDocsHome.tsx","../src/reader/components/TechDocsPageHeader.tsx","../src/reader/components/TechDocsPage.tsx","../src/EntityPageDocs.tsx","../src/Router.tsx"],"sourcesContent":["/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityName } from '@backstage/catalog-model';\nimport { createApiRef } from '@backstage/core';\nimport { TechDocsEntityMetadata, TechDocsMetadata } from './types';\n\nexport const techdocsStorageApiRef = createApiRef<TechDocsStorageApi>({\n  id: 'plugin.techdocs.storageservice',\n  description: 'Used to make requests towards the techdocs storage',\n});\n\nexport const techdocsApiRef = createApiRef<TechDocsApi>({\n  id: 'plugin.techdocs.service',\n  description: 'Used to make requests towards techdocs API',\n});\n\nexport interface TechDocsStorageApi {\n  getApiOrigin(): Promise<string>;\n  getStorageUrl(): Promise<string>;\n  getBuilder(): Promise<string>;\n  getEntityDocs(entityId: EntityName, path: string): Promise<string>;\n  syncEntityDocs(entityId: EntityName): Promise<boolean>;\n  getBaseUrl(\n    oldBaseUrl: string,\n    entityId: EntityName,\n    path: string,\n  ): Promise<string>;\n}\n\nexport interface TechDocsApi {\n  getApiOrigin(): Promise<string>;\n  getTechDocsMetadata(entityId: EntityName): Promise<TechDocsMetadata>;\n  getEntityMetadata(entityId: EntityName): Promise<TechDocsEntityMetadata>;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityName } from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport { DiscoveryApi, IdentityApi } from '@backstage/core';\nimport { NotFoundError } from '@backstage/errors';\nimport { TechDocsApi, TechDocsStorageApi } from './api';\nimport { TechDocsEntityMetadata, TechDocsMetadata } from './types';\n\n/**\n * API to talk to techdocs-backend.\n *\n * @property {string} apiOrigin Set to techdocs.requestUrl as the URL for techdocs-backend API\n */\nexport class TechDocsClient implements TechDocsApi {\n  public configApi: Config;\n  public discoveryApi: DiscoveryApi;\n  public identityApi: IdentityApi;\n\n  constructor({\n    configApi,\n    discoveryApi,\n    identityApi,\n  }: {\n    configApi: Config;\n    discoveryApi: DiscoveryApi;\n    identityApi: IdentityApi;\n  }) {\n    this.configApi = configApi;\n    this.discoveryApi = discoveryApi;\n    this.identityApi = identityApi;\n  }\n\n  async getApiOrigin(): Promise<string> {\n    return (\n      this.configApi.getOptionalString('techdocs.requestUrl') ??\n      (await this.discoveryApi.getBaseUrl('techdocs'))\n    );\n  }\n\n  /**\n   * Retrieve TechDocs metadata.\n   *\n   * When docs are built, we generate a techdocs_metadata.json and store it along with the generated\n   * static files. It includes necessary data about the docs site. This method requests techdocs-backend\n   * which retrieves the TechDocs metadata.\n   *\n   * @param {EntityName} entityId Object containing entity data like name, namespace, etc.\n   */\n  async getTechDocsMetadata(entityId: EntityName): Promise<TechDocsMetadata> {\n    const { kind, namespace, name } = entityId;\n\n    const apiOrigin = await this.getApiOrigin();\n    const requestUrl = `${apiOrigin}/metadata/techdocs/${namespace}/${kind}/${name}`;\n    const token = await this.identityApi.getIdToken();\n\n    const request = await fetch(`${requestUrl}`, {\n      headers: token ? { Authorization: `Bearer ${token}` } : {},\n    });\n    const res = await request.json();\n\n    return res;\n  }\n\n  /**\n   * Retrieve metadata about an entity.\n   *\n   * This method requests techdocs-backend which uses the catalog APIs to respond with filtered\n   * information required here.\n   *\n   * @param {EntityName} entityId Object containing entity data like name, namespace, etc.\n   */\n  async getEntityMetadata(\n    entityId: EntityName,\n  ): Promise<TechDocsEntityMetadata> {\n    const { kind, namespace, name } = entityId;\n\n    const apiOrigin = await this.getApiOrigin();\n    const requestUrl = `${apiOrigin}/metadata/entity/${namespace}/${kind}/${name}`;\n    const token = await this.identityApi.getIdToken();\n\n    const request = await fetch(`${requestUrl}`, {\n      headers: token ? { Authorization: `Bearer ${token}` } : {},\n    });\n    const res = await request.json();\n\n    return res;\n  }\n}\n\n/**\n * API which talks to TechDocs storage to fetch files to render.\n *\n * @property {string} apiOrigin Set to techdocs.requestUrl as the URL for techdocs-backend API\n */\nexport class TechDocsStorageClient implements TechDocsStorageApi {\n  public configApi: Config;\n  public discoveryApi: DiscoveryApi;\n  public identityApi: IdentityApi;\n\n  constructor({\n    configApi,\n    discoveryApi,\n    identityApi,\n  }: {\n    configApi: Config;\n    discoveryApi: DiscoveryApi;\n    identityApi: IdentityApi;\n  }) {\n    this.configApi = configApi;\n    this.discoveryApi = discoveryApi;\n    this.identityApi = identityApi;\n  }\n\n  async getApiOrigin(): Promise<string> {\n    return (\n      this.configApi.getOptionalString('techdocs.requestUrl') ??\n      (await this.discoveryApi.getBaseUrl('techdocs'))\n    );\n  }\n\n  async getStorageUrl(): Promise<string> {\n    return (\n      this.configApi.getOptionalString('techdocs.storageUrl') ??\n      `${await this.discoveryApi.getBaseUrl('techdocs')}/static/docs`\n    );\n  }\n\n  async getBuilder(): Promise<string> {\n    return this.configApi.getString('techdocs.builder');\n  }\n\n  /**\n   * Fetch HTML content as text for an individual docs page in an entity's docs site.\n   *\n   * @param {EntityName} entityId Object containing entity data like name, namespace, etc.\n   * @param {string} path The unique path to an individual docs page e.g. overview/what-is-new\n   * @returns {string} HTML content of the docs page as string\n   * @throws {Error} Throws error when the page is not found.\n   */\n  async getEntityDocs(entityId: EntityName, path: string): Promise<string> {\n    const { kind, namespace, name } = entityId;\n\n    const storageUrl = await this.getStorageUrl();\n    const url = `${storageUrl}/${namespace}/${kind}/${name}/${path}`;\n    const token = await this.identityApi.getIdToken();\n\n    const request = await fetch(\n      `${url.endsWith('/') ? url : `${url}/`}index.html`,\n      {\n        headers: token ? { Authorization: `Bearer ${token}` } : {},\n      },\n    );\n\n    let errorMessage = '';\n    switch (request.status) {\n      case 404:\n        errorMessage = 'Page not found. ';\n        // path is empty for the home page of an entity's docs site\n        if (!path) {\n          errorMessage +=\n            'This could be because there is no index.md file in the root of the docs directory of this repository.';\n        }\n        throw new NotFoundError(errorMessage);\n      case 500:\n        errorMessage =\n          'Could not generate documentation or an error in the TechDocs backend. ';\n        throw new Error(errorMessage);\n      default:\n        // Do nothing\n        break;\n    }\n\n    return request.text();\n  }\n\n  /**\n   * Check if docs are on the latest version and trigger rebuild if not\n   *\n   * @param {EntityName} entityId Object containing entity data like name, namespace, etc.\n   * @returns {boolean} Whether documents are currently synchronized to newest version\n   * @throws {Error} Throws error on error from sync endpoint in Techdocs Backend\n   */\n  async syncEntityDocs(entityId: EntityName): Promise<boolean> {\n    const { kind, namespace, name } = entityId;\n\n    const apiOrigin = await this.getApiOrigin();\n    const url = `${apiOrigin}/sync/${namespace}/${kind}/${name}`;\n    const token = await this.identityApi.getIdToken();\n    let request;\n    let attempts: number = 0;\n    // retry if request times out, up to 5 times\n    // can happen due to docs taking too long to generate\n    while (!request || (request.status === 408 && attempts < 5)) {\n      attempts++;\n      request = await fetch(url, {\n        headers: token ? { Authorization: `Bearer ${token}` } : {},\n      });\n    }\n\n    switch (request.status) {\n      case 404:\n        throw new NotFoundError((await request.json()).error);\n      case 200:\n      case 201:\n      case 304:\n        return true;\n      // for timeout and misc errors, handle without error to allow viewing older docs\n      // if older docs not available,\n      // Reader will show 404 error coming from getEntityDocs\n      case 408:\n      default:\n        return false;\n    }\n  }\n\n  async getBaseUrl(\n    oldBaseUrl: string,\n    entityId: EntityName,\n    path: string,\n  ): Promise<string> {\n    const { kind, namespace, name } = entityId;\n\n    const apiOrigin = await this.getApiOrigin();\n    return new URL(\n      oldBaseUrl,\n      `${apiOrigin}/static/docs/${namespace}/${kind}/${name}/${path}`,\n    ).toString();\n  }\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createRouteRef } from '@backstage/core';\n\nexport const rootRouteRef = createRouteRef({\n  path: '',\n  title: 'TechDocs Landing Page',\n});\n\nexport const rootDocsRouteRef = createRouteRef({\n  path: ':namespace/:kind/:name/*',\n  title: 'Docs',\n});\n\nexport const rootCatalogDocsRouteRef = createRouteRef({\n  path: '*',\n  title: 'Docs',\n});\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  configApiRef,\n  createApiFactory,\n  createComponentExtension,\n  createPlugin,\n  createRoutableExtension,\n  discoveryApiRef,\n  identityApiRef,\n} from '@backstage/core';\nimport { techdocsApiRef, techdocsStorageApiRef } from './api';\nimport { TechDocsClient, TechDocsStorageClient } from './client';\nimport {\n  rootDocsRouteRef,\n  rootRouteRef,\n  rootCatalogDocsRouteRef,\n} from './routes';\n\nexport const techdocsPlugin = createPlugin({\n  id: 'techdocs',\n  apis: [\n    createApiFactory({\n      api: techdocsStorageApiRef,\n      deps: {\n        configApi: configApiRef,\n        discoveryApi: discoveryApiRef,\n        identityApi: identityApiRef,\n      },\n      factory: ({ configApi, discoveryApi, identityApi }) =>\n        new TechDocsStorageClient({\n          configApi,\n          discoveryApi,\n          identityApi,\n        }),\n    }),\n    createApiFactory({\n      api: techdocsApiRef,\n      deps: {\n        configApi: configApiRef,\n        discoveryApi: discoveryApiRef,\n        identityApi: identityApiRef,\n      },\n      factory: ({ configApi, discoveryApi, identityApi }) =>\n        new TechDocsClient({\n          configApi,\n          discoveryApi,\n          identityApi,\n        }),\n    }),\n  ],\n  routes: {\n    root: rootRouteRef,\n    entityContent: rootCatalogDocsRouteRef,\n  },\n});\n\nexport const TechdocsPage = techdocsPlugin.provide(\n  createRoutableExtension({\n    component: () => import('./Router').then(m => m.Router),\n    mountPoint: rootRouteRef,\n  }),\n);\n\nexport const EntityTechdocsContent = techdocsPlugin.provide(\n  createRoutableExtension({\n    component: () => import('./Router').then(m => m.EmbeddedDocsRouter),\n    mountPoint: rootCatalogDocsRouteRef,\n  }),\n);\n\n// takes a list of entities and renders documentation cards\nexport const DocsCardGrid = techdocsPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./home/components/DocsCardGrid').then(m => m.DocsCardGrid),\n    },\n  }),\n);\n\n// takes a list of entities and renders table listing documentation\nexport const DocsTable = techdocsPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () => import('./home/components/DocsTable').then(m => m.DocsTable),\n    },\n  }),\n);\n\n// takes a custom tabs config object and renders a documentation landing page\nexport const TechDocsCustomHome = techdocsPlugin.provide(\n  createRoutableExtension({\n    component: () =>\n      import('./home/components/TechDocsCustomHome').then(\n        m => m.TechDocsCustomHome,\n      ),\n    mountPoint: rootRouteRef,\n  }),\n);\n\nexport const TechDocsReaderPage = techdocsPlugin.provide(\n  createRoutableExtension({\n    component: () =>\n      import('./reader/components/TechDocsPage').then(m => m.TechDocsPage),\n    mountPoint: rootDocsRouteRef,\n  }),\n);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EntityName } from '@backstage/catalog-model';\nimport type { Transformer } from './transformer';\nimport { TechDocsStorageApi } from '../../api';\n\ntype AddBaseUrlOptions = {\n  techdocsStorageApi: TechDocsStorageApi;\n  entityId: EntityName;\n  path: string;\n};\n\nexport const addBaseUrl = ({\n  techdocsStorageApi,\n  entityId,\n  path,\n}: AddBaseUrlOptions): Transformer => {\n  return dom => {\n    const updateDom = <T extends Element>(\n      list: HTMLCollectionOf<T> | NodeListOf<T>,\n      attributeName: string,\n    ): void => {\n      Array.from(list)\n        .filter(elem => !!elem.getAttribute(attributeName))\n        .forEach(async (elem: T) => {\n          const elemAttribute = elem.getAttribute(attributeName);\n          if (!elemAttribute) return;\n          elem.setAttribute(\n            attributeName,\n            await techdocsStorageApi.getBaseUrl(elemAttribute, entityId, path),\n          );\n        });\n    };\n\n    updateDom<HTMLImageElement>(dom.querySelectorAll('img'), 'src');\n    updateDom<HTMLScriptElement>(dom.querySelectorAll('script'), 'src');\n    updateDom<HTMLLinkElement>(dom.querySelectorAll('link'), 'href');\n\n    return dom;\n  };\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Transformer } from './index';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport FeedbackOutlinedIcon from '@material-ui/icons/FeedbackOutlined';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// requires repo\nexport const addGitFeedbackLink = (\n  scmIntegrationsApi: ScmIntegrationRegistry,\n): Transformer => {\n  return dom => {\n    // attempting to use selectors that are more likely to be static as MkDocs updates over time\n    const sourceAnchor = dom.querySelector(\n      '[title=\"Edit this page\"]',\n    ) as HTMLAnchorElement;\n\n    // don't show if edit link not available in raw page\n    if (!sourceAnchor || !sourceAnchor.href) {\n      return dom;\n    }\n\n    const sourceURL = new URL(sourceAnchor.href);\n    const integration = scmIntegrationsApi.byUrl(sourceURL);\n\n    // don't show if can't identify edit link hostname as a gitlab/github hosting\n    if (integration?.type !== 'github' && integration?.type !== 'gitlab') {\n      return dom;\n    }\n\n    // topmost h1 only contains title for whole page\n    const title = (dom.querySelector('article>h1') as HTMLElement).childNodes[0]\n      .textContent;\n    const issueTitle = encodeURIComponent(`Documentation Feedback: ${title}`);\n    const issueDesc = encodeURIComponent(\n      `Page source:\\n${sourceAnchor.href}\\n\\nFeedback:`,\n    );\n    const repoPath = sourceURL.pathname.split('/').slice(0, 3).join('/');\n\n    const feedbackLink = sourceAnchor.cloneNode() as HTMLAnchorElement;\n    switch (integration?.type) {\n      case 'gitlab':\n        feedbackLink.href = `${sourceURL.origin}${repoPath}/issues/new?issue[title]=${issueTitle}&issue[description]=${issueDesc}`;\n        break;\n      case 'github':\n        feedbackLink.href = `${sourceURL.origin}${repoPath}/issues/new?title=${issueTitle}&body=${issueDesc}`;\n        break;\n      default:\n        return dom;\n    }\n    ReactDOM.render(React.createElement(FeedbackOutlinedIcon), feedbackLink);\n    feedbackLink.style.paddingLeft = '5px';\n    feedbackLink.title = 'Leave feedback for this page';\n    feedbackLink.id = 'git-feedback-link';\n    sourceAnchor?.insertAdjacentElement('beforebegin', feedbackLink);\n    return dom;\n  };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Transformer } from './transformer';\n\nexport const rewriteDocLinks = (): Transformer => {\n  return dom => {\n    const updateDom = <T extends Element>(\n      list: Array<T>,\n      attributeName: string,\n    ): void => {\n      Array.from(list)\n        .filter(elem => elem.hasAttribute(attributeName))\n        .forEach((elem: T) => {\n          const elemAttribute = elem.getAttribute(attributeName);\n          if (elemAttribute) {\n            // if link is external, add target to open in a new window or tab\n            if (elemAttribute.match(/^https?:\\/\\//i)) {\n              elem.setAttribute('target', '_blank');\n            }\n            const normalizedWindowLocation = normalizeUrl(window.location.href);\n\n            elem.setAttribute(\n              attributeName,\n              new URL(elemAttribute, normalizedWindowLocation).toString(),\n            );\n          }\n        });\n    };\n\n    updateDom(Array.from(dom.getElementsByTagName('a')), 'href');\n\n    return dom;\n  };\n};\n\n/** Make sure that the input url always ends with a '/' */\nexport function normalizeUrl(input: string): string {\n  const url = new URL(input);\n\n  if (!url.pathname.endsWith('/')) {\n    url.pathname += '/';\n  }\n\n  return url.toString();\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Transformer } from './transformer';\n\ntype AddLinkClickListenerOptions = {\n  baseUrl: string;\n  onClick: (e: MouseEvent, newUrl: string) => void;\n};\n\nexport const addLinkClickListener = ({\n  baseUrl,\n  onClick,\n}: AddLinkClickListenerOptions): Transformer => {\n  return dom => {\n    Array.from(dom.getElementsByTagName('a')).forEach(elem => {\n      elem.addEventListener('click', (e: MouseEvent) => {\n        const target = elem as HTMLAnchorElement;\n        const href = target.getAttribute('href');\n\n        if (!href) return;\n        if (href.startsWith(baseUrl)) {\n          e.preventDefault();\n          onClick(e, href);\n        }\n      });\n    });\n\n    return dom;\n  };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Transformer } from './transformer';\n\nexport const removeMkdocsHeader = (): Transformer => {\n  return dom => {\n    // Remove the header\n    dom.querySelector('.md-header')?.remove();\n\n    return dom;\n  };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Transformer } from './transformer';\n\nexport const simplifyMkdocsFooter = (): Transformer => {\n  return dom => {\n    // Remove mkdocs copyright\n    dom.querySelector('.md-footer-copyright')?.remove();\n\n    return dom;\n  };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Transformer } from './transformer';\n\ntype OnCssReadyOptions = {\n  docStorageUrl: Promise<string>;\n  onLoading: (dom: Element) => void;\n  onLoaded: (dom: Element) => void;\n};\n\nexport const onCssReady = ({\n  docStorageUrl,\n  onLoading,\n  onLoaded,\n}: OnCssReadyOptions): Transformer => {\n  return dom => {\n    const cssPages = Array.from(\n      dom.querySelectorAll('head > link[rel=\"stylesheet\"]'),\n    ).filter(async elem =>\n      elem.getAttribute('href')?.startsWith(await docStorageUrl),\n    );\n\n    let count = cssPages.length;\n\n    if (count > 0) {\n      onLoading(dom);\n    }\n\n    cssPages.forEach(cssPage =>\n      cssPage.addEventListener('load', () => {\n        count -= 1;\n\n        if (count === 0) {\n          onLoaded(dom);\n        }\n      }),\n    );\n\n    return dom;\n  };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is the source of truth for what HTML tags we support in TechDocs.\n */\n\n// prettier-ignore\nexport const html = [\n  'a', 'abbr', 'acronym',\n  'address', 'area', 'article',\n  'aside', 'audio', 'b', 'bdi',\n  'bdo', 'big',\n  'blink', 'blockquote',\n  'body',\n  'br', 'button',\n  'canvas', 'caption', 'center', 'cite', 'code',\n  'col', 'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n];\n\n// SVG\nexport const svg = [\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'audio',\n  'canvas',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'object',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'video',\n  'view',\n  'vkern',\n];\n\nexport const svgFilters = [\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n];\n\nexport const mathMl = [\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n];\n\nexport const text = ['#text'];\n\n/**\n * Anything in here will be executed as HTML tags from TechDocs.\n *\n * @note Be conscious about what you add here. It can affect the TechDocs experience. For\n * some review before making a PR, reach out in the #docs-like-code channel in Discord first.\n */\nexport const TECHDOCS_ALLOWED_TAGS = [\n  ...html,\n  ...svg,\n  ...svgFilters,\n  ...mathMl,\n  ...text,\n  'iframe',\n];\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is the source of truth of what attributes we support in TechDocs.\n */\n\nexport const html = [\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n];\n\nexport const svg = [\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'data',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n];\n\nexport const mathMl = [\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n];\n\nexport const xml = [\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n];\n\n/**\n * Anything in here will be supported as HTML attributes from TechDocs.\n *\n * @note Be conscious about what you add here. It can affect the TechDocs experience. For\n * some review before making a PR, reach out in the #docs-like-code channel in Discord first.\n */\nexport const TECHDOCS_ALLOWED_ATTRIBUTES = {\n  '*': [...html, ...svg, ...mathMl, ...xml, 'data-*'],\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// @ts-ignore\nimport sanitizeHtml from 'sanitize-html';\nimport type { Transformer } from '../transformer';\nimport { TECHDOCS_ALLOWED_TAGS } from './tags';\nimport { TECHDOCS_ALLOWED_ATTRIBUTES } from './attributes';\n\n// TODO(freben): move all of this out of index\n\nexport const sanitizeDOM = (): Transformer => {\n  return dom => {\n    const sanitizedHtml = sanitizeHtml(dom.innerHTML, {\n      allowedTags: TECHDOCS_ALLOWED_TAGS,\n      allowedAttributes: TECHDOCS_ALLOWED_ATTRIBUTES,\n      allowedSchemes: ['http', 'https', 'ftp', 'mailto', 'data', 'blob'],\n    });\n\n    return new DOMParser().parseFromString(sanitizedHtml, 'text/html')\n      .documentElement;\n  };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Transformer } from './transformer';\n\ntype InjectCssOptions = {\n  css: string;\n};\n\nexport const injectCss = ({ css }: InjectCssOptions): Transformer => {\n  return dom => {\n    dom\n      .getElementsByTagName('head')[0]\n      .insertAdjacentHTML('beforeend', `<style>${css}</style>`);\n\n    return dom;\n  };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type Transformer = (dom: Element) => Element;\n\nexport const transform = (\n  html: string | Element,\n  transformers: Transformer[],\n): Element => {\n  let dom: Element;\n\n  if (typeof html === 'string') {\n    dom = new DOMParser().parseFromString(html, 'text/html').documentElement;\n  } else if (html instanceof Element) {\n    dom = html;\n  } else {\n    throw new Error('dom is not a recognized type');\n  }\n\n  transformers.forEach(transformer => {\n    dom = transformer(dom);\n  });\n\n  return dom;\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { ErrorPage, useApi, configApiRef } from '@backstage/core';\n\ntype Props = {\n  errorMessage?: string;\n};\n\nexport const TechDocsNotFound = ({ errorMessage }: Props) => {\n  const techdocsBuilder = useApi(configApiRef).getOptionalString(\n    'techdocs.builder',\n  );\n\n  let additionalInfo = '';\n  if (techdocsBuilder !== 'local') {\n    additionalInfo =\n      \"Note that techdocs.builder is not set to 'local' in your config, which means this Backstage app will not \" +\n      \"generate docs if they are not found. Make sure the project's docs are generated and published by some external \" +\n      \"process (e.g. CI/CD pipeline). Or change techdocs.builder to 'local' to generate docs from this Backstage \" +\n      'instance.';\n  }\n\n  return (\n    <ErrorPage\n      status=\"404\"\n      statusMessage={errorMessage || 'Documentation not found'}\n      additionalInfo={additionalInfo}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useMountedState } from 'react-use';\nimport { Progress } from '@backstage/core';\nimport { Typography } from '@material-ui/core';\n\nconst TechDocsProgressBar = () => {\n  const isMounted = useMountedState();\n  const [hasBeenDelayed, setHasBeenDelayed] = useState(false);\n\n  const delayReason = `Docs are still loading...Backstage takes some extra time to load docs\n  for the first time. The subsequent loads are much faster.`;\n\n  // Allowed time that docs can take to load (in milliseconds)\n  const allowedDelayTime = 5000;\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (isMounted()) {\n        setHasBeenDelayed(true);\n      }\n    }, allowedDelayTime);\n  });\n\n  return (\n    <>\n      {hasBeenDelayed ? (\n        <Typography data-testid=\"delay-reason\">{delayReason}</Typography>\n      ) : null}\n      <Progress />\n    </>\n  );\n};\n\nexport default TechDocsProgressBar;\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EntityName } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core';\nimport { useAsyncRetry } from 'react-use';\nimport { AsyncState } from 'react-use/lib/useAsync';\nimport { techdocsStorageApiRef } from '../../api';\n\nexport type RawPage = {\n  content: string;\n  path: string;\n  entityId: EntityName;\n};\n\nexport function useRawPage(\n  path: string,\n  kind: string,\n  namespace: string,\n  name: string,\n): AsyncState<RawPage> & {\n  retry(): void;\n} {\n  const techdocsStorageApi = useApi(techdocsStorageApiRef);\n\n  return useAsyncRetry(async () => {\n    const content = await techdocsStorageApi.getEntityDocs(\n      { kind, namespace, name },\n      path,\n    );\n\n    return {\n      content,\n      path,\n      entityId: {\n        kind,\n        name,\n        namespace,\n      },\n    };\n  }, [techdocsStorageApi, kind, namespace, name, path]);\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EntityName } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core';\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\nimport { BackstageTheme } from '@backstage/theme';\nimport { useTheme } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useAsync } from 'react-use';\nimport { techdocsStorageApiRef } from '../../api';\nimport {\n  addBaseUrl,\n  addGitFeedbackLink,\n  addLinkClickListener,\n  injectCss,\n  onCssReady,\n  removeMkdocsHeader,\n  rewriteDocLinks,\n  sanitizeDOM,\n  simplifyMkdocsFooter,\n  transform as transformer,\n} from '../transformers';\nimport { TechDocsNotFound } from './TechDocsNotFound';\nimport TechDocsProgressBar from './TechDocsProgressBar';\nimport { useRawPage } from './useRawPage';\n\ntype Props = {\n  entityId: EntityName;\n  onReady?: () => void;\n};\n\nexport const Reader = ({ entityId, onReady }: Props) => {\n  const { kind, namespace, name } = entityId;\n  const { '*': path } = useParams();\n  const theme = useTheme<BackstageTheme>();\n\n  const techdocsStorageApi = useApi(techdocsStorageApiRef);\n  const [sidebars, setSidebars] = useState<HTMLElement[]>();\n  const navigate = useNavigate();\n  const shadowDomRef = useRef<HTMLDivElement>(null);\n  const [loadedPath, setLoadedPath] = useState('');\n  const [atInitialLoad, setAtInitialLoad] = useState(true);\n  const [newerDocsExist, setNewerDocsExist] = useState(false);\n  const scmIntegrationsApi = useApi(scmIntegrationsApiRef);\n\n  const {\n    value: isSynced,\n    loading: syncInProgress,\n    error: syncError,\n  } = useAsync(async () => {\n    // Attempt to sync only if `techdocs.builder` in app config is set to 'local'\n    if ((await techdocsStorageApi.getBuilder()) !== 'local') {\n      return Promise.resolve({\n        value: true,\n        loading: null,\n        error: null,\n      });\n    }\n    return techdocsStorageApi.syncEntityDocs({ kind, namespace, name });\n  }, [techdocsStorageApi, kind, namespace, name]);\n\n  const {\n    value: rawPage,\n    loading: docLoading,\n    error: docLoadError,\n    retry,\n  } = useRawPage(path, kind, namespace, name);\n\n  useEffect(() => {\n    if (isSynced && newerDocsExist && path !== loadedPath) {\n      retry();\n    }\n  });\n\n  useEffect(() => {\n    const updateSidebarPosition = () => {\n      if (!!shadowDomRef.current && !!sidebars) {\n        const mdTabs = shadowDomRef.current!.querySelector(\n          '.md-container > .md-tabs',\n        );\n        sidebars!.forEach(sidebar => {\n          const newTop = Math.max(\n            shadowDomRef.current!.getBoundingClientRect().top,\n            0,\n          );\n          sidebar.style.top = mdTabs\n            ? `${newTop + mdTabs.getBoundingClientRect().height}px`\n            : `${newTop}px`;\n        });\n      }\n    };\n    updateSidebarPosition();\n    window.addEventListener('scroll', updateSidebarPosition);\n    window.addEventListener('resize', updateSidebarPosition);\n    return () => {\n      window.removeEventListener('scroll', updateSidebarPosition);\n      window.removeEventListener('resize', updateSidebarPosition);\n    };\n  }, [shadowDomRef, sidebars]);\n\n  useEffect(() => {\n    if (rawPage) {\n      setLoadedPath(path);\n    }\n  }, [rawPage, path]);\n\n  useEffect(() => {\n    if (atInitialLoad === false) {\n      return;\n    }\n    setTimeout(() => {\n      setAtInitialLoad(false);\n    }, 5000);\n  });\n\n  useEffect(() => {\n    if (!atInitialLoad && !!rawPage && syncInProgress) {\n      setNewerDocsExist(true);\n    }\n  }, [atInitialLoad, rawPage, syncInProgress]);\n\n  useEffect(() => {\n    if (!rawPage || !shadowDomRef.current) {\n      return;\n    }\n    if (onReady) {\n      onReady();\n    }\n    // Pre-render\n    const transformedElement = transformer(rawPage.content, [\n      sanitizeDOM(),\n      addBaseUrl({\n        techdocsStorageApi,\n        entityId: rawPage.entityId,\n        path: rawPage.path,\n      }),\n      rewriteDocLinks(),\n      removeMkdocsHeader(),\n      simplifyMkdocsFooter(),\n      addGitFeedbackLink(scmIntegrationsApi),\n      injectCss({\n        css: `\n        body {\n          font-family: ${theme.typography.fontFamily};\n          --md-text-color: ${theme.palette.text.primary};\n          --md-text-link-color: ${theme.palette.primary.main};\n\n          --md-code-fg-color: ${theme.palette.text.primary};\n          --md-code-bg-color: ${theme.palette.background.paper};\n        }\n        .md-main__inner { margin-top: 0; }\n        .md-sidebar {  position: fixed; bottom: 100px; width: 20rem; }\n        .md-sidebar--secondary { right: 2rem; }\n        .md-content { margin-bottom: 50px }\n        .md-footer { position: fixed; bottom: 0px; width: 100vw; }\n        .md-footer-nav__link { width: 20rem;}\n        .md-content { margin-left: 20rem; max-width: calc(100% - 20rem * 2 - 3rem); }\n        .md-typeset { font-size: 1rem; }\n        .md-nav { font-size: 1rem; }\n        .md-grid { max-width: 90vw; margin: 0 }\n        .md-typeset table:not([class]) {\n          font-size: 1rem;\n          border: 1px solid ${theme.palette.text.primary};\n          border-bottom: none;\n          border-collapse: collapse;\n        }\n        .md-typeset table:not([class]) td, .md-typeset table:not([class]) th {\n          border-bottom: 1px solid ${theme.palette.text.primary};\n        }\n        .md-typeset table:not([class]) th { font-weight: bold; }\n        @media screen and (max-width: 76.1875em) {\n          .md-nav { \n            background-color: ${theme.palette.background.default}; \n            transition: none !important\n          }\n          .md-sidebar--secondary { display: none; }\n          .md-sidebar--primary { left: 72px; width: 10rem }\n          .md-content { margin-left: 10rem; max-width: calc(100% - 10rem); }\n          .md-content__inner { font-size: 0.9rem }\n          .md-footer { \n            position: static; \n            margin-left: 10rem; \n            width: calc(100% - 10rem); \n          }\n          .md-nav--primary .md-nav__title {  \n            white-space: normal;\n            height: auto;\n            line-height: 1rem;\n            cursor: auto;\n          }\n          .md-nav--primary > .md-nav__title [for=\"none\"] {\n            padding-top: 0;\n          }\n        }\n      `,\n      }),\n      injectCss({\n        // Disable CSS animations on link colors as they lead to issues in dark\n        // mode. The dark mode color theme is applied later and theirfore there\n        // is always an animation from light to dark mode when navigation\n        // between pages.\n        css: `\n        .md-nav__link, .md-typeset a, .md-typeset a::before, .md-typeset .headerlink {\n          transition: none;\n        }\n        `,\n      }),\n      injectCss({\n        // Admonitions and others are using SVG masks to define icons. These\n        // masks are defined as CSS variables.\n        // As the MkDocs output is rendered in shadow DOM, the CSS variable\n        // definitions on the root selector are not applied. Instead, the have\n        // to be applied on :host.\n        // As there is no way to transform the served main*.css yet (for\n        // example in the backend), we have to copy from main*.css and modify\n        // them.\n        css: `\n        :host {\n          --md-admonition-icon--note: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z\"/></svg>');\n          --md-admonition-icon--abstract: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M4 5h16v2H4V5m0 4h16v2H4V9m0 4h16v2H4v-2m0 4h10v2H4v-2z\"/></svg>');\n          --md-admonition-icon--info: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13 9h-2V7h2m0 10h-2v-6h2m-1-9A10 10 0 002 12a10 10 0 0010 10 10 10 0 0010-10A10 10 0 0012 2z\"/></svg>');\n          --md-admonition-icon--tip: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M17.55 11.2c-.23-.3-.5-.56-.76-.82-.65-.6-1.4-1.03-2.03-1.66C13.3 7.26 13 4.85 13.91 3c-.91.23-1.75.75-2.45 1.32-2.54 2.08-3.54 5.75-2.34 8.9.04.1.08.2.08.33 0 .22-.15.42-.35.5-.22.1-.46.04-.64-.12a.83.83 0 01-.15-.17c-1.1-1.43-1.28-3.48-.53-5.12C5.89 10 5 12.3 5.14 14.47c.04.5.1 1 .27 1.5.14.6.4 1.2.72 1.73 1.04 1.73 2.87 2.97 4.84 3.22 2.1.27 4.35-.12 5.96-1.6 1.8-1.66 2.45-4.32 1.5-6.6l-.13-.26c-.2-.46-.47-.87-.8-1.25l.05-.01m-3.1 6.3c-.28.24-.73.5-1.08.6-1.1.4-2.2-.16-2.87-.82 1.19-.28 1.89-1.16 2.09-2.05.17-.8-.14-1.46-.27-2.23-.12-.74-.1-1.37.18-2.06.17.38.37.76.6 1.06.76 1 1.95 1.44 2.2 2.8.04.14.06.28.06.43.03.82-.32 1.72-.92 2.27h.01z\"/></svg>');\n          --md-admonition-icon--success: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2m-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/></svg>');\n          --md-admonition-icon--question: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M15.07 11.25l-.9.92C13.45 12.89 13 13.5 13 15h-2v-.5c0-1.11.45-2.11 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41a2 2 0 00-2-2 2 2 0 00-2 2H8a4 4 0 014-4 4 4 0 014 4 3.2 3.2 0 01-.93 2.25M13 19h-2v-2h2M12 2A10 10 0 002 12a10 10 0 0010 10 10 10 0 0010-10c0-5.53-4.5-10-10-10z\"/></svg>');\n          --md-admonition-icon--warning: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13 14h-2v-4h2m0 8h-2v-2h2M1 21h22L12 2 1 21z\"/></svg>');\n          --md-admonition-icon--failure: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.53 0 10 4.47 10 10s-4.47 10-10 10S2 17.53 2 12 6.47 2 12 2m3.59 5L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41 15.59 7z\"/></svg>');\n          --md-admonition-icon--danger: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M11.5 20l4.86-9.73H13V4l-5 9.73h3.5V20M12 2c2.75 0 5.1 1 7.05 2.95C21 6.9 22 9.25 22 12s-1 5.1-2.95 7.05C17.1 21 14.75 22 12 22s-5.1-1-7.05-2.95C3 17.1 2 14.75 2 12s1-5.1 2.95-7.05C6.9 3 9.25 2 12 2z\"/></svg>');\n          --md-admonition-icon--bug: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M14 12h-4v-2h4m0 6h-4v-2h4m6-6h-2.81a5.985 5.985 0 00-1.82-1.96L17 4.41 15.59 3l-2.17 2.17a6.002 6.002 0 00-2.83 0L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8z\"/></svg>');\n          --md-admonition-icon--example: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7 13v-2h14v2H7m0 6v-2h14v2H7M7 7V5h14v2H7M3 8V5H2V4h2v4H3m-1 9v-1h3v4H2v-1h2v-.5H3v-1h1V17H2m2.25-7a.75.75 0 01.75.75c0 .2-.08.39-.21.52L3.12 13H5v1H2v-.92L4 11H2v-1h2.25z\"/></svg>');\n          --md-admonition-icon--quote: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M14 17h3l2-4V7h-6v6h3M6 17h3l2-4V7H5v6h3l-2 4z\"/></svg>');\n        }\n        :host {\n          --md-footnotes-icon: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.42L5.83 13H21V7h-2z\"/></svg>');\n        }\n        :host {\n          --md-details-icon: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.58L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.42z\"/></svg>');\n        }\n        :host {\n          --md-tasklist-icon: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 2A10 10 0 002 12a10 10 0 0010 10 10 10 0 0010-10A10 10 0 0012 2z\"/></svg>');\n          --md-tasklist-icon--checked: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2m-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/></svg>');\n        }\n        `,\n      }),\n    ]);\n\n    if (!transformedElement) {\n      return; // An unexpected error occurred\n    }\n\n    const shadowDiv: HTMLElement = shadowDomRef.current!;\n    const shadowRoot =\n      shadowDiv.shadowRoot || shadowDiv.attachShadow({ mode: 'open' });\n    Array.from(shadowRoot.children).forEach(child =>\n      shadowRoot.removeChild(child),\n    );\n    shadowRoot.appendChild(transformedElement);\n\n    // Scroll to top after render\n    window.scroll({ top: 0 });\n\n    // Post-render\n    transformer(shadowRoot.children[0], [\n      dom => {\n        setTimeout(() => {\n          // Scoll to the desired anchor on initial navigation\n          if (window.location.hash) {\n            const hash = window.location.hash.slice(1);\n            shadowRoot?.getElementById(hash)?.scrollIntoView();\n          }\n        }, 200);\n        return dom;\n      },\n      addLinkClickListener({\n        baseUrl: window.location.origin,\n        onClick: (_: MouseEvent, url: string) => {\n          const parsedUrl = new URL(url);\n          if (newerDocsExist && isSynced) {\n            // link navigation will load newer docs\n            setNewerDocsExist(false);\n          }\n\n          if (parsedUrl.hash) {\n            navigate(`${parsedUrl.pathname}${parsedUrl.hash}`);\n\n            // Scroll to hash if it's on the current page\n            shadowRoot\n              ?.getElementById(parsedUrl.hash.slice(1))\n              ?.scrollIntoView();\n          } else {\n            navigate(parsedUrl.pathname);\n          }\n        },\n      }),\n      onCssReady({\n        docStorageUrl: techdocsStorageApi.getApiOrigin(),\n        onLoading: (dom: Element) => {\n          (dom as HTMLElement).style.setProperty('opacity', '0');\n        },\n        onLoaded: (dom: Element) => {\n          (dom as HTMLElement).style.removeProperty('opacity');\n          // disable MkDocs drawer toggling ('for' attribute => checkbox mechanism)\n          (dom as HTMLElement)\n            .querySelector('.md-nav__title')\n            ?.removeAttribute('for');\n          const sideDivs: HTMLElement[] = Array.from(\n            shadowRoot!.querySelectorAll('.md-sidebar'),\n          );\n          setSidebars(sideDivs);\n          // set sidebar height so they don't initially render in wrong position\n          const docTopPosition = (dom as HTMLElement).getBoundingClientRect()\n            .top;\n          const mdTabs = dom.querySelector('.md-container > .md-tabs');\n          sideDivs!.forEach(sidebar => {\n            sidebar.style.top = mdTabs\n              ? `${docTopPosition + mdTabs.getBoundingClientRect().height}px`\n              : `${docTopPosition}px`;\n          });\n        },\n      }),\n    ]);\n  }, [\n    rawPage,\n    navigate,\n    onReady,\n    shadowDomRef,\n    techdocsStorageApi,\n    theme.typography.fontFamily,\n    theme.palette.text.primary,\n    theme.palette.primary.main,\n    theme.palette.background.paper,\n    theme.palette.background.default,\n    newerDocsExist,\n    isSynced,\n    scmIntegrationsApi,\n  ]);\n\n  // docLoadError not considered an error state if sync request is still ongoing\n  // or sync just completed and doc is loading again\n  if ((docLoadError && !syncInProgress && !docLoading) || syncError) {\n    let errMessage = '';\n    if (docLoadError) {\n      errMessage += ` Load error: ${docLoadError}`;\n    }\n    if (syncError) errMessage += ` Build error: ${syncError}`;\n    return <TechDocsNotFound errorMessage={errMessage} />;\n  }\n\n  return (\n    <>\n      {newerDocsExist && !isSynced ? (\n        <Alert variant=\"outlined\" severity=\"info\">\n          A newer version of this documentation is being prepared and will be\n          available shortly.\n        </Alert>\n      ) : null}\n      {newerDocsExist && isSynced ? (\n        <Alert variant=\"outlined\" severity=\"success\">\n          A newer version of this documentation is now available, please refresh\n          to view.\n        </Alert>\n      ) : null}\n      {docLoading || (docLoadError && syncInProgress) ? (\n        <TechDocsProgressBar />\n      ) : null}\n      <div data-testid=\"techdocs-content-shadowroot\" ref={shadowDomRef} />\n    </>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserEntity } from '@backstage/catalog-model';\nimport { identityApiRef, useApi } from '@backstage/core';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { useAsync } from 'react-use';\nimport { AsyncState } from 'react-use/lib/useAsync';\n\n/**\n * Get the catalog User entity (if any) that matches the logged-in user.\n */\nexport function useOwnUser(): AsyncState<UserEntity | undefined> {\n  const catalogApi = useApi(catalogApiRef);\n  const identityApi = useApi(identityApiRef);\n\n  // TODO: get the full entity (or at least the full entity name) from the\n  // identityApi\n  return useAsync(\n    () =>\n      catalogApi.getEntityByName({\n        kind: 'User',\n        namespace: 'default',\n        name: identityApi.getUserId(),\n      }) as Promise<UserEntity | undefined>,\n    [catalogApi, identityApi],\n  );\n}\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { useCopyToClipboard } from 'react-use';\nimport { generatePath } from 'react-router-dom';\n\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { Table, EmptyState, Button, SubvalueCell, Link } from '@backstage/core';\nimport { Entity } from '@backstage/catalog-model';\nimport { rootDocsRouteRef } from '../../routes';\n\nexport const DocsTable = ({\n  entities,\n  title,\n}: {\n  entities: Entity[] | undefined;\n  title?: string | undefined;\n}) => {\n  const [, copyToClipboard] = useCopyToClipboard();\n\n  if (!entities) return null;\n\n  const documents = entities.map(entity => {\n    return {\n      name: entity.metadata.name,\n      description: entity.metadata.description,\n      owner: entity?.spec?.owner,\n      type: entity?.spec?.type,\n      docsUrl: generatePath(rootDocsRouteRef.path, {\n        namespace: entity.metadata.namespace ?? 'default',\n        kind: entity.kind,\n        name: entity.metadata.name,\n      }),\n    };\n  });\n\n  const columns = [\n    {\n      title: 'Document',\n      field: 'name',\n      highlight: true,\n      render: (row: any): React.ReactNode => (\n        <SubvalueCell\n          value={<Link to={row.docsUrl}>{row.name}</Link>}\n          subvalue={row.description}\n        />\n      ),\n    },\n    {\n      title: 'Owner',\n      field: 'owner',\n    },\n    {\n      title: 'Type',\n      field: 'type',\n    },\n    {\n      title: 'Actions',\n      width: '10%',\n      render: (row: any) => (\n        <Tooltip title=\"Click to copy documentation link to clipboard\">\n          <IconButton\n            onClick={() =>\n              copyToClipboard(`${window.location.href}/${row.docsUrl}`)\n            }\n          >\n            <ShareIcon />\n          </IconButton>\n        </Tooltip>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      {documents && documents.length > 0 ? (\n        <Table\n          options={{\n            paging: true,\n            pageSize: 20,\n            search: true,\n          }}\n          data={documents}\n          columns={columns}\n          title={\n            title\n              ? `${title} (${documents.length})`\n              : `All (${documents.length})`\n          }\n        />\n      ) : (\n        <EmptyState\n          missing=\"data\"\n          title=\"No documents to show\"\n          description=\"Create your own document. Check out our Getting Started Information\"\n          action={\n            <Button\n              color=\"primary\"\n              href=\"#\"\n              to=\"https://backstage.io/docs/features/techdocs/getting-started\"\n              variant=\"contained\"\n            >\n              DOCS\n            </Button>\n          }\n        />\n      )}\n    </>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { generatePath } from 'react-router-dom';\n\nimport { Entity } from '@backstage/catalog-model';\nimport { Button, ItemCardGrid, ItemCardHeader } from '@backstage/core';\nimport { Card, CardActions, CardContent, CardMedia } from '@material-ui/core';\n\nimport { rootDocsRouteRef } from '../../routes';\n\nexport const DocsCardGrid = ({\n  entities,\n}: {\n  entities: Entity[] | undefined;\n}) => {\n  if (!entities) return null;\n  return (\n    <ItemCardGrid data-testid=\"docs-explore\">\n      {!entities?.length\n        ? null\n        : entities.map((entity, index: number) => (\n            <Card key={index}>\n              <CardMedia>\n                <ItemCardHeader title={entity.metadata.name} />\n              </CardMedia>\n              <CardContent>{entity.metadata.description}</CardContent>\n              <CardActions>\n                <Button\n                  to={generatePath(rootDocsRouteRef.path, {\n                    namespace: entity.metadata.namespace ?? 'default',\n                    kind: entity.kind,\n                    name: entity.metadata.name,\n                  })}\n                  color=\"primary\"\n                >\n                  Read Docs\n                </Button>\n              </CardActions>\n            </Card>\n          ))}\n    </ItemCardGrid>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState } from 'react';\nimport { useAsync } from 'react-use';\nimport { makeStyles } from '@material-ui/core';\nimport { CSSProperties } from '@material-ui/styles';\nimport { catalogApiRef, CatalogApi } from '@backstage/plugin-catalog-react';\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  CodeSnippet,\n  Content,\n  ConfigApi,\n  configApiRef,\n  Header,\n  HeaderTabs,\n  Page,\n  Progress,\n  useApi,\n  WarningPanel,\n  SupportButton,\n  ContentHeader,\n} from '@backstage/core';\nimport { DocsTable } from './DocsTable';\nimport { DocsCardGrid } from './DocsCardGrid';\n\nconst panels = {\n  DocsTable: DocsTable,\n  DocsCardGrid: DocsCardGrid,\n};\n\nexport type PanelType = 'DocsCardGrid' | 'DocsTable';\n\nexport interface PanelConfig {\n  title: string;\n  description: string;\n  panelType: PanelType;\n  panelCSS?: CSSProperties;\n  filterPredicate: (entity: Entity) => boolean;\n}\n\nexport interface TabConfig {\n  label: string;\n  panels: PanelConfig[];\n}\n\nexport type TabsConfig = TabConfig[];\n\nconst CustomPanel = ({\n  config,\n  entities,\n  index,\n}: {\n  config: PanelConfig;\n  entities: Entity[];\n  index: number;\n}) => {\n  const useStyles = makeStyles({\n    panelContainer: {\n      marginBottom: '2rem',\n      ...(config.panelCSS ? config.panelCSS : {}),\n    },\n  });\n  const classes = useStyles();\n  const Panel = panels[config.panelType];\n  const shownEntities = entities.filter(config.filterPredicate);\n  return (\n    <>\n      <ContentHeader title={config.title} description={config.description}>\n        {index === 0 ? (\n          <SupportButton>\n            Discover documentation in your ecosystem.\n          </SupportButton>\n        ) : null}\n      </ContentHeader>\n      <div className={classes.panelContainer}>\n        <Panel entities={shownEntities} />\n      </div>\n    </>\n  );\n};\n\nexport const TechDocsCustomHome = ({\n  tabsConfig,\n}: {\n  tabsConfig: TabsConfig;\n}) => {\n  const [selectedTab, setSelectedTab] = useState<number>(0);\n  const catalogApi: CatalogApi = useApi(catalogApiRef);\n  const configApi: ConfigApi = useApi(configApiRef);\n\n  const { value: entities, loading, error } = useAsync(async () => {\n    const response = await catalogApi.getEntities();\n    return response.items.filter((entity: Entity) => {\n      return !!entity.metadata.annotations?.['backstage.io/techdocs-ref'];\n    });\n  });\n\n  const generatedSubtitle = `Documentation available in ${\n    configApi.getOptionalString('organization.name') ?? 'Backstage'\n  }`;\n\n  const currentTabConfig = tabsConfig[selectedTab];\n\n  if (loading) {\n    return (\n      <Page themeId=\"documentation\">\n        <Header title=\"Documentation\" subtitle={generatedSubtitle} />\n        <Content>\n          <Progress />\n        </Content>\n      </Page>\n    );\n  }\n\n  if (error) {\n    return (\n      <Page themeId=\"documentation\">\n        <Header title=\"Documentation\" subtitle={generatedSubtitle} />\n        <Content>\n          <WarningPanel\n            severity=\"error\"\n            title=\"Could not load available documentation.\"\n          >\n            <CodeSnippet language=\"text\" text={error.toString()} />\n          </WarningPanel>\n        </Content>\n      </Page>\n    );\n  }\n\n  return (\n    <Page themeId=\"documentation\">\n      <Header title=\"Documentation\" subtitle={generatedSubtitle} />\n      <HeaderTabs\n        selectedIndex={selectedTab}\n        onChange={index => setSelectedTab(index)}\n        tabs={tabsConfig.map(({ label }, index) => ({\n          id: index.toString(),\n          label,\n        }))}\n      />\n      <Content>\n        {currentTabConfig.panels.map((config, index) => (\n          <CustomPanel\n            key={index}\n            config={config}\n            entities={!!entities ? entities : []}\n            index={index}\n          />\n        ))}\n      </Content>\n    </Page>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Entity } from '@backstage/catalog-model';\nimport { useOwnUser } from '../hooks';\nimport { isOwnerOf } from '@backstage/plugin-catalog-react';\nimport { PanelType, TechDocsCustomHome } from './TechDocsCustomHome';\n\nexport const TechDocsHome = () => {\n  const { value: user } = useOwnUser();\n\n  const tabsConfig = [\n    {\n      label: 'Overview',\n      panels: [\n        {\n          title: 'Overview',\n          description:\n            'Explore your internal technical ecosystem through documentation.',\n          panelType: 'DocsCardGrid' as PanelType,\n          filterPredicate: () => true,\n        },\n      ],\n    },\n    {\n      label: 'Owned Documents',\n      panels: [\n        {\n          title: 'Owned documents',\n          description: 'Access your documentation.',\n          panelType: 'DocsTable' as PanelType,\n          filterPredicate: (entity: Entity) => {\n            if (!user) {\n              return false;\n            }\n            return isOwnerOf(user, entity);\n          },\n        },\n      ],\n    },\n  ];\n  return <TechDocsCustomHome tabsConfig={tabsConfig} />;\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityName, RELATION_OWNED_BY } from '@backstage/catalog-model';\nimport { Header, HeaderLabel, useRouteRef } from '@backstage/core';\nimport {\n  EntityRefLink,\n  EntityRefLinks,\n  getEntityRelations,\n} from '@backstage/plugin-catalog-react';\nimport CodeIcon from '@material-ui/icons/Code';\nimport React from 'react';\nimport { AsyncState } from 'react-use/lib/useAsync';\nimport { rootRouteRef } from '../../routes';\nimport { TechDocsMetadata } from '../../types';\n\ntype TechDocsPageHeaderProps = {\n  entityId: EntityName;\n  metadataRequest: {\n    entity: AsyncState<any>;\n    techdocs: AsyncState<TechDocsMetadata>;\n  };\n};\n\nexport const TechDocsPageHeader = ({\n  entityId,\n  metadataRequest,\n}: TechDocsPageHeaderProps) => {\n  const {\n    techdocs: techdocsMetadata,\n    entity: entityMetadata,\n  } = metadataRequest;\n\n  const { value: techdocsMetadataValues } = techdocsMetadata;\n  const { value: entityMetadataValues } = entityMetadata;\n\n  const { name } = entityId;\n\n  const { site_name: siteName, site_description: siteDescription } =\n    techdocsMetadataValues || {};\n\n  const {\n    locationMetadata,\n    spec: { lifecycle },\n  } = entityMetadataValues || { spec: {} };\n\n  const ownedByRelations = entityMetadataValues\n    ? getEntityRelations(entityMetadataValues, RELATION_OWNED_BY)\n    : [];\n\n  const docsRootLink = useRouteRef(rootRouteRef)();\n\n  const labels = (\n    <>\n      <HeaderLabel\n        label=\"Component\"\n        value={\n          <EntityRefLink\n            color=\"inherit\"\n            entityRef={entityId}\n            defaultKind=\"Component\"\n          />\n        }\n      />\n      {ownedByRelations.length > 0 && (\n        <HeaderLabel\n          label=\"Owner\"\n          value={\n            <EntityRefLinks\n              color=\"inherit\"\n              entityRefs={ownedByRelations}\n              defaultKind=\"group\"\n            />\n          }\n        />\n      )}\n      {lifecycle ? <HeaderLabel label=\"Lifecycle\" value={lifecycle} /> : null}\n      {locationMetadata &&\n      locationMetadata.type !== 'dir' &&\n      locationMetadata.type !== 'file' ? (\n        <HeaderLabel\n          label=\"\"\n          value={\n            <a\n              href={locationMetadata.target}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <CodeIcon style={{ marginTop: '-25px', fill: '#fff' }} />\n            </a>\n          }\n        />\n      ) : null}\n    </>\n  );\n\n  return (\n    <Header\n      title={siteName ? siteName : '.'}\n      pageTitleOverride={siteName || name}\n      subtitle={\n        siteDescription && siteDescription !== 'None' ? siteDescription : ''\n      }\n      type=\"Docs\"\n      typeLink={docsRootLink}\n    >\n      {labels}\n    </Header>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Content, Page, useApi } from '@backstage/core';\nimport React, { useCallback, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAsync } from 'react-use';\nimport { techdocsApiRef } from '../../api';\nimport { Reader } from './Reader';\nimport { TechDocsPageHeader } from './TechDocsPageHeader';\n\nexport const TechDocsPage = () => {\n  const [documentReady, setDocumentReady] = useState<boolean>(false);\n  const { namespace, kind, name } = useParams();\n\n  const techdocsApi = useApi(techdocsApiRef);\n\n  const techdocsMetadataRequest = useAsync(() => {\n    if (documentReady) {\n      return techdocsApi.getTechDocsMetadata({ kind, namespace, name });\n    }\n\n    return Promise.resolve(undefined);\n  }, [kind, namespace, name, techdocsApi, documentReady]);\n\n  const entityMetadataRequest = useAsync(() => {\n    return techdocsApi.getEntityMetadata({ kind, namespace, name });\n  }, [kind, namespace, name, techdocsApi]);\n\n  const onReady = useCallback(() => {\n    setDocumentReady(true);\n  }, [setDocumentReady]);\n\n  return (\n    <Page themeId=\"documentation\">\n      <TechDocsPageHeader\n        metadataRequest={{\n          techdocs: techdocsMetadataRequest,\n          entity: entityMetadataRequest,\n        }}\n        entityId={{\n          kind,\n          namespace,\n          name,\n        }}\n      />\n      <Content data-testid=\"techdocs-content\">\n        <Reader\n          onReady={onReady}\n          entityId={{\n            kind,\n            namespace,\n            name,\n          }}\n        />\n      </Content>\n    </Page>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Entity } from '@backstage/catalog-model';\nimport { Reader } from './reader';\n\nexport const EntityPageDocs = ({ entity }: { entity: Entity }) => {\n  return (\n    <Reader\n      entityId={{\n        kind: entity.kind,\n        namespace: entity.metadata.namespace ?? 'default',\n        name: entity.metadata.name,\n      }}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Entity } from '@backstage/catalog-model';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { Route, Routes } from 'react-router-dom';\nimport { MissingAnnotationEmptyState } from '@backstage/core';\nimport {\n  rootRouteRef,\n  rootDocsRouteRef,\n  rootCatalogDocsRouteRef,\n} from './routes';\nimport { TechDocsHome } from './home/components/TechDocsHome';\nimport { TechDocsPage } from './reader/components/TechDocsPage';\nimport { EntityPageDocs } from './EntityPageDocs';\n\nconst TECHDOCS_ANNOTATION = 'backstage.io/techdocs-ref';\n\nexport const Router = () => {\n  return (\n    <Routes>\n      <Route path={`/${rootRouteRef.path}`} element={<TechDocsHome />} />\n      <Route path={`/${rootDocsRouteRef.path}`} element={<TechDocsPage />} />\n    </Routes>\n  );\n};\n\ntype Props = {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n};\n\nexport const EmbeddedDocsRouter = (_props: Props) => {\n  const { entity } = useEntity();\n\n  const projectId = entity.metadata.annotations?.[TECHDOCS_ANNOTATION];\n\n  if (!projectId) {\n    return <MissingAnnotationEmptyState annotation={TECHDOCS_ANNOTATION} />;\n  }\n\n  return (\n    <Routes>\n      <Route\n        path={`/${rootCatalogDocsRouteRef.path}`}\n        element={<EntityPageDocs entity={entity} />}\n      />\n    </Routes>\n  );\n};\n"],"names":["html","svg","mathMl","transformer","DocsTable","DocsCardGrid","TechDocsCustomHome"],"mappings":";;;;;;;;;;;;;;;;MAoBa,wBAAwB,aAAiC;AAAA,EACpE,IAAI;AAAA,EACJ,aAAa;AAAA;MAGF,iBAAiB,aAA0B;AAAA,EACtD,IAAI;AAAA,EACJ,aAAa;AAAA;;qBCCoC;AAAA,EAKjD,YAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,KAKC;AACD,SAAK,YAAY;AACjB,SAAK,eAAe;AACpB,SAAK,cAAc;AAAA;AAAA,QAGf,eAAgC;AA/CxC;AAgDI,WACE,WAAK,UAAU,kBAAkB,2BAAjC,YACC,MAAM,KAAK,aAAa,WAAW;AAAA;AAAA,QAalC,oBAAoB,UAAiD;AACzE,UAAM,CAAE,MAAM,WAAW,QAAS;AAElC,UAAM,YAAY,MAAM,KAAK;AAC7B,UAAM,aAAa,GAAG,+BAA+B,aAAa,QAAQ;AAC1E,UAAM,QAAQ,MAAM,KAAK,YAAY;AAErC,UAAM,UAAU,MAAM,MAAM,GAAG,cAAc;AAAA,MAC3C,SAAS,QAAQ,CAAE,eAAe,UAAU,WAAY;AAAA;AAE1D,UAAM,MAAM,MAAM,QAAQ;AAE1B,WAAO;AAAA;AAAA,QAWH,kBACJ,UACiC;AACjC,UAAM,CAAE,MAAM,WAAW,QAAS;AAElC,UAAM,YAAY,MAAM,KAAK;AAC7B,UAAM,aAAa,GAAG,6BAA6B,aAAa,QAAQ;AACxE,UAAM,QAAQ,MAAM,KAAK,YAAY;AAErC,UAAM,UAAU,MAAM,MAAM,GAAG,cAAc;AAAA,MAC3C,SAAS,QAAQ,CAAE,eAAe,UAAU,WAAY;AAAA;AAE1D,UAAM,MAAM,MAAM,QAAQ;AAE1B,WAAO;AAAA;AAAA;4BASsD;AAAA,EAK/D,YAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,KAKC;AACD,SAAK,YAAY;AACjB,SAAK,eAAe;AACpB,SAAK,cAAc;AAAA;AAAA,QAGf,eAAgC;AAhIxC;AAiII,WACE,WAAK,UAAU,kBAAkB,2BAAjC,YACC,MAAM,KAAK,aAAa,WAAW;AAAA;AAAA,QAIlC,gBAAiC;AAvIzC;AAwII,WACE,WAAK,UAAU,kBAAkB,2BAAjC,YACA,GAAG,MAAM,KAAK,aAAa,WAAW;AAAA;AAAA,QAIpC,aAA8B;AAClC,WAAO,KAAK,UAAU,UAAU;AAAA;AAAA,QAW5B,cAAc,UAAsB,MAA+B;AACvE,UAAM,CAAE,MAAM,WAAW,QAAS;AAElC,UAAM,aAAa,MAAM,KAAK;AAC9B,UAAM,MAAM,GAAG,cAAc,aAAa,QAAQ,QAAQ;AAC1D,UAAM,QAAQ,MAAM,KAAK,YAAY;AAErC,UAAM,UAAU,MAAM,MACpB,GAAG,IAAI,SAAS,OAAO,MAAM,GAAG,oBAChC;AAAA,MACE,SAAS,QAAQ,CAAE,eAAe,UAAU,WAAY;AAAA;AAI5D,QAAI,eAAe;AACnB,YAAQ,QAAQ;AAAA,WACT;AACH,uBAAe;AAEf,YAAI,CAAC,MAAM;AACT,0BACE;AAAA;AAEJ,cAAM,IAAI,cAAc;AAAA,WACrB;AACH,uBACE;AACF,cAAM,IAAI,MAAM;AAGhB;AAGJ,WAAO,QAAQ;AAAA;AAAA,QAUX,eAAe,UAAwC;AAC3D,UAAM,CAAE,MAAM,WAAW,QAAS;AAElC,UAAM,YAAY,MAAM,KAAK;AAC7B,UAAM,MAAM,GAAG,kBAAkB,aAAa,QAAQ;AACtD,UAAM,QAAQ,MAAM,KAAK,YAAY;AACrC,QAAI;AACJ,QAAI,WAAmB;AAGvB,WAAO,CAAC,WAAY,QAAQ,WAAW,OAAO,WAAW,GAAI;AAC3D;AACA,gBAAU,MAAM,MAAM,KAAK;AAAA,QACzB,SAAS,QAAQ,CAAE,eAAe,UAAU,WAAY;AAAA;AAAA;AAI5D,YAAQ,QAAQ;AAAA,WACT;AACH,cAAM,IAAI,cAAe,OAAM,QAAQ,QAAQ;AAAA,WAC5C;AAAA,WACA;AAAA,WACA;AACH,eAAO;AAAA,WAIJ;AAAA;AAEH,eAAO;AAAA;AAAA;AAAA,QAIP,WACJ,YACA,UACA,MACiB;AACjB,UAAM,CAAE,MAAM,WAAW,QAAS;AAElC,UAAM,YAAY,MAAM,KAAK;AAC7B,WAAO,IAAI,IACT,YACA,GAAG,yBAAyB,aAAa,QAAQ,QAAQ,QACzD;AAAA;AAAA;;MC/NO,eAAe,eAAe;AAAA,EACzC,MAAM;AAAA,EACN,OAAO;AAAA;MAGI,mBAAmB,eAAe;AAAA,EAC7C,MAAM;AAAA,EACN,OAAO;AAAA;MAGI,0BAA0B,eAAe;AAAA,EACpD,MAAM;AAAA,EACN,OAAO;AAAA;;MCGI,iBAAiB,aAAa;AAAA,EACzC,IAAI;AAAA,EACJ,MAAM;AAAA,IACJ,iBAAiB;AAAA,MACf,KAAK;AAAA,MACL,MAAM;AAAA,QACJ,WAAW;AAAA,QACX,cAAc;AAAA,QACd,aAAa;AAAA;AAAA,MAEf,SAAS,CAAC,CAAE,WAAW,cAAc,iBACnC,IAAI,sBAAsB;AAAA,QACxB;AAAA,QACA;AAAA,QACA;AAAA;AAAA;AAAA,IAGN,iBAAiB;AAAA,MACf,KAAK;AAAA,MACL,MAAM;AAAA,QACJ,WAAW;AAAA,QACX,cAAc;AAAA,QACd,aAAa;AAAA;AAAA,MAEf,SAAS,CAAC,CAAE,WAAW,cAAc,iBACnC,IAAI,eAAe;AAAA,QACjB;AAAA,QACA;AAAA,QACA;AAAA;AAAA;AAAA;AAAA,EAIR,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,eAAe;AAAA;AAAA;MAIN,eAAe,eAAe,QACzC,wBAAwB;AAAA,EACtB,WAAW,MAAa,yDAAY,KAAK,OAAK,EAAE;AAAA,EAChD,YAAY;AAAA;MAIH,wBAAwB,eAAe,QAClD,wBAAwB;AAAA,EACtB,WAAW,MAAa,yDAAY,KAAK,OAAK,EAAE;AAAA,EAChD,YAAY;AAAA;MAKH,eAAe,eAAe,QACzC,yBAAyB;AAAA,EACvB,WAAW;AAAA,IACT,MAAM,MACG,+DAAkC,KAAK,OAAK,EAAE;AAAA;AAAA;MAMhD,YAAY,eAAe,QACtC,yBAAyB;AAAA,EACvB,WAAW;AAAA,IACT,MAAM,MAAa,4DAA+B,KAAK,OAAK,EAAE;AAAA;AAAA;MAMvD,qBAAqB,eAAe,QAC/C,wBAAwB;AAAA,EACtB,WAAW,MACF,qEAAwC,KAC7C,OAAK,EAAE;AAAA,EAEX,YAAY;AAAA;MAIH,qBAAqB,eAAe,QAC/C,wBAAwB;AAAA,EACtB,WAAW,MACF,+DAAoC,KAAK,OAAK,EAAE;AAAA,EACzD,YAAY;AAAA;;MC9FH,aAAa,CAAC;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,MACoC;AACpC,SAAO,SAAO;AACZ,UAAM,YAAY,CAChB,MACA,kBACS;AACT,YAAM,KAAK,MACR,OAAO,UAAQ,CAAC,CAAC,KAAK,aAAa,gBACnC,QAAQ,OAAO,SAAY;AAC1B,cAAM,gBAAgB,KAAK,aAAa;AACxC,YAAI,CAAC;AAAe;AACpB,aAAK,aACH,eACA,MAAM,mBAAmB,WAAW,eAAe,UAAU;AAAA;AAAA;AAKrE,cAA4B,IAAI,iBAAiB,QAAQ;AACzD,cAA6B,IAAI,iBAAiB,WAAW;AAC7D,cAA2B,IAAI,iBAAiB,SAAS;AAEzD,WAAO;AAAA;AAAA;;MC5BE,qBAAqB,CAChC,uBACgB;AAChB,SAAO,SAAO;AAEZ,UAAM,eAAe,IAAI,cACvB;AAIF,QAAI,CAAC,gBAAgB,CAAC,aAAa,MAAM;AACvC,aAAO;AAAA;AAGT,UAAM,YAAY,IAAI,IAAI,aAAa;AACvC,UAAM,cAAc,mBAAmB,MAAM;AAG7C,QAAI,4CAAa,UAAS,YAAY,4CAAa,UAAS,UAAU;AACpE,aAAO;AAAA;AAIT,UAAM,QAAS,IAAI,cAAc,cAA8B,WAAW,GACvE;AACH,UAAM,aAAa,mBAAmB,2BAA2B;AACjE,UAAM,YAAY,mBAChB;AAAA,EAAiB,aAAa;AAAA;AAAA;AAEhC,UAAM,WAAW,UAAU,SAAS,MAAM,KAAK,MAAM,GAAG,GAAG,KAAK;AAEhE,UAAM,eAAe,aAAa;AAClC,YAAQ,2CAAa;AAAA,WACd;AACH,qBAAa,OAAO,GAAG,UAAU,SAAS,oCAAoC,iCAAiC;AAC/G;AAAA,WACG;AACH,qBAAa,OAAO,GAAG,UAAU,SAAS,6BAA6B,mBAAmB;AAC1F;AAAA;AAEA,eAAO;AAAA;AAEX,aAAS,OAAO,MAAM,cAAc,uBAAuB;AAC3D,iBAAa,MAAM,cAAc;AACjC,iBAAa,QAAQ;AACrB,iBAAa,KAAK;AAClB,iDAAc,sBAAsB,eAAe;AACnD,WAAO;AAAA;AAAA;;MCpDE,kBAAkB,MAAmB;AAChD,SAAO,SAAO;AACZ,UAAM,YAAY,CAChB,MACA,kBACS;AACT,YAAM,KAAK,MACR,OAAO,UAAQ,KAAK,aAAa,gBACjC,QAAQ,CAAC,SAAY;AACpB,cAAM,gBAAgB,KAAK,aAAa;AACxC,YAAI,eAAe;AAEjB,cAAI,cAAc,MAAM,kBAAkB;AACxC,iBAAK,aAAa,UAAU;AAAA;AAE9B,gBAAM,2BAA2B,aAAa,OAAO,SAAS;AAE9D,eAAK,aACH,eACA,IAAI,IAAI,eAAe,0BAA0B;AAAA;AAAA;AAAA;AAM3D,cAAU,MAAM,KAAK,IAAI,qBAAqB,OAAO;AAErD,WAAO;AAAA;AAAA;sBAKkB,OAAuB;AAClD,QAAM,MAAM,IAAI,IAAI;AAEpB,MAAI,CAAC,IAAI,SAAS,SAAS,MAAM;AAC/B,QAAI,YAAY;AAAA;AAGlB,SAAO,IAAI;AAAA;;MClCA,uBAAuB,CAAC;AAAA,EACnC;AAAA,EACA;AAAA,MAC8C;AAC9C,SAAO,SAAO;AACZ,UAAM,KAAK,IAAI,qBAAqB,MAAM,QAAQ,UAAQ;AACxD,WAAK,iBAAiB,SAAS,CAAC,MAAkB;AAChD,cAAM,SAAS;AACf,cAAM,OAAO,OAAO,aAAa;AAEjC,YAAI,CAAC;AAAM;AACX,YAAI,KAAK,WAAW,UAAU;AAC5B,YAAE;AACF,kBAAQ,GAAG;AAAA;AAAA;AAAA;AAKjB,WAAO;AAAA;AAAA;;MCvBE,qBAAqB,MAAmB;AACnD,SAAO,SAAO;AAnBhB;AAqBI,cAAI,cAAc,kBAAlB,mBAAiC;AAEjC,WAAO;AAAA;AAAA;;MCLE,uBAAuB,MAAmB;AACrD,SAAO,SAAO;AAnBhB;AAqBI,cAAI,cAAc,4BAAlB,mBAA2C;AAE3C,WAAO;AAAA;AAAA;;MCCE,aAAa,CAAC;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,MACoC;AACpC,SAAO,SAAO;AACZ,UAAM,WAAW,MAAM,KACrB,IAAI,iBAAiB,kCACrB,OAAO,OAAM,SAAK;AAhCxB;AAiCM,wBAAK,aAAa,YAAlB,mBAA2B,WAAW,MAAM;AAAA;AAG9C,QAAI,QAAQ,SAAS;AAErB,QAAI,QAAQ,GAAG;AACb,gBAAU;AAAA;AAGZ,aAAS,QAAQ,aACf,QAAQ,iBAAiB,QAAQ,MAAM;AACrC,eAAS;AAET,UAAI,UAAU,GAAG;AACf,iBAAS;AAAA;AAAA;AAKf,WAAO;AAAA;AAAA;;MC/BE,OAAO;AAAA,EAClB;AAAA,EAAK;AAAA,EAAQ;AAAA,EACb;AAAA,EAAW;AAAA,EAAQ;AAAA,EACnB;AAAA,EAAS;AAAA,EAAS;AAAA,EAAK;AAAA,EACvB;AAAA,EAAO;AAAA,EACP;AAAA,EAAS;AAAA,EACT;AAAA,EACA;AAAA,EAAM;AAAA,EACN;AAAA,EAAU;AAAA,EAAW;AAAA,EAAU;AAAA,EAAQ;AAAA,EACvC;AAAA,EAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;MAIW,MAAM;AAAA,EACjB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;MAGW,aAAa;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;MAGW,SAAS;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;MAGW,OAAO,CAAC;MAQR,wBAAwB;AAAA,EACnC,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH;AAAA;;MCnOWA,SAAO;AAAA,EACljB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA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"}