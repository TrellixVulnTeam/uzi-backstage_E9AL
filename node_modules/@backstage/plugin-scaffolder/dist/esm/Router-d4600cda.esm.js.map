{"version":3,"file":"Router-d4600cda.esm.js","sources":["../../src/filter/context.ts","../../src/filter/EntityFilterGroupsProvider.tsx","../../src/filter/useEntityFilterGroup.ts","../../src/filter/useFilteredEntities.ts","../../src/components/ResultsFilter/ResultsFilter.tsx","../../src/components/ScaffolderFilter/ScaffolderFilter.tsx","../../src/components/SearchToolbar/SearchToolbar.tsx","../../src/components/FavouriteTemplate/FavouriteTemplate.tsx","../../src/components/TemplateCard/TemplateCard.tsx","../../src/components/ScaffolderPage/ScaffolderPage.tsx","../../src/components/MultistepJsonForm/schema.ts","../../src/components/MultistepJsonForm/MultistepJsonForm.tsx","../../src/components/fields/RepoUrlPicker/RepoUrlPicker.tsx","../../src/components/fields/OwnerPicker/OwnerPicker.tsx","../../src/components/TemplatePage/TemplatePage.tsx","../../src/components/hooks/useEventStream.ts","../../src/components/TaskPage/IconLink.tsx","../../src/components/TaskPage/TaskPageLinks.tsx","../../src/components/TaskPage/TaskPage.tsx","../../src/components/ActionsPage/ActionsPage.tsx","../../src/components/Router.tsx"],"sourcesContent":["/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateEntityV1alpha1 } from '@backstage/catalog-model';\nimport { createContext } from 'react';\nimport { FilterGroup, FilterGroupStates } from './types';\n\nexport type FilterGroupsContext = {\n  register: (\n    filterGroupId: string,\n    filterGroup: FilterGroup,\n    initialSelectedFilterIds?: string[],\n  ) => void;\n  unregister: (filterGroupId: string) => void;\n  setGroupSelectedFilters: (filterGroupId: string, filterIds: string[]) => void;\n  setSelectedCategories: (categories: string[]) => void;\n  reload: () => Promise<void>;\n  selectedCategories: string[];\n  loading: boolean;\n  error?: Error;\n  filterGroupStates: { [filterGroupId: string]: FilterGroupStates };\n  filteredEntities: TemplateEntityV1alpha1[];\n  availableCategories: string[];\n  isCatalogEmpty: boolean;\n};\n\n/**\n * The context that maintains shared state for all visible filter groups.\n */\nexport const filterGroupsContext = createContext<\n  FilterGroupsContext | undefined\n>(undefined);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateEntityV1alpha1 } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useAsyncFn } from 'react-use';\nimport { filterGroupsContext, FilterGroupsContext } from './context';\nimport {\n  EntityFilterFn,\n  FilterGroup,\n  FilterGroupState,\n  FilterGroupStates,\n} from './types';\n\n/**\n * Implementation of the shared filter groups state.\n */\nexport const EntityFilterGroupsProvider = ({\n  children,\n}: {\n  children?: React.ReactNode;\n}) => {\n  const state = useProvideEntityFilters();\n  return (\n    <filterGroupsContext.Provider value={state}>\n      {children}\n    </filterGroupsContext.Provider>\n  );\n};\n\n// The hook that implements the actual context building\nfunction useProvideEntityFilters(): FilterGroupsContext {\n  const catalogApi = useApi(catalogApiRef);\n  const [{ value: entities, error }, doReload] = useAsyncFn(async () => {\n    const response = await catalogApi.getEntities({\n      filter: { kind: 'Template' },\n    });\n    return response.items as TemplateEntityV1alpha1[];\n  });\n\n  const filterGroups = useRef<{\n    [filterGroupId: string]: FilterGroup;\n  }>({});\n  const selectedFilterKeys = useRef<{\n    [filterGroupId: string]: Set<string>;\n  }>({});\n  const selectedCategories = useRef<string[]>([]);\n  const [filterGroupStates, setFilterGroupStates] = useState<{\n    [filterGroupId: string]: FilterGroupStates;\n  }>({});\n  const [filteredEntities, setFilteredEntities] = useState<\n    TemplateEntityV1alpha1[]\n  >([]);\n  const [availableCategories, setAvailableCategories] = useState<string[]>([]);\n  const [isCatalogEmpty, setCatalogEmpty] = useState<boolean>(false);\n\n  useEffect(() => {\n    doReload();\n  }, [doReload]);\n\n  const rebuild = useCallback(() => {\n    setFilterGroupStates(\n      buildStates(\n        filterGroups.current,\n        selectedFilterKeys.current,\n        selectedCategories.current,\n        entities,\n        error,\n      ),\n    );\n    setFilteredEntities(\n      buildMatchingEntities(\n        filterGroups.current,\n        selectedFilterKeys.current,\n        selectedCategories.current,\n        entities,\n      ),\n    );\n    setAvailableCategories(collectCategories(entities));\n    setCatalogEmpty(entities !== undefined && entities.length === 0);\n  }, [entities, error]);\n\n  const register = useCallback(\n    (\n      filterGroupId: string,\n      filterGroup: FilterGroup,\n      initialSelectedFilterIds?: string[],\n    ) => {\n      filterGroups.current[filterGroupId] = filterGroup;\n      selectedFilterKeys.current[filterGroupId] = new Set(\n        initialSelectedFilterIds ?? [],\n      );\n      rebuild();\n    },\n    [rebuild],\n  );\n\n  const unregister = useCallback(\n    (filterGroupId: string) => {\n      delete filterGroups.current[filterGroupId];\n      delete selectedFilterKeys.current[filterGroupId];\n      rebuild();\n    },\n    [rebuild],\n  );\n\n  const setGroupSelectedFilters = useCallback(\n    (filterGroupId: string, filters: string[]) => {\n      selectedFilterKeys.current[filterGroupId] = new Set(filters);\n      rebuild();\n    },\n    [rebuild],\n  );\n\n  const setSelectedCategories = useCallback(\n    (categories: string[]) => {\n      selectedCategories.current = categories;\n      rebuild();\n    },\n    [rebuild],\n  );\n\n  const reload = useCallback(async () => {\n    await doReload();\n  }, [doReload]);\n\n  return {\n    register,\n    unregister,\n    setGroupSelectedFilters,\n    setSelectedCategories,\n    reload,\n    selectedCategories: selectedCategories.current,\n    loading: !error && !entities,\n    error,\n    filterGroupStates,\n    filteredEntities,\n    availableCategories,\n    isCatalogEmpty,\n  };\n}\n\n// Given all filter groups and what filters are actually selected, along with\n// the loading state for entities, generate the state of each individual filter\nfunction buildStates(\n  filterGroups: { [filterGroupId: string]: FilterGroup },\n  selectedFilterKeys: { [filterGroupId: string]: Set<string> },\n  selectedCategories: string[],\n  entities?: TemplateEntityV1alpha1[],\n  error?: Error,\n): { [filterGroupId: string]: FilterGroupStates } {\n  // On error - all entries are an error state\n  if (error) {\n    return Object.fromEntries(\n      Object.keys(filterGroups).map(filterGroupId => [\n        filterGroupId,\n        { type: 'error', error },\n      ]),\n    );\n  }\n\n  // On startup - all entries are a loading state\n  if (!entities) {\n    return Object.fromEntries(\n      Object.keys(filterGroups).map(filterGroupId => [\n        filterGroupId,\n        { type: 'loading' },\n      ]),\n    );\n  }\n\n  const result: { [filterGroupId: string]: FilterGroupStates } = {};\n  for (const [filterGroupId, filterGroup] of Object.entries(filterGroups)) {\n    const otherMatchingEntities = buildMatchingEntities(\n      filterGroups,\n      selectedFilterKeys,\n      selectedCategories,\n      entities,\n      filterGroupId,\n    );\n    const groupState: FilterGroupState = { filters: {} };\n    for (const [filterId, filterFn] of Object.entries(filterGroup.filters)) {\n      const isSelected = !!selectedFilterKeys[filterGroupId]?.has(filterId);\n      const matchCount = otherMatchingEntities.filter(entity =>\n        filterFn(entity),\n      ).length;\n      groupState.filters[filterId] = { isSelected, matchCount };\n    }\n    result[filterGroupId] = { type: 'ready', state: groupState };\n  }\n\n  return result;\n}\n\n// Given all entites, find all possible categories and provide them in a sorted list.\nfunction collectCategories(entities?: TemplateEntityV1alpha1[]): string[] {\n  const categories = new Set<string>();\n  (entities || []).forEach(e => {\n    if (e.spec?.type) {\n      categories.add(e.spec.type as string);\n    }\n  });\n  return Array.from(categories).sort();\n}\n\n// Given all filter groups and what filters are actually selected, extract all\n// entities that match all those filter groups.\nfunction buildMatchingEntities(\n  filterGroups: { [filterGroupId: string]: FilterGroup },\n  selectedFilterKeys: { [filterGroupId: string]: Set<string> },\n  selectedCategories: string[],\n  entities?: TemplateEntityV1alpha1[],\n  excludeFilterGroupId?: string,\n): TemplateEntityV1alpha1[] {\n  // Build one filter fn per filter group\n  const allFilters: EntityFilterFn[] = [];\n  for (const [filterGroupId, filterGroup] of Object.entries(filterGroups)) {\n    if (excludeFilterGroupId === filterGroupId) {\n      continue;\n    }\n\n    // Pick out all of the filter functions in the group that are actually\n    // selected\n    const groupFilters: EntityFilterFn[] = [];\n    for (const [filterId, filterFn] of Object.entries(filterGroup.filters)) {\n      if (!!selectedFilterKeys[filterGroupId]?.has(filterId)) {\n        groupFilters.push(filterFn);\n      }\n    }\n\n    // Need to match any of the selected filters in the group - if there is\n    // any at all\n    if (groupFilters.length) {\n      allFilters.push(entity => groupFilters.some(fn => fn(entity)));\n    }\n  }\n\n  // Filter by categories, if at least one category is selected.\n  if (selectedCategories.length > 0) {\n    allFilters.push(entity =>\n      selectedCategories.some(c => entity.spec?.type === c),\n    );\n  }\n\n  // All filter groups that had any checked filters need to match. Note that\n  // every() always returns true for an empty array.\n  return entities?.filter(entity => allFilters.every(fn => fn(entity))) ?? [];\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useContext, useEffect, useMemo } from 'react';\nimport { filterGroupsContext } from './context';\nimport { FilterGroup, FilterGroupStates } from './types';\n\nexport type EntityFilterGroupOutput = {\n  state: FilterGroupStates;\n  setSelectedFilters: (filterIds: string[]) => void;\n};\n\n/**\n * Hook that exposes the relevant data and operations for a single filter\n * group.\n */\nexport const useEntityFilterGroup = (\n  filterGroupId: string,\n  filterGroup: FilterGroup,\n  initialSelectedFilters?: string[],\n): EntityFilterGroupOutput => {\n  const context = useContext(filterGroupsContext);\n  if (!context) {\n    throw new Error(`Must be used inside an EntityFilterGroupsProvider`);\n  }\n  const {\n    register,\n    unregister,\n    setGroupSelectedFilters,\n    filterGroupStates,\n  } = context;\n\n  // Intentionally consider initial set only at mount time\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const initialMemo = useMemo(() => initialSelectedFilters?.slice(), []);\n\n  // Register the group on mount, and unregister on unmount\n  useEffect(() => {\n    register(filterGroupId, filterGroup, initialMemo);\n    return () => unregister(filterGroupId);\n  }, [register, unregister, filterGroupId, filterGroup, initialMemo]);\n\n  const setSelectedFilters = useCallback(\n    (filters: string[]) => {\n      setGroupSelectedFilters(filterGroupId, filters);\n    },\n    [setGroupSelectedFilters, filterGroupId],\n  );\n\n  let state = filterGroupStates[filterGroupId];\n  if (!state) {\n    state = { type: 'loading' };\n  }\n\n  return { state, setSelectedFilters };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useContext } from 'react';\nimport { filterGroupsContext } from './context';\n\n/**\n * Hook that exposes the result of applying a set of filter groups.\n */\nexport function useFilteredEntities() {\n  const context = useContext(filterGroupsContext);\n  if (!context) {\n    throw new Error(`Must be used inside an EntityFilterGroupsProvider`);\n  }\n\n  return {\n    loading: context.loading,\n    error: context.error,\n    filteredEntities: context.filteredEntities,\n    availableCategories: context.availableCategories,\n    isCatalogEmpty: context.isCatalogEmpty,\n    reload: context.reload,\n  };\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { filterGroupsContext } from '../../filter/context';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  filterBox: {\n    display: 'flex',\n    margin: theme.spacing(2, 0, 0, 0),\n  },\n  filterBoxTitle: {\n    margin: theme.spacing(1, 0, 0, 1),\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  title: {\n    margin: theme.spacing(1, 0, 0, 1),\n    textTransform: 'uppercase',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  checkbox: {\n    padding: theme.spacing(0, 1, 0, 1),\n  },\n}));\n\ntype Props = {\n  availableCategories: string[];\n};\n\n/**\n * The additional results filter in the sidebar.\n */\nexport const ResultsFilter = ({ availableCategories }: Props) => {\n  const classes = useStyles();\n\n  const context = useContext(filterGroupsContext);\n  if (!context) {\n    throw new Error(`Must be used inside an EntityFilterGroupsProvider`);\n  }\n\n  const { selectedCategories, setSelectedCategories } = context;\n\n  return (\n    <>\n      <div className={classes.filterBox}>\n        <Typography variant=\"subtitle2\" className={classes.filterBoxTitle}>\n          Refine Results\n        </Typography>{' '}\n        <Button onClick={() => setSelectedCategories([])}>Clear</Button>\n      </div>\n      <Divider />\n      <Typography variant=\"subtitle2\" className={classes.title}>\n        Categories\n      </Typography>\n      <List disablePadding dense>\n        {availableCategories.map(category => {\n          const labelId = `checkbox-list-label-${category}`;\n          return (\n            <ListItem\n              key={category}\n              dense\n              button\n              onClick={() =>\n                setSelectedCategories(\n                  selectedCategories.includes(category)\n                    ? selectedCategories.filter(\n                        selectedCategory => selectedCategory !== category,\n                      )\n                    : [...selectedCategories, category],\n                )\n              }\n            >\n              <Checkbox\n                edge=\"start\"\n                color=\"primary\"\n                checked={selectedCategories.includes(category)}\n                tabIndex={-1}\n                disableRipple\n                className={classes.checkbox}\n                inputProps={{ 'aria-labelledby': labelId }}\n              />\n              <ListItemText\n                id={labelId}\n                primary={\n                  category.charAt(0).toLocaleUpperCase('en-US') +\n                  category.slice(1)\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { IconComponent } from '@backstage/core';\nimport {\n  Card,\n  List,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  MenuItem,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { FilterGroup, useEntityFilterGroup } from '../../filter';\n\nexport type ButtonGroup = {\n  name: string;\n  items: {\n    id: string;\n    label: string;\n    icon?: IconComponent;\n    filterFn: (entity: Entity) => boolean;\n  }[];\n};\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .11)',\n    boxShadow: 'none',\n  },\n  title: {\n    margin: theme.spacing(1, 0, 0, 1),\n    textTransform: 'uppercase',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  listIcon: {\n    minWidth: 30,\n    color: theme.palette.text.primary,\n  },\n  menuItem: {\n    minHeight: theme.spacing(6),\n  },\n  groupWrapper: {\n    margin: theme.spacing(1, 1, 2, 1),\n  },\n  menuTitle: {\n    fontWeight: 500,\n  },\n}));\n\ntype OnChangeCallback = (item: { id: string; label: string }) => void;\n\ntype Props = {\n  buttonGroups: ButtonGroup[];\n  initiallySelected: string;\n  onChange?: OnChangeCallback;\n};\n\n/**\n * The main filter group in the sidebar, toggling owned/starred/all.\n */\nexport const ScaffolderFilter = ({\n  buttonGroups,\n  onChange,\n  initiallySelected,\n}: Props) => {\n  const classes = useStyles();\n  const { currentFilter, setCurrentFilter, getFilterCount } = useFilter(\n    buttonGroups,\n    initiallySelected,\n  );\n\n  const onChangeRef = useRef<OnChangeCallback>();\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  const setCurrent = useCallback(\n    (item: { id: string; label: string }) => {\n      setCurrentFilter(item.id);\n      onChangeRef.current?.({ id: item.id, label: item.label });\n    },\n    [setCurrentFilter],\n  );\n\n  // Make one initial onChange to inform the surroundings about the selected\n  // item\n  useEffect(() => {\n    const items = buttonGroups.flatMap(g => g.items);\n    const item = items.find(i => i.id === initiallySelected) || items[0];\n    if (item) {\n      onChangeRef.current?.({ id: item.id, label: item.label });\n    }\n    // intentionally only happens on startup\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Card className={classes.root}>\n      {buttonGroups.map(group => (\n        <React.Fragment key={group.name}>\n          <Typography variant=\"subtitle2\" className={classes.title}>\n            {group.name}\n          </Typography>\n          <Card className={classes.groupWrapper}>\n            <List disablePadding dense>\n              {group.items.map(item => (\n                <MenuItem\n                  key={item.id}\n                  button\n                  divider\n                  onClick={() => setCurrent(item)}\n                  selected={item.id === currentFilter}\n                  className={classes.menuItem}\n                >\n                  {item.icon && (\n                    <ListItemIcon className={classes.listIcon}>\n                      <item.icon fontSize=\"small\" />\n                    </ListItemIcon>\n                  )}\n                  <ListItemText>\n                    <Typography variant=\"body1\" className={classes.menuTitle}>\n                      {item.label}\n                    </Typography>\n                  </ListItemText>\n                  <ListItemSecondaryAction>\n                    {getFilterCount(item.id) ?? '-'}\n                  </ListItemSecondaryAction>\n                </MenuItem>\n              ))}\n            </List>\n          </Card>\n        </React.Fragment>\n      ))}\n    </Card>\n  );\n};\n\nfunction useFilter(\n  buttonGroups: ButtonGroup[],\n  initiallySelected: string,\n): {\n  currentFilter: string;\n  setCurrentFilter: (filterId: string) => void;\n  getFilterCount: (filterId: string) => number | undefined;\n} {\n  const [currentFilter, setCurrentFilter] = useState(initiallySelected);\n\n  const filterGroup = useMemo<FilterGroup>(\n    () => ({\n      filters: Object.fromEntries(\n        buttonGroups.flatMap(g => g.items).map(i => [i.id, i.filterFn]),\n      ),\n    }),\n    [buttonGroups],\n  );\n\n  const { setSelectedFilters, state } = useEntityFilterGroup(\n    'primary-sidebar',\n    filterGroup,\n    [initiallySelected],\n  );\n\n  const setCurrent = useCallback(\n    (filterId: string) => {\n      setCurrentFilter(filterId);\n      setSelectedFilters([filterId]);\n    },\n    [setCurrentFilter, setSelectedFilters],\n  );\n\n  const getFilterCount = useCallback(\n    (filterId: string) => {\n      if (state.type !== 'ready') {\n        return undefined;\n      }\n      return state.state.filters[filterId].matchCount;\n    },\n    [state],\n  );\n\n  return {\n    currentFilter,\n    setCurrentFilter: setCurrent,\n    getFilterCount,\n  };\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport {\n  FormControl,\n  InputAdornment,\n  makeStyles,\n  Toolbar,\n  Input,\n  IconButton,\n} from '@material-ui/core';\nimport Search from '@material-ui/icons/Search';\nimport Clear from '@material-ui/icons/Clear';\n\ninterface Props {\n  search: string;\n  setSearch: Function;\n}\n\nconst useStyles = makeStyles(_theme => ({\n  searchToolbar: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n}));\n\nconst SearchToolbar = ({ search, setSearch }: Props) => {\n  const styles = useStyles();\n  return (\n    <Toolbar className={styles.searchToolbar}>\n      <FormControl>\n        <Input\n          id=\"input-with-icon-adornment\"\n          placeholder=\"Search\"\n          autoComplete=\"off\"\n          onChange={event => setSearch(event.target.value)}\n          value={search}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Search />\n            </InputAdornment>\n          }\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"clear search\"\n                onClick={() => setSearch('')}\n                edge=\"end\"\n                disabled={search.length === 0}\n              >\n                <Clear />\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </Toolbar>\n  );\n};\n\nexport default SearchToolbar;\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentProps, useMemo } from 'react';\nimport { useStarredEntities } from '@backstage/plugin-catalog-react';\nimport { IconButton, makeStyles, Tooltip, withStyles } from '@material-ui/core';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport Star from '@material-ui/icons/Star';\nimport { Entity } from '@backstage/catalog-model';\n\ntype Props = ComponentProps<typeof IconButton> & { entity: Entity };\n\nconst YellowStar = withStyles({\n  root: {\n    color: '#f3ba37',\n  },\n})(Star);\n\nconst WhiteBorderStar = withStyles({\n  root: {\n    color: '#ffffff',\n  },\n})(StarBorder);\n\nconst useStyles = makeStyles(theme => ({\n  starButton: {\n    position: 'absolute',\n    top: theme.spacing(0.5),\n    right: theme.spacing(0.5),\n    padding: '0.25rem',\n  },\n}));\n\nexport const favouriteTemplateTooltip = (isStarred: boolean) =>\n  isStarred ? 'Remove from favorites' : 'Add to favorites';\n\nexport const favouriteTemplateIcon = (isStarred: boolean) =>\n  isStarred ? <YellowStar /> : <WhiteBorderStar />;\n\n/**\n * IconButton for showing if a current entity is starred and adding/removing it from the favourite entities\n * @param props MaterialUI IconButton props extended by required `entity` prop\n */\nexport const FavouriteTemplate = (props: Props) => {\n  const classes = useStyles();\n  const { toggleStarredEntity, isStarredEntity } = useStarredEntities();\n  const isStarred = useMemo(() => isStarredEntity(props.entity), [\n    isStarredEntity,\n    props.entity,\n  ]);\n  return (\n    <IconButton\n      color=\"inherit\"\n      className={classes.starButton}\n      {...props}\n      onClick={() => toggleStarredEntity(props.entity)}\n    >\n      <Tooltip title={favouriteTemplateTooltip(isStarred)}>\n        {favouriteTemplateIcon(isStarred)}\n      </Tooltip>\n    </IconButton>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Button, ItemCardHeader, useRouteRef } from '@backstage/core';\nimport { BackstageTheme, pageTheme } from '@backstage/theme';\nimport {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Chip,\n  Link,\n  makeStyles,\n  Tooltip,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport React from 'react';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { generatePath } from 'react-router';\nimport { rootRouteRef } from '../../routes';\nimport {\n  TemplateEntityV1alpha1,\n  Entity,\n  RELATION_OWNED_BY,\n} from '@backstage/catalog-model';\nimport { FavouriteTemplate } from '../FavouriteTemplate/FavouriteTemplate';\nimport {\n  getEntityRelations,\n  EntityRefLinks,\n} from '@backstage/plugin-catalog-react';\n\nconst useStyles = makeStyles(theme => ({\n  cardHeader: {\n    position: 'relative',\n  },\n  title: {\n    backgroundImage: ({ backgroundImage }: any) => backgroundImage,\n  },\n  box: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    display: '-webkit-box',\n    '-webkit-line-clamp': 10,\n    '-webkit-box-orient': 'vertical',\n    paddingBottom: '0.8em',\n  },\n  label: {\n    color: theme.palette.text.secondary,\n    textTransform: 'uppercase',\n    fontSize: '0.65rem',\n    fontWeight: 'bold',\n    letterSpacing: 0.5,\n    lineHeight: 1,\n    paddingBottom: '0.2rem',\n  },\n}));\n\nconst useDeprecationStyles = makeStyles(theme => ({\n  deprecationIcon: {\n    position: 'absolute',\n    top: theme.spacing(0.5),\n    right: theme.spacing(3.5),\n    padding: '0.25rem',\n  },\n  link: {\n    color: theme.palette.warning.light,\n  },\n}));\n\nexport type TemplateCardProps = {\n  template: TemplateEntityV1alpha1;\n  deprecated?: boolean;\n};\n\ntype TemplateProps = {\n  description: string;\n  tags: string[];\n  title: string;\n  type: string;\n  name: string;\n};\n\nconst getTemplateCardProps = (\n  template: TemplateEntityV1alpha1,\n): TemplateProps & { key: string } => {\n  return {\n    key: template.metadata.uid!,\n    name: template.metadata.name,\n    title: `${(template.metadata.title || template.metadata.name) ?? ''}`,\n    type: template.spec.type ?? '',\n    description: template.metadata.description ?? '-',\n    tags: (template.metadata?.tags as string[]) ?? [],\n  };\n};\n\nconst DeprecationWarning = () => {\n  const styles = useDeprecationStyles();\n\n  const Title = (\n    <Typography style={{ padding: 10, maxWidth: 300 }}>\n      This template syntax is deprecated. Click for more info.\n    </Typography>\n  );\n\n  return (\n    <div className={styles.deprecationIcon}>\n      <Tooltip title={Title}>\n        <Link\n          href=\"https://backstage.io/docs/features/software-templates/migrating-from-v1alpha1-to-v1beta2\"\n          className={styles.link}\n        >\n          <WarningIcon />\n        </Link>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport const TemplateCard = ({ template, deprecated }: TemplateCardProps) => {\n  const backstageTheme = useTheme<BackstageTheme>();\n  const rootLink = useRouteRef(rootRouteRef);\n  const templateProps = getTemplateCardProps(template);\n  const ownedByRelations = getEntityRelations(\n    template as Entity,\n    RELATION_OWNED_BY,\n  );\n  const themeId = pageTheme[templateProps.type] ? templateProps.type : 'other';\n  const theme = backstageTheme.getPageTheme({ themeId });\n  const classes = useStyles({ backgroundImage: theme.backgroundImage });\n  const href = generatePath(`${rootLink()}/templates/:templateName`, {\n    templateName: templateProps.name,\n  });\n\n  return (\n    <Card>\n      <CardMedia className={classes.cardHeader}>\n        <FavouriteTemplate entity={template} />\n        {deprecated && <DeprecationWarning />}\n        <ItemCardHeader\n          title={templateProps.title}\n          subtitle={templateProps.type}\n          classes={{ root: classes.title }}\n        />\n      </CardMedia>\n      <CardContent style={{ display: 'grid' }}>\n        <Box className={classes.box}>\n          <Typography variant=\"body2\" className={classes.label}>\n            Description\n          </Typography>\n          {templateProps.description}\n        </Box>\n        <Box className={classes.box}>\n          <Typography variant=\"body2\" className={classes.label}>\n            Owner\n          </Typography>\n          <EntityRefLinks entityRefs={ownedByRelations} defaultKind=\"Group\" />\n        </Box>\n        <Box>\n          <Typography variant=\"body2\" className={classes.label}>\n            Tags\n          </Typography>\n          {templateProps.tags?.map(tag => (\n            <Chip size=\"small\" label={tag} key={tag} />\n          ))}\n        </Box>\n      </CardContent>\n      <CardActions>\n        <Button\n          color=\"primary\"\n          to={href}\n          aria-label={`Choose ${templateProps.title} `}\n        >\n          Choose\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityMeta, TemplateEntityV1alpha1 } from '@backstage/catalog-model';\nimport {\n  configApiRef,\n  Content,\n  ContentHeader,\n  Header,\n  ItemCardGrid,\n  Lifecycle,\n  Page,\n  Progress,\n  SupportButton,\n  useApi,\n  useRouteRef,\n  WarningPanel,\n} from '@backstage/core';\nimport { useStarredEntities } from '@backstage/plugin-catalog-react';\nimport { Button, Link, makeStyles, Typography } from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { EntityFilterGroupsProvider, useFilteredEntities } from '../../filter';\nimport { ResultsFilter } from '../ResultsFilter/ResultsFilter';\nimport { ScaffolderFilter } from '../ScaffolderFilter';\nimport { ButtonGroup } from '../ScaffolderFilter/ScaffolderFilter';\nimport SearchToolbar from '../SearchToolbar/SearchToolbar';\nimport { TemplateCard } from '../TemplateCard';\nimport { registerComponentRouteRef } from '../../routes';\n\nconst useStyles = makeStyles(theme => ({\n  contentWrapper: {\n    display: 'grid',\n    gridTemplateAreas: \"'filters' 'grid'\",\n    gridTemplateColumns: '250px 1fr',\n    gridColumnGap: theme.spacing(2),\n  },\n}));\n\nexport const ScaffolderPageContents = () => {\n  const styles = useStyles();\n  const {\n    loading,\n    error,\n    filteredEntities,\n    availableCategories,\n  } = useFilteredEntities();\n  const configApi = useApi(configApiRef);\n  const orgName = configApi.getOptionalString('organization.name') ?? 'Company';\n  const { isStarredEntity } = useStarredEntities();\n  const filterGroups = useMemo<ButtonGroup[]>(\n    () => [\n      {\n        name: orgName,\n        items: [\n          {\n            id: 'all',\n            label: 'All',\n            filterFn: () => true,\n          },\n        ],\n      },\n      {\n        name: 'Personal',\n        items: [\n          {\n            id: 'starred',\n            label: 'Starred',\n            icon: StarIcon,\n            filterFn: isStarredEntity,\n          },\n        ],\n      },\n    ],\n    [isStarredEntity, orgName],\n  );\n  const [search, setSearch] = useState('');\n  const [matchingEntities, setMatchingEntities] = useState(\n    [] as TemplateEntityV1alpha1[],\n  );\n\n  const matchesQuery = (metadata: EntityMeta, query: string) =>\n    `${metadata.title}`.toLocaleUpperCase('en-US').includes(query) ||\n    metadata.tags?.join('').toLocaleUpperCase('en-US').indexOf(query) !== -1;\n\n  const registerComponentLink = useRouteRef(registerComponentRouteRef);\n\n  useEffect(() => {\n    if (search.length === 0) {\n      return setMatchingEntities(filteredEntities);\n    }\n    return setMatchingEntities(\n      filteredEntities.filter(template =>\n        matchesQuery(template.metadata, search.toLocaleUpperCase('en-US')),\n      ),\n    );\n  }, [search, filteredEntities]);\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        pageTitleOverride=\"Create a New Component\"\n        title={\n          <>\n            Create a New Component <Lifecycle alpha shorthand />\n          </>\n        }\n        subtitle=\"Create new software components using standard templates\"\n      />\n      <Content>\n        <ContentHeader title=\"Available Templates\">\n          {registerComponentLink && (\n            <Button\n              component={RouterLink}\n              variant=\"contained\"\n              color=\"primary\"\n              to={registerComponentLink()}\n            >\n              Register Existing Component\n            </Button>\n          )}\n          <SupportButton>\n            Create new software components using standard templates. Different\n            templates create different kinds of components (services, websites,\n            documentation, ...).\n          </SupportButton>\n        </ContentHeader>\n\n        <div className={styles.contentWrapper}>\n          <div>\n            <SearchToolbar search={search} setSearch={setSearch} />\n            <ScaffolderFilter\n              buttonGroups={filterGroups}\n              initiallySelected=\"all\"\n            />\n            <ResultsFilter availableCategories={availableCategories} />\n          </div>\n          <div>\n            {loading && <Progress />}\n\n            {error && (\n              <WarningPanel title=\"Oops! Something went wrong loading the templates\">\n                {error.message}\n              </WarningPanel>\n            )}\n\n            {!error &&\n              !loading &&\n              matchingEntities &&\n              !matchingEntities.length && (\n                <Typography variant=\"body2\">\n                  No templates found that match your filter. Learn more about{' '}\n                  <Link href=\"https://backstage.io/docs/features/software-templates/adding-templates\">\n                    adding templates\n                  </Link>\n                  .\n                </Typography>\n              )}\n\n            <ItemCardGrid>\n              {matchingEntities &&\n                matchingEntities?.length > 0 &&\n                matchingEntities.map(template => (\n                  <TemplateCard\n                    template={template}\n                    deprecated={template.apiVersion === 'backstage.io/v1alpha1'}\n                  />\n                ))}\n            </ItemCardGrid>\n          </div>\n        </div>\n      </Content>\n    </Page>\n  );\n};\n\nexport const ScaffolderPage = () => (\n  <EntityFilterGroupsProvider>\n    <ScaffolderPageContents />\n  </EntityFilterGroupsProvider>\n);\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject } from '@backstage/config';\nimport { FormProps } from '@rjsf/core';\n\nfunction isObject(value: unknown): value is JsonObject {\n  return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction extractUiSchema(schema: JsonObject, uiSchema: JsonObject) {\n  if (!isObject(schema)) {\n    return;\n  }\n\n  const { properties, anyOf, oneOf, allOf } = schema;\n\n  for (const propName in schema) {\n    if (!schema.hasOwnProperty(propName)) {\n      continue;\n    }\n\n    if (propName.startsWith('ui:')) {\n      uiSchema[propName] = schema[propName];\n      delete schema[propName];\n    }\n  }\n\n  if (isObject(properties)) {\n    for (const propName in properties) {\n      if (!properties.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      const schemaNode = properties[propName];\n      if (!isObject(schemaNode)) {\n        continue;\n      }\n      const innerUiSchema = {};\n      uiSchema[propName] = innerUiSchema;\n      extractUiSchema(schemaNode, innerUiSchema);\n    }\n  }\n\n  if (Array.isArray(anyOf)) {\n    for (const schemaNode of anyOf) {\n      if (!isObject(schemaNode)) {\n        continue;\n      }\n      extractUiSchema(schemaNode, uiSchema);\n    }\n  }\n\n  if (Array.isArray(oneOf)) {\n    for (const schemaNode of oneOf) {\n      if (!isObject(schemaNode)) {\n        continue;\n      }\n      extractUiSchema(schemaNode, uiSchema);\n    }\n  }\n\n  if (Array.isArray(allOf)) {\n    for (const schemaNode of allOf) {\n      if (!isObject(schemaNode)) {\n        continue;\n      }\n      extractUiSchema(schemaNode, uiSchema);\n    }\n  }\n}\n\nexport function transformSchemaToProps(\n  inputSchema: JsonObject,\n): { schema: FormProps<any>['schema']; uiSchema: FormProps<any>['uiSchema'] } {\n  inputSchema.type = inputSchema.type || 'object';\n  const schema = JSON.parse(JSON.stringify(inputSchema));\n  delete schema.title; // Rendered separately\n  const uiSchema = {};\n  extractUiSchema(schema, uiSchema);\n  return { schema, uiSchema };\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { JsonObject } from '@backstage/config';\nimport { Content, StructuredMetadataTable } from '@backstage/core';\nimport {\n  Box,\n  Button,\n  Paper,\n  Step as StepUI,\n  StepContent,\n  StepLabel,\n  Stepper,\n  Typography,\n} from '@material-ui/core';\nimport { FormProps, IChangeEvent, withTheme } from '@rjsf/core';\nimport { Theme as MuiTheme } from '@rjsf/material-ui';\nimport React, { useState } from 'react';\nimport { transformSchemaToProps } from './schema';\n\nconst Form = withTheme(MuiTheme);\ntype Step = {\n  schema: JsonObject;\n  title: string;\n} & Partial<Omit<FormProps<any>, 'schema'>>;\n\ntype Props = {\n  /**\n   * Steps for the form, each contains title and form schema\n   */\n  steps: Step[];\n  formData: Record<string, any>;\n  onChange: (e: IChangeEvent) => void;\n  onReset: () => void;\n  onFinish: () => void;\n  widgets?: FormProps<any>['widgets'];\n  fields?: FormProps<any>['fields'];\n};\n\nexport const MultistepJsonForm = ({\n  steps,\n  formData,\n  onChange,\n  onReset,\n  onFinish,\n  fields,\n  widgets,\n}: Props) => {\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleReset = () => {\n    setActiveStep(0);\n    onReset();\n  };\n  const handleNext = () =>\n    setActiveStep(Math.min(activeStep + 1, steps.length));\n  const handleBack = () => setActiveStep(Math.max(activeStep - 1, 0));\n\n  return (\n    <>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map(({ title, schema, ...formProps }, index) => {\n          return (\n            <StepUI key={title}>\n              <StepLabel\n                aria-label={`Step ${index + 1} ${title}`}\n                aria-disabled=\"false\"\n                tabIndex={0}\n              >\n                <Typography variant=\"h6\" component=\"h3\">\n                  {title}\n                </Typography>\n              </StepLabel>\n              <StepContent key={title}>\n                <Form\n                  showErrorList={false}\n                  fields={fields}\n                  widgets={widgets}\n                  noHtml5Validate\n                  formData={formData}\n                  onChange={onChange}\n                  onSubmit={e => {\n                    if (e.errors.length === 0) handleNext();\n                  }}\n                  {...formProps}\n                  {...transformSchemaToProps(schema)}\n                >\n                  <Button disabled={activeStep === 0} onClick={handleBack}>\n                    Back\n                  </Button>\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                    Next step\n                  </Button>\n                </Form>\n              </StepContent>\n            </StepUI>\n          );\n        })}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Content>\n          <Paper square elevation={0}>\n            <Typography variant=\"h6\">Review and create</Typography>\n            <StructuredMetadataTable dense metadata={formData} />\n            <Box mb={4} />\n            <Button onClick={handleBack}>Back</Button>\n            <Button onClick={handleReset}>Reset</Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={onFinish}>\n              Create\n            </Button>\n          </Paper>\n        </Content>\n      )}\n    </>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useCallback, useEffect } from 'react';\nimport { Field } from '@rjsf/core';\nimport { useApi, Progress } from '@backstage/core';\nimport { scaffolderApiRef } from '../../../api';\nimport { useAsync } from 'react-use';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nfunction splitFormData(url: string | undefined) {\n  let host = undefined;\n  let owner = undefined;\n  let repo = undefined;\n  let organization = undefined;\n\n  try {\n    if (url) {\n      const parsed = new URL(`https://${url}`);\n      host = parsed.host;\n      owner = parsed.searchParams.get('owner') || undefined;\n      repo = parsed.searchParams.get('repo') || undefined;\n      // This is azure dev ops specific. not used for any other provider.\n      organization = parsed.searchParams.get('organization') || undefined;\n    }\n  } catch {\n    /* ok */\n  }\n\n  return { host, owner, repo, organization };\n}\n\nfunction serializeFormData(data: {\n  host?: string;\n  owner?: string;\n  repo?: string;\n  organization?: string;\n}) {\n  if (!data.host) {\n    return undefined;\n  }\n  const params = new URLSearchParams();\n  if (data.owner) {\n    params.set('owner', data.owner);\n  }\n  if (data.repo) {\n    params.set('repo', data.repo);\n  }\n  if (data.organization) {\n    params.set('organization', data.organization);\n  }\n\n  return `${data.host}?${params.toString()}`;\n}\n\nexport const RepoUrlPicker: Field = ({\n  onChange,\n  uiSchema,\n  rawErrors,\n  formData,\n}) => {\n  const api = useApi(scaffolderApiRef);\n  const allowedHosts = uiSchema['ui:options']?.allowedHosts as string[];\n\n  const { value: integrations, loading } = useAsync(async () => {\n    return await api.getIntegrationsList({ allowedHosts });\n  });\n\n  const { host, owner, repo, organization } = splitFormData(formData);\n  const updateHost = useCallback(\n    (evt: React.ChangeEvent<{ name?: string; value: unknown }>) =>\n      onChange(\n        serializeFormData({\n          host: evt.target.value as string,\n          owner,\n          repo,\n          organization,\n        }),\n      ),\n    [onChange, owner, repo, organization],\n  );\n\n  const updateOwner = useCallback(\n    (evt: React.ChangeEvent<{ name?: string; value: unknown }>) =>\n      onChange(\n        serializeFormData({\n          host,\n          owner: evt.target.value as string,\n          repo,\n          organization,\n        }),\n      ),\n    [onChange, host, repo, organization],\n  );\n\n  const updateRepo = useCallback(\n    (evt: React.ChangeEvent<{ name?: string; value: unknown }>) =>\n      onChange(\n        serializeFormData({\n          host,\n          owner,\n          repo: evt.target.value as string,\n          organization,\n        }),\n      ),\n    [onChange, host, owner, organization],\n  );\n\n  const updateOrganization = useCallback(\n    (evt: React.ChangeEvent<{ name?: string; value: unknown }>) =>\n      onChange(\n        serializeFormData({\n          host,\n          owner,\n          repo,\n          organization: evt.target.value as string,\n        }),\n      ),\n    [onChange, host, owner, repo],\n  );\n\n  useEffect(() => {\n    if (host === undefined && integrations?.length) {\n      onChange(\n        serializeFormData({\n          host: integrations[0].host,\n          owner,\n          repo,\n          organization,\n        }),\n      );\n    }\n  }, [onChange, integrations, host, owner, repo, organization]);\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !host}\n      >\n        <InputLabel htmlFor=\"hostInput\">Host</InputLabel>\n        <Select native id=\"hostInput\" onChange={updateHost} value={host}>\n          {integrations ? (\n            integrations\n              .filter(i => allowedHosts?.includes(i.host))\n              .map(i => (\n                <option key={i.host} value={i.host}>\n                  {i.title}\n                </option>\n              ))\n          ) : (\n            <p>loading</p>\n          )}\n        </Select>\n        <FormHelperText>\n          The host where the repository will be created\n        </FormHelperText>\n      </FormControl>\n      {host === 'dev.azure.com' && (\n        <FormControl\n          margin=\"normal\"\n          required\n          error={rawErrors?.length > 0 && !organization}\n        >\n          <InputLabel htmlFor=\"repoInput\">Organization</InputLabel>\n          <Input\n            id=\"repoInput\"\n            onChange={updateOrganization}\n            value={organization}\n          />\n          <FormHelperText>The name of the organization</FormHelperText>\n        </FormControl>\n      )}\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !owner}\n      >\n        <InputLabel htmlFor=\"ownerInput\">Owner</InputLabel>\n        <Input id=\"ownerInput\" onChange={updateOwner} value={owner} />\n        <FormHelperText>\n          The organization, user or project that this repo will belong to\n        </FormHelperText>\n      </FormControl>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !repo}\n      >\n        <InputLabel htmlFor=\"repoInput\">Repository</InputLabel>\n        <Input id=\"repoInput\" onChange={updateRepo} value={repo} />\n        <FormHelperText>The name of the repository</FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { Field } from '@rjsf/core';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { useApi } from '@backstage/core';\nimport { useAsync } from 'react-use';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Entity } from '@backstage/catalog-model';\nimport { TextField } from '@material-ui/core';\n\nconst entityRef = (entity: Entity | undefined): string => {\n  if (!entity) {\n    return '';\n  }\n  const {\n    kind,\n    metadata: { namespace, name },\n  } = entity;\n\n  const namespacePart =\n    !namespace || namespace === 'default' ? '' : `${namespace}/`;\n  const kindPart = kind.toLowerCase() === 'group' ? '' : `${kind}:`;\n\n  return `${kindPart}${namespacePart}${name}`;\n};\n\nexport const OwnerPicker: Field = ({\n  onChange,\n  schema: { title = 'Owner', description = 'The owner of the component' },\n  required,\n  uiSchema,\n  rawErrors,\n  formData,\n}) => {\n  const allowedKinds = (uiSchema['ui:options']?.allowedKinds || [\n    'Group',\n    'User',\n  ]) as string[];\n  const catalogApi = useApi(catalogApiRef);\n\n  const { value: owners, loading } = useAsync(() =>\n    catalogApi.getEntities({ filter: { kind: allowedKinds } }),\n  );\n\n  const ownerRefs = owners?.items.map(entityRef);\n\n  const onSelect = (_: any, value: string | null) => {\n    onChange(value || '');\n  };\n\n  return (\n    <FormControl\n      margin=\"normal\"\n      required={required}\n      error={rawErrors?.length > 0 && !formData}\n    >\n      <Autocomplete\n        value={(formData as string) || ''}\n        loading={loading}\n        onChange={onSelect}\n        options={ownerRefs || []}\n        autoSelect\n        freeSolo\n        renderInput={params => (\n          <TextField\n            {...params}\n            label={title}\n            margin=\"normal\"\n            helperText={description}\n            variant=\"outlined\"\n            required={required}\n            InputProps={params.InputProps}\n          />\n        )}\n      />\n    </FormControl>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Content,\n  errorApiRef,\n  Header,\n  InfoCard,\n  Lifecycle,\n  Page,\n  useApi,\n  useRouteRef,\n} from '@backstage/core';\nimport { LinearProgress } from '@material-ui/core';\nimport { FormValidation, IChangeEvent } from '@rjsf/core';\nimport parseGitUrl from 'git-url-parse';\nimport React, { useCallback, useState } from 'react';\nimport { generatePath, useNavigate, Navigate } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport { useAsync } from 'react-use';\nimport { scaffolderApiRef } from '../../api';\nimport { rootRouteRef } from '../../routes';\nimport { MultistepJsonForm } from '../MultistepJsonForm';\nimport { RepoUrlPicker, OwnerPicker } from '../fields';\nimport { JsonObject } from '@backstage/config';\n\nconst useTemplateParameterSchema = (templateName: string) => {\n  const scaffolderApi = useApi(scaffolderApiRef);\n  const { value, loading, error } = useAsync(\n    () =>\n      scaffolderApi.getTemplateParameterSchema({\n        name: templateName,\n        kind: 'template',\n        namespace: 'default',\n      }),\n    [scaffolderApi, templateName],\n  );\n  return { schema: value, loading, error };\n};\n\nfunction isObject(obj: unknown): obj is JsonObject {\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj);\n}\n\nexport const createValidator = (rootSchema: JsonObject) => {\n  function validate(\n    schema: JsonObject,\n    formData: JsonObject,\n    errors: FormValidation,\n  ) {\n    const schemaProps = schema.properties;\n    if (!isObject(schemaProps)) {\n      return;\n    }\n\n    for (const [key, propData] of Object.entries(formData)) {\n      const propErrors = errors[key];\n\n      if (isObject(propData)) {\n        const propSchemaProps = schemaProps[key];\n        if (isObject(propSchemaProps)) {\n          validate(\n            propSchemaProps,\n            propData as JsonObject,\n            propErrors as FormValidation,\n          );\n        }\n      } else {\n        const propSchema = schemaProps[key];\n        if (\n          isObject(propSchema) &&\n          propSchema['ui:field'] === 'RepoUrlPicker'\n        ) {\n          try {\n            const { host, searchParams } = new URL(`https://${propData}`);\n            if (\n              !host ||\n              !searchParams.get('owner') ||\n              !searchParams.get('repo')\n            ) {\n              propErrors.addError('Incomplete repository location provided');\n            }\n          } catch {\n            propErrors.addError('Unable to parse the Repository URL');\n          }\n        }\n      }\n    }\n  }\n\n  return (formData: JsonObject, errors: FormValidation) => {\n    validate(rootSchema, formData, errors);\n    return errors;\n  };\n};\n\nconst storePathValidator = (\n  formData: { storePath?: string },\n  errors: FormValidation,\n) => {\n  const { storePath } = formData;\n  if (!storePath) {\n    errors.storePath.addError('Store path is required and not present');\n    return errors;\n  }\n\n  try {\n    const parsedUrl = parseGitUrl(storePath);\n\n    if (!parsedUrl.resource || !parsedUrl.owner || !parsedUrl.name) {\n      if (parsedUrl.resource === 'dev.azure.com') {\n        errors.storePath.addError(\n          \"The store path should be formatted like https://dev.azure.com/{org}/{project}/_git/{repo} for Azure URL's\",\n        );\n      } else {\n        errors.storePath.addError(\n          'The store path should be a complete Git URL to the new repository location. For example: https://github.com/{owner}/{repo}',\n        );\n      }\n    }\n  } catch (ex) {\n    errors.storePath.addError(\n      `Failed validation of the store path with message ${ex.message}`,\n    );\n  }\n\n  return errors;\n};\n\nexport const TemplatePage = () => {\n  const errorApi = useApi(errorApiRef);\n  const scaffolderApi = useApi(scaffolderApiRef);\n  const { templateName } = useParams();\n  const navigate = useNavigate();\n  const rootLink = useRouteRef(rootRouteRef);\n  const { schema, loading, error } = useTemplateParameterSchema(templateName);\n  const [formState, setFormState] = useState({});\n  const handleFormReset = () => setFormState({});\n\n  const handleChange = useCallback(\n    (e: IChangeEvent) => setFormState({ ...formState, ...e.formData }),\n    [setFormState, formState],\n  );\n\n  const handleCreate = async () => {\n    try {\n      const id = await scaffolderApi.scaffold(templateName, formState);\n\n      navigate(generatePath(`${rootLink()}/tasks/:taskId`, { taskId: id }));\n    } catch (e) {\n      errorApi.post(e);\n    }\n  };\n\n  if (error) {\n    errorApi.post(new Error(`Failed to load template, ${error}`));\n    return <Navigate to={rootLink()} />;\n  }\n  if (!loading && !schema) {\n    errorApi.post(new Error('Template was not found.'));\n    return <Navigate to={rootLink()} />;\n  }\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        pageTitleOverride=\"Create a New Component\"\n        title={\n          <>\n            Create a New Component <Lifecycle alpha shorthand />\n          </>\n        }\n        subtitle=\"Create new software components using standard templates\"\n      />\n      <Content>\n        {loading && <LinearProgress data-testid=\"loading-progress\" />}\n        {schema && (\n          <InfoCard\n            title={schema.title}\n            noPadding\n            titleTypographyProps={{ component: 'h2' }}\n          >\n            <MultistepJsonForm\n              formData={formState}\n              fields={{ RepoUrlPicker, OwnerPicker }}\n              onChange={handleChange}\n              onReset={handleFormReset}\n              onFinish={handleCreate}\n              steps={schema.steps.map(step => {\n                // TODO: Can delete this function when the migration from v1 to v2 beta is completed\n                // And just have the default validator for all fields.\n                if ((step.schema as any)?.properties?.storePath) {\n                  return {\n                    ...step,\n                    validate: (a, b) => storePathValidator(a, b),\n                  };\n                }\n\n                return {\n                  ...step,\n                  validate: createValidator(step.schema),\n                };\n              })}\n            />\n          </InfoCard>\n        )}\n      </Content>\n    </Page>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useImmerReducer } from 'use-immer';\nimport { useEffect } from 'react';\nimport { scaffolderApiRef, LogEvent } from '../../api';\nimport { ScaffolderTask, Status, TaskOutput } from '../../types';\nimport { Subscription, useApi } from '@backstage/core';\n\ntype Step = {\n  id: string;\n  status: Status;\n  endedAt?: string;\n  startedAt?: string;\n};\n\nexport type TaskStream = {\n  loading: boolean;\n  error?: Error;\n  stepLogs: { [stepId in string]: string[] };\n  completed: boolean;\n  task?: ScaffolderTask;\n  steps: { [stepId in string]: Step };\n  output?: TaskOutput;\n};\n\ntype ReducerLogEntry = {\n  createdAt: string;\n  body: {\n    stepId?: string;\n    status?: Status;\n    message: string;\n    output?: TaskOutput;\n  };\n};\n\ntype ReducerAction =\n  | { type: 'INIT'; data: ScaffolderTask }\n  | { type: 'LOGS'; data: ReducerLogEntry[] }\n  | { type: 'COMPLETED'; data: ReducerLogEntry }\n  | { type: 'ERROR'; data: Error };\n\nfunction reducer(draft: TaskStream, action: ReducerAction) {\n  switch (action.type) {\n    case 'INIT': {\n      draft.steps = action.data.spec.steps.reduce((current, next) => {\n        current[next.id] = { status: 'open', id: next.id };\n        return current;\n      }, {} as { [stepId in string]: Step });\n      draft.stepLogs = action.data.spec.steps.reduce((current, next) => {\n        current[next.id] = [];\n        return current;\n      }, {} as { [stepId in string]: string[] });\n      draft.loading = false;\n      draft.error = undefined;\n      draft.completed = false;\n      draft.task = action.data;\n      return;\n    }\n\n    case 'LOGS': {\n      const entries = action.data;\n      const logLines = [];\n\n      for (const entry of entries) {\n        const logLine = `${entry.createdAt} ${entry.body.message}`;\n        logLines.push(logLine);\n\n        if (!entry.body.stepId || !draft.steps?.[entry.body.stepId]) {\n          continue;\n        }\n\n        const currentStepLog = draft.stepLogs?.[entry.body.stepId];\n        const currentStep = draft.steps?.[entry.body.stepId];\n\n        if (entry.body.status && entry.body.status !== currentStep.status) {\n          currentStep.status = entry.body.status;\n\n          if (currentStep.status === 'processing') {\n            currentStep.startedAt = entry.createdAt;\n          }\n\n          if (\n            ['cancelled', 'failed', 'completed'].includes(currentStep.status)\n          ) {\n            currentStep.endedAt = entry.createdAt;\n          }\n        }\n\n        currentStepLog?.push(logLine);\n      }\n\n      return;\n    }\n\n    case 'COMPLETED': {\n      draft.completed = true;\n      draft.output = action.data.body.output;\n      return;\n    }\n\n    case 'ERROR': {\n      draft.error = action.data;\n      draft.loading = false;\n      draft.completed = true;\n      return;\n    }\n\n    default:\n      return;\n  }\n}\n\nexport const useTaskEventStream = (taskId: string): TaskStream => {\n  const scaffolderApi = useApi(scaffolderApiRef);\n  const [state, dispatch] = useImmerReducer(reducer, {\n    loading: true,\n    completed: false,\n    stepLogs: {} as { [stepId in string]: string[] },\n    steps: {} as { [stepId in string]: Step },\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    let subscription: Subscription | undefined;\n    let logPusher: NodeJS.Timeout | undefined;\n\n    scaffolderApi.getTask(taskId).then(\n      task => {\n        if (didCancel) {\n          return;\n        }\n        dispatch({ type: 'INIT', data: task });\n\n        // TODO(blam): Use a normal fetch to fetch the current log for the event stream\n        // and use that for an INIT_EVENTs dispatch event, and then\n        // use the last event ID to subscribe using after option to\n        // stream logs. Without this, if you have a lot of logs, it can look like the\n        // task is being rebuilt on load as it progresses through the steps at a slower\n        // rate whilst it builds the status from the event logs\n        const observable = scaffolderApi.streamLogs({ taskId });\n\n        const collectedLogEvents = new Array<LogEvent>();\n\n        function emitLogs() {\n          if (collectedLogEvents.length) {\n            const logs = collectedLogEvents.splice(\n              0,\n              collectedLogEvents.length,\n            );\n            dispatch({ type: 'LOGS', data: logs });\n          }\n        }\n\n        logPusher = setInterval(emitLogs, 500);\n\n        subscription = observable.subscribe({\n          next: event => {\n            switch (event.type) {\n              case 'log':\n                return collectedLogEvents.push(event);\n              case 'completion':\n                emitLogs();\n                dispatch({ type: 'COMPLETED', data: event });\n                return undefined;\n              default:\n                throw new Error(\n                  `Unhandled event type ${event.type} in observer`,\n                );\n            }\n          },\n          error: error => {\n            emitLogs();\n            dispatch({ type: 'ERROR', data: error });\n          },\n        });\n      },\n      error => {\n        if (!didCancel) {\n          dispatch({ type: 'ERROR', data: error });\n        }\n      },\n    );\n\n    return () => {\n      didCancel = true;\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n      if (logPusher) {\n        clearInterval(logPusher);\n      }\n    };\n  }, [scaffolderApi, dispatch, taskId]);\n\n  return state;\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { IconComponent, Link } from '@backstage/core';\nimport { Grid, LinkProps, makeStyles, Typography } from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\n\nconst useStyles = makeStyles({\n  svgIcon: {\n    display: 'inline-block',\n    '& svg': {\n      display: 'inline-block',\n      fontSize: 'inherit',\n      verticalAlign: 'baseline',\n    },\n  },\n});\n\nexport const IconLink = (\n  props: {\n    href: string;\n    text?: string;\n    Icon?: IconComponent;\n  } & LinkProps,\n) => {\n  const { href, text, Icon, ...linkProps } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"row\" spacing={1}>\n      <Grid item>\n        <Typography component=\"div\" className={classes.svgIcon}>\n          {Icon ? <Icon /> : <LanguageIcon />}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Link to={href} {...linkProps}>\n          {text || href}\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { parseEntityName } from '@backstage/catalog-model';\nimport { IconComponent, IconKey, useApp, useRouteRef } from '@backstage/core';\nimport { IconLink } from './IconLink';\nimport { entityRouteRef } from '@backstage/plugin-catalog-react';\nimport { Box } from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { TaskOutput } from '../../types';\n\ntype TaskPageLinksProps = {\n  output: TaskOutput;\n};\n\nexport const TaskPageLinks = ({ output }: TaskPageLinksProps) => {\n  const { entityRef, remoteUrl } = output;\n  let { links = [] } = output;\n  const app = useApp();\n  const entityRoute = useRouteRef(entityRouteRef);\n\n  const iconResolver = (key: IconKey | undefined): IconComponent =>\n    key ? app.getSystemIcon(key) ?? LanguageIcon : LanguageIcon;\n\n  if (remoteUrl) {\n    links = [{ url: remoteUrl, title: 'Repo' }, ...links];\n  }\n\n  if (entityRef) {\n    const entityName = parseEntityName(entityRef);\n    const target = entityRoute(entityName);\n    links = [\n      {\n        url: target,\n        title: 'Open in catalog',\n        icon: 'catalog',\n      },\n      ...links,\n    ];\n  }\n\n  return (\n    <Box px={3} pb={3}>\n      {links.map(({ url, title, icon }, i) => (\n        <IconLink\n          key={`output-link-${i}`}\n          href={url}\n          text={title ?? url}\n          Icon={iconResolver(icon)}\n          target=\"_blank\"\n        />\n      ))}\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Page, Header, Lifecycle, Content, ErrorPage } from '@backstage/core';\nimport React, { useState, useEffect, memo, useMemo } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { useParams } from 'react-router';\nimport { useTaskEventStream } from '../hooks/useEventStream';\nimport LazyLog from 'react-lazylog/build/LazyLog';\nimport {\n  CircularProgress,\n  Paper,\n  StepButton,\n  StepIconProps,\n} from '@material-ui/core';\nimport { Status, TaskOutput } from '../../types';\nimport { DateTime, Interval } from 'luxon';\nimport { useInterval } from 'react-use';\nimport Check from '@material-ui/icons/Check';\nimport Cancel from '@material-ui/icons/Cancel';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport classNames from 'classnames';\nimport { BackstageTheme } from '@backstage/theme';\nimport { TaskPageLinks } from './TaskPageLinks';\n\n// typings are wrong for this library, so fallback to not parsing types.\nconst humanizeDuration = require('humanize-duration');\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n    labelWrapper: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n    stepWrapper: {\n      width: '100%',\n    },\n  }),\n);\n\ntype TaskStep = {\n  id: string;\n  name: string;\n  status: Status;\n  startedAt?: string;\n  endedAt?: string;\n};\n\nconst StepTimeTicker = ({ step }: { step: TaskStep }) => {\n  const [time, setTime] = useState('');\n\n  useInterval(() => {\n    if (!step.startedAt) {\n      setTime('');\n      return;\n    }\n\n    const end = step.endedAt\n      ? DateTime.fromISO(step.endedAt)\n      : DateTime.local();\n\n    const startedAt = DateTime.fromISO(step.startedAt);\n    const formatted = Interval.fromDateTimes(startedAt, end)\n      .toDuration()\n      .valueOf();\n\n    setTime(humanizeDuration(formatted, { round: true }));\n  }, 1000);\n\n  return <Typography variant=\"caption\">{time}</Typography>;\n};\n\nconst useStepIconStyles = makeStyles((theme: BackstageTheme) =>\n  createStyles({\n    root: {\n      color: theme.palette.text.disabled,\n      display: 'flex',\n      height: 22,\n      alignItems: 'center',\n    },\n    completed: {\n      color: theme.palette.status.ok,\n    },\n    error: {\n      color: theme.palette.status.error,\n    },\n  }),\n);\n\nfunction TaskStepIconComponent(props: StepIconProps) {\n  const classes = useStepIconStyles();\n  const { active, completed, error } = props;\n\n  const getMiddle = () => {\n    if (active) {\n      return <CircularProgress size=\"24px\" />;\n    }\n    if (completed) {\n      return <Check />;\n    }\n    if (error) {\n      return <Cancel />;\n    }\n    return <FiberManualRecordIcon />;\n  };\n\n  return (\n    <div\n      className={classNames(classes.root, {\n        [classes.completed]: completed,\n        [classes.error]: error,\n      })}\n    >\n      {getMiddle()}\n    </div>\n  );\n}\n\nexport const TaskStatusStepper = memo(\n  ({\n    steps,\n    currentStepId,\n    onUserStepChange,\n  }: {\n    steps: TaskStep[];\n    currentStepId: string | undefined;\n    onUserStepChange: (id: string) => void;\n  }) => {\n    const classes = useStyles();\n\n    return (\n      <div className={classes.root}>\n        <Stepper\n          activeStep={steps.findIndex(s => s.id === currentStepId)}\n          orientation=\"vertical\"\n          nonLinear\n        >\n          {steps.map((step, index) => {\n            const isCompleted = step.status === 'completed';\n            const isFailed = step.status === 'failed';\n            const isActive = step.status === 'processing';\n            return (\n              <Step key={String(index)} expanded>\n                <StepButton onClick={() => onUserStepChange(step.id)}>\n                  <StepLabel\n                    StepIconProps={{\n                      completed: isCompleted,\n                      error: isFailed,\n                      active: isActive,\n                    }}\n                    StepIconComponent={TaskStepIconComponent}\n                    className={classes.stepWrapper}\n                  >\n                    <div className={classes.labelWrapper}>\n                      <Typography variant=\"subtitle2\">{step.name}</Typography>\n                      <StepTimeTicker step={step} />\n                    </div>\n                  </StepLabel>\n                </StepButton>\n              </Step>\n            );\n          })}\n        </Stepper>\n      </div>\n    );\n  },\n);\n\nconst TaskLogger = memo(({ log }: { log: string }) => {\n  return (\n    <div style={{ height: '80vh' }}>\n      <LazyLog text={log} extraLines={1} follow selectableLines enableSearch />\n    </div>\n  );\n});\n\nconst hasLinks = ({ entityRef, remoteUrl, links = [] }: TaskOutput): boolean =>\n  !!(entityRef || remoteUrl || links.length > 0);\n\nexport const TaskPage = () => {\n  const [userSelectedStepId, setUserSelectedStepId] = useState<\n    string | undefined\n  >(undefined);\n  const [lastActiveStepId, setLastActiveStepId] = useState<string | undefined>(\n    undefined,\n  );\n  const { taskId } = useParams();\n  const taskStream = useTaskEventStream(taskId);\n  const completed = taskStream.completed;\n  const steps = useMemo(\n    () =>\n      taskStream.task?.spec.steps.map(step => ({\n        ...step,\n        ...taskStream?.steps?.[step.id],\n      })) ?? [],\n    [taskStream],\n  );\n\n  useEffect(() => {\n    const mostRecentFailedOrActiveStep = steps.find(step =>\n      ['failed', 'processing'].includes(step.status),\n    );\n    if (completed && !mostRecentFailedOrActiveStep) {\n      setLastActiveStepId(steps[steps.length - 1]?.id);\n      return;\n    }\n\n    setLastActiveStepId(mostRecentFailedOrActiveStep?.id);\n  }, [steps, completed]);\n\n  const currentStepId = userSelectedStepId ?? lastActiveStepId;\n\n  const logAsString = useMemo(() => {\n    if (!currentStepId) {\n      return 'Loading...';\n    }\n    const log = taskStream.stepLogs[currentStepId];\n\n    if (!log?.length) {\n      return 'Waiting for logs...';\n    }\n    return log.join('\\n');\n  }, [taskStream.stepLogs, currentStepId]);\n\n  const taskNotFound =\n    taskStream.completed === true &&\n    taskStream.loading === false &&\n    !taskStream.task;\n\n  const { output } = taskStream;\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        pageTitleOverride={`Task ${taskId}`}\n        title={\n          <>\n            Task Activity <Lifecycle alpha shorthand />\n          </>\n        }\n        subtitle={`Activity for task: ${taskId}`}\n      />\n      <Content>\n        {taskNotFound ? (\n          <ErrorPage\n            status=\"404\"\n            statusMessage=\"Task not found\"\n            additionalInfo=\"No task found with this ID\"\n          />\n        ) : (\n          <div>\n            <Grid container>\n              <Grid item xs={3}>\n                <Paper>\n                  <TaskStatusStepper\n                    steps={steps}\n                    currentStepId={currentStepId}\n                    onUserStepChange={setUserSelectedStepId}\n                  />\n                  {output && hasLinks(output) && (\n                    <TaskPageLinks output={output} />\n                  )}\n                </Paper>\n              </Grid>\n              <Grid item xs={9}>\n                <TaskLogger log={logAsString} />\n              </Grid>\n            </Grid>\n          </div>\n        )}\n      </Content>\n    </Page>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { useAsync } from 'react-use';\nimport {\n  useApi,\n  Progress,\n  Content,\n  Header,\n  Page,\n  ErrorPage,\n} from '@backstage/core';\nimport { scaffolderApiRef } from '../../api';\nimport {\n  Typography,\n  Paper,\n  Table,\n  TableBody,\n  Box,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  makeStyles,\n} from '@material-ui/core';\nimport { JSONSchema } from '@backstage/catalog-model';\nimport { JSONSchema7Definition } from 'json-schema';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n  code: {\n    fontFamily: 'Menlo, monospace',\n    padding: theme.spacing(1),\n    backgroundColor:\n      theme.palette.type === 'dark'\n        ? theme.palette.grey[700]\n        : theme.palette.grey[300],\n    display: 'inline-block',\n    borderRadius: 5,\n    border: `1px solid ${theme.palette.grey[500]}`,\n    position: 'relative',\n  },\n\n  codeRequired: {\n    '&::after': {\n      position: 'absolute',\n      content: '\"*\"',\n      top: 0,\n      right: theme.spacing(0.5),\n      fontWeight: 'bolder',\n      color: theme.palette.error.light,\n    },\n  },\n}));\n\nexport const ActionsPage = () => {\n  const api = useApi(scaffolderApiRef);\n  const classes = useStyles();\n  const { loading, value, error } = useAsync(async () => {\n    return api.listActions();\n  });\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  if (error) {\n    return (\n      <ErrorPage\n        statusMessage=\"Failed to load installed actions\"\n        status=\"500\"\n      />\n    );\n  }\n\n  const formatRows = (input: JSONSchema) => {\n    const properties = input.properties;\n    if (!properties) {\n      return undefined;\n    }\n\n    return Object.entries(properties).map(entry => {\n      const [key] = entry;\n      const props = (entry[1] as unknown) as JSONSchema;\n      const codeClassname = classNames(classes.code, {\n        [classes.codeRequired]: input.required?.includes(key),\n      });\n\n      return (\n        <TableRow key={key}>\n          <TableCell>\n            <div className={codeClassname}>{key}</div>\n          </TableCell>\n          <TableCell>{props.title}</TableCell>\n          <TableCell>{props.description}</TableCell>\n          <TableCell>\n            <span className={classes.code}>{props.type}</span>\n          </TableCell>\n        </TableRow>\n      );\n    });\n  };\n\n  const renderTable = (input: JSONSchema) => {\n    if (!input.properties) {\n      return undefined;\n    }\n    return (\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Title</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Type</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>{formatRows(input)}</TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const renderTables = (name: string, input?: JSONSchema7Definition[]) => {\n    if (!input) {\n      return undefined;\n    }\n\n    return (\n      <>\n        <Typography variant=\"h6\">{name}</Typography>\n        {input.map((i, index) => (\n          <div key={index}>{renderTable((i as unknown) as JSONSchema)}</div>\n        ))}\n      </>\n    );\n  };\n\n  const items = value?.map(action => {\n    if (action.id.startsWith('legacy:')) {\n      return undefined;\n    }\n\n    const oneOf = renderTables('oneOf', action.schema?.input?.oneOf);\n    return (\n      <Box pb={4} key={action.id}>\n        <Typography variant=\"h4\" className={classes.code}>\n          {action.id}\n        </Typography>\n        <Typography>{action.description}</Typography>\n        {action.schema?.input && (\n          <Box pb={2}>\n            <Typography variant=\"h5\">Input</Typography>\n            {renderTable(action.schema.input)}\n            {oneOf}\n          </Box>\n        )}\n        {action.schema?.output && (\n          <Box pb={2}>\n            <Typography variant=\"h5\">Output</Typography>\n            {renderTable(action.schema.output)}\n          </Box>\n        )}\n      </Box>\n    );\n  });\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        pageTitleOverride=\"Create a New Component\"\n        title=\"Installed actions\"\n        subtitle=\"This is the collection of all installed actions\"\n      />\n      <Content>{items}</Content>\n    </Page>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Routes, Route } from 'react-router';\nimport { ScaffolderPage } from './ScaffolderPage';\nimport { TemplatePage } from './TemplatePage';\nimport { TaskPage } from './TaskPage';\nimport { ActionsPage } from './ActionsPage';\n\nexport const Router = () => (\n  <Routes>\n    <Route path=\"/\" element={<ScaffolderPage />} />\n    <Route path=\"/templates/:templateName\" element={<TemplatePage />} />\n    <Route path=\"/tasks/:taskId\" element={<TaskPage />} />\n    <Route path=\"/actions\" element={<ActionsPage />} />\n  </Routes>\n);\n"],"names":["useStyles","Button","StarIcon","RouterLink","MuiTheme","StepUI","FormControl","Input","isObject","Link","makeStyles","Typography","Stepper","Step","StepLabel","useParams","Grid"],"mappings":"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"}