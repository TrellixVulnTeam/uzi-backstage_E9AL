{"version":3,"file":"index.esm.js","sources":["../src/api/GithubActionsApi.ts","../src/api/GithubActionsClient.ts","../src/api/types.ts","../src/routes.ts","../src/plugin.ts","../src/components/useProjectName.ts","../src/components/WorkflowRunStatus/WorkflowRunStatus.tsx","../src/components/WorkflowRunDetails/useWorkflowRunJobs.ts","../src/components/WorkflowRunDetails/useWorkflowRunsDetails.ts","../src/components/WorkflowRunLogs/useDownloadWorkflowRunLogs.ts","../src/components/WorkflowRunLogs/WorkflowRunLogs.tsx","../src/components/WorkflowRunDetails/WorkflowRunDetails.tsx","../src/components/useWorkflowRuns.ts","../src/components/WorkflowRunsTable/WorkflowRunsTable.tsx","../src/components/Router.tsx","../src/components/Cards/Cards.tsx","../src/components/Cards/RecentWorkflowRunsCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createApiRef } from '@backstage/core';\nimport { RestEndpointMethodTypes } from '@octokit/rest';\n\nexport const githubActionsApiRef = createApiRef<GithubActionsApi>({\n  id: 'plugin.githubactions.service',\n  description: 'Used by the GitHub Actions plugin to make requests',\n});\n\nexport type GithubActionsApi = {\n  listWorkflowRuns: ({\n    hostname,\n    owner,\n    repo,\n    pageSize,\n    page,\n    branch,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    pageSize?: number;\n    page?: number;\n    branch?: string;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['listWorkflowRuns']['response']['data']\n  >;\n  getWorkflow: ({\n    hostname,\n    owner,\n    repo,\n    id,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['getWorkflow']['response']['data']\n  >;\n  getWorkflowRun: ({\n    hostname,\n    owner,\n    repo,\n    id,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['getWorkflowRun']['response']['data']\n  >;\n  reRunWorkflow: ({\n    hostname,\n    owner,\n    repo,\n    runId,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }) => Promise<any>;\n  downloadJobLogsForWorkflowRun: ({\n    hostname,\n    owner,\n    repo,\n    runId,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['downloadJobLogsForWorkflowRun']['response']['data']\n  >;\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigApi, OAuthApi } from '@backstage/core';\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\nimport { GithubActionsApi } from './GithubActionsApi';\nimport { Octokit, RestEndpointMethodTypes } from '@octokit/rest';\n\nexport class GithubActionsClient implements GithubActionsApi {\n  private readonly configApi: ConfigApi;\n  private readonly githubAuthApi: OAuthApi;\n\n  constructor(options: { configApi: ConfigApi; githubAuthApi: OAuthApi }) {\n    this.configApi = options.configApi;\n    this.githubAuthApi = options.githubAuthApi;\n  }\n\n  private async getOctokit(hostname?: string): Promise<Octokit> {\n    // TODO: Get access token for the specified hostname\n    const token = await this.githubAuthApi.getAccessToken(['repo']);\n    const configs = readGitHubIntegrationConfigs(\n      this.configApi.getOptionalConfigArray('integrations.github') ?? [],\n    );\n    const githubIntegrationConfig = configs.find(\n      v => v.host === hostname ?? 'github.com',\n    );\n    const baseUrl = githubIntegrationConfig?.apiBaseUrl;\n    return new Octokit({ auth: token, baseUrl });\n  }\n\n  async reRunWorkflow({\n    hostname,\n    owner,\n    repo,\n    runId,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }): Promise<any> {\n    const octokit = await this.getOctokit(hostname);\n    return octokit.actions.reRunWorkflow({\n      owner,\n      repo,\n      run_id: runId,\n    });\n  }\n  async listWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    pageSize = 100,\n    page = 0,\n    branch,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    pageSize?: number;\n    page?: number;\n    branch?: string;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['listWorkflowRuns']['response']['data']\n  > {\n    const octokit = await this.getOctokit(hostname);\n    const workflowRuns = await octokit.actions.listWorkflowRunsForRepo({\n      owner,\n      repo,\n      per_page: pageSize,\n      page,\n      ...(branch ? { branch } : {}),\n    });\n    return workflowRuns.data;\n  }\n  async getWorkflow({\n    hostname,\n    owner,\n    repo,\n    id,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['getWorkflow']['response']['data']\n  > {\n    const octokit = await this.getOctokit(hostname);\n    const workflow = await octokit.actions.getWorkflow({\n      owner,\n      repo,\n      workflow_id: id,\n    });\n    return workflow.data;\n  }\n  async getWorkflowRun({\n    hostname,\n    owner,\n    repo,\n    id,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['getWorkflowRun']['response']['data']\n  > {\n    const octokit = await this.getOctokit(hostname);\n    const run = await octokit.actions.getWorkflowRun({\n      owner,\n      repo,\n      run_id: id,\n    });\n    return run.data;\n  }\n  async downloadJobLogsForWorkflowRun({\n    hostname,\n    owner,\n    repo,\n    runId,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['downloadJobLogsForWorkflowRun']['response']['data']\n  > {\n    const octokit = await this.getOctokit(hostname);\n    const workflow = await octokit.actions.downloadJobLogsForWorkflowRun({\n      owner,\n      repo,\n      job_id: runId,\n    });\n    return workflow.data;\n  }\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type Step = {\n  name: string;\n  status: string;\n  conclusion?: string;\n  number: number; // starts from 1\n  started_at: string;\n  completed_at: string;\n};\n\nexport type Job = {\n  html_url: string;\n  status: string;\n  conclusion: string;\n  started_at: string;\n  completed_at: string;\n  id: string;\n  name: string;\n  steps: Step[];\n};\n\nexport type Jobs = {\n  total_count: number;\n  jobs: Job[];\n};\n\nexport enum BuildStatus {\n  'success',\n  'failure',\n  'pending',\n  'running',\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createRouteRef } from '@backstage/core';\n\n// TODO(freben): This is just a demo route for now\nexport const rootRouteRef = createRouteRef({\n  path: '',\n  title: 'GitHub Actions',\n});\n\nexport const buildRouteRef = createRouteRef({\n  path: ':id',\n  params: ['id'],\n  title: 'GitHub Actions Workflow Run',\n});\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  configApiRef,\n  createPlugin,\n  createApiFactory,\n  githubAuthApiRef,\n  createRoutableExtension,\n  createComponentExtension,\n} from '@backstage/core';\nimport { githubActionsApiRef, GithubActionsClient } from './api';\nimport { rootRouteRef } from './routes';\n\nexport const githubActionsPlugin = createPlugin({\n  id: 'github-actions',\n  apis: [\n    createApiFactory({\n      api: githubActionsApiRef,\n      deps: { configApi: configApiRef, githubAuthApi: githubAuthApiRef },\n      factory: ({ configApi, githubAuthApi }) =>\n        new GithubActionsClient({ configApi, githubAuthApi }),\n    }),\n  ],\n  routes: {\n    entityContent: rootRouteRef,\n  },\n});\n\nexport const EntityGithubActionsContent = githubActionsPlugin.provide(\n  createRoutableExtension({\n    component: () => import('./components/Router').then(m => m.Router),\n    mountPoint: rootRouteRef,\n  }),\n);\n\nexport const EntityLatestGithubActionRunCard = githubActionsPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/Cards').then(m => m.LatestWorkflowRunCard),\n    },\n  }),\n);\n\nexport const EntityLatestGithubActionsForBranchCard = githubActionsPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/Cards').then(m => m.LatestWorkflowsForBranchCard),\n    },\n  }),\n);\n\nexport const EntityRecentGithubActionsRunsCard = githubActionsPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/Cards').then(m => m.RecentWorkflowRunsCard),\n    },\n  }),\n);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useAsync } from 'react-use';\nimport { Entity } from '@backstage/catalog-model';\n\nexport const GITHUB_ACTIONS_ANNOTATION = 'github.com/project-slug';\n\nexport const useProjectName = (entity: Entity) => {\n  const { value, loading, error } = useAsync(async () => {\n    return entity?.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION] ?? '';\n  });\n  return { value, loading, error };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  StatusPending,\n  StatusRunning,\n  StatusOK,\n  StatusWarning,\n  StatusAborted,\n  StatusError,\n} from '@backstage/core';\nimport React from 'react';\n\nexport const WorkflowRunStatus = ({\n  status,\n  conclusion,\n}: {\n  status: string | undefined;\n  conclusion: string | undefined;\n}) => {\n  if (status === undefined) return null;\n  switch (status.toLocaleLowerCase('en-US')) {\n    case 'queued':\n      return (\n        <>\n          <StatusPending /> Queued\n        </>\n      );\n    case 'in_progress':\n      return (\n        <>\n          <StatusRunning /> In progress\n        </>\n      );\n    case 'completed':\n      switch (conclusion?.toLocaleLowerCase('en-US')) {\n        case 'skipped' || 'canceled':\n          return (\n            <>\n              <StatusAborted /> Aborted\n            </>\n          );\n        case 'timed_out':\n          return (\n            <>\n              <StatusWarning /> Timed out\n            </>\n          );\n        case 'failure':\n          return (\n            <>\n              <StatusError /> Error\n            </>\n          );\n        default:\n          return (\n            <>\n              <StatusOK /> Completed\n            </>\n          );\n      }\n    default:\n      return (\n        <>\n          <StatusPending /> Pending\n        </>\n      );\n  }\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useAsync } from 'react-use';\nimport { Jobs } from '../../api/types';\n\nexport const useWorkflowRunJobs = (jobsUrl?: string) => {\n  const jobs = useAsync(async (): Promise<Jobs> => {\n    if (jobsUrl === undefined) {\n      return {\n        total_count: 0,\n        jobs: [],\n      };\n    }\n\n    const data = await fetch(jobsUrl).then(d => d.json());\n    return data;\n  }, [jobsUrl]);\n  return jobs;\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useApi, useRouteRefParams } from '@backstage/core';\nimport { useAsync } from 'react-use';\nimport { githubActionsApiRef } from '../../api';\nimport { buildRouteRef } from '../../routes';\n\nexport const useWorkflowRunsDetails = ({\n  hostname,\n  owner,\n  repo,\n}: {\n  hostname?: string;\n  owner: string;\n  repo: string;\n}) => {\n  const api = useApi(githubActionsApiRef);\n  const { id } = useRouteRefParams(buildRouteRef);\n  const details = useAsync(async () => {\n    return repo && owner\n      ? api.getWorkflowRun({\n          hostname,\n          owner,\n          repo,\n          id: parseInt(id, 10),\n        })\n      : Promise.reject('No repo/owner provided');\n  }, [repo, owner, id]);\n  return details;\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useApi } from '@backstage/core';\nimport { useAsync } from 'react-use';\nimport { githubActionsApiRef } from '../../api';\n\nexport const useDownloadWorkflowRunLogs = ({\n  hostname,\n  owner,\n  repo,\n  id,\n}: {\n  hostname?: string;\n  owner: string;\n  repo: string;\n  id: string;\n}) => {\n  const api = useApi(githubActionsApiRef);\n  const details = useAsync(async () => {\n    return repo && owner\n      ? api.downloadJobLogsForWorkflowRun({\n          hostname,\n          owner,\n          repo,\n          runId: parseInt(id, 10),\n        })\n      : Promise.reject('No repo/owner provided');\n  }, [repo, owner, id]);\n  return details;\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Accordion,\n  AccordionSummary,\n  CircularProgress,\n  Fade,\n  LinearProgress,\n  makeStyles,\n  Modal,\n  Theme,\n  Tooltip,\n  Typography,\n  Zoom,\n} from '@material-ui/core';\n\nimport React, { Suspense } from 'react';\nimport { useDownloadWorkflowRunLogs } from './useDownloadWorkflowRunLogs';\nimport { useProjectName } from '../useProjectName';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { Entity } from '@backstage/catalog-model';\nimport { configApiRef, useApi } from '@backstage/core';\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\n\nconst LazyLog = React.lazy(() => import('react-lazylog/build/LazyLog'));\nconst LinePart = React.lazy(() => import('react-lazylog/build/LinePart'));\n\nconst useStyles = makeStyles<Theme>(() => ({\n  button: {\n    order: -1,\n    marginRight: 0,\n    marginLeft: '-20px',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '85%',\n    height: '85%',\n    justifyContent: 'center',\n    margin: 'auto',\n  },\n  normalLog: {\n    height: '75vh',\n    width: '100%',\n  },\n  modalLog: {\n    height: '100%',\n    width: '100%',\n  },\n}));\n\nconst DisplayLog = ({\n  jobLogs,\n  className,\n}: {\n  jobLogs: any;\n  className: string;\n}) => {\n  return (\n    <Suspense fallback={<LinearProgress />}>\n      <div className={className}>\n        <LazyLog\n          text={jobLogs ?? 'No Values Found'}\n          extraLines={1}\n          caseInsensitive\n          enableSearch\n          formatPart={line => {\n            if (\n              line.toLocaleLowerCase().includes('error') ||\n              line.toLocaleLowerCase().includes('failed') ||\n              line.toLocaleLowerCase().includes('failure')\n            ) {\n              return (\n                <LinePart style={{ color: 'red' }} part={{ text: line }} />\n              );\n            }\n            return line;\n          }}\n        />\n      </div>\n    </Suspense>\n  );\n};\n\n/**\n * A component for Run Logs visualization.\n */\nexport const WorkflowRunLogs = ({\n  entity,\n  runId,\n  inProgress,\n}: {\n  entity: Entity;\n  runId: string;\n  inProgress: boolean;\n}) => {\n  const config = useApi(configApiRef);\n  const classes = useStyles();\n  const projectName = useProjectName(entity);\n\n  // TODO: Get github hostname from metadata annotation\n  const hostname = readGitHubIntegrationConfigs(\n    config.getOptionalConfigArray('integrations.github') ?? [],\n  )[0].host;\n  const [owner, repo] = projectName.value ? projectName.value.split('/') : [];\n  const jobLogs = useDownloadWorkflowRunLogs({\n    hostname,\n    owner,\n    repo,\n    id: runId,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} disabled={inProgress}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls={`panel-${name}-content`}\n        id={`panel-${name}-header`}\n        IconButtonProps={{\n          className: classes.button,\n        }}\n      >\n        <Typography variant=\"button\">\n          {jobLogs.loading ? <CircularProgress /> : 'Job Log'}\n        </Typography>\n        <Tooltip title=\"Open Log\" TransitionComponent={Zoom} arrow>\n          <DescriptionIcon\n            onClick={event => {\n              event.stopPropagation();\n              handleOpen();\n            }}\n            style={{ marginLeft: 'auto' }}\n          />\n        </Tooltip>\n        <Modal\n          className={classes.modal}\n          onClick={event => event.stopPropagation()}\n          open={open}\n          onClose={handleClose}\n        >\n          <Fade in={open}>\n            <DisplayLog\n              jobLogs={jobLogs.value || undefined}\n              className={classes.modalLog}\n            />\n          </Fade>\n        </Modal>\n      </AccordionSummary>\n      {jobLogs.value && (\n        <DisplayLog\n          jobLogs={jobLogs.value || undefined}\n          className={classes.normalLog}\n        />\n      )}\n    </Accordion>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport { configApiRef, Breadcrumbs, Link, useApi } from '@backstage/core';\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  CircularProgress,\n  LinearProgress,\n  Link as MaterialLink,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExternalLinkIcon from '@material-ui/icons/Launch';\nimport moment from 'moment';\nimport React from 'react';\nimport { Job, Jobs, Step } from '../../api';\nimport { useProjectName } from '../useProjectName';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\nimport { useWorkflowRunJobs } from './useWorkflowRunJobs';\nimport { useWorkflowRunsDetails } from './useWorkflowRunsDetails';\nimport { WorkflowRunLogs } from '../WorkflowRunLogs';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  root: {\n    maxWidth: 720,\n    margin: theme.spacing(2),\n  },\n  title: {\n    padding: theme.spacing(1, 0, 2, 0),\n  },\n  table: {\n    padding: theme.spacing(1),\n  },\n  accordionDetails: {\n    padding: 0,\n  },\n  button: {\n    order: -1,\n    marginRight: 0,\n    marginLeft: '-20px',\n  },\n  externalLinkIcon: {\n    fontSize: 'inherit',\n    verticalAlign: 'bottom',\n  },\n}));\n\nconst getElapsedTime = (start: string, end: string) => {\n  const diff = moment(moment(end || moment()).diff(moment(start)));\n  const timeElapsed = diff.format('m [minutes] s [seconds]');\n  return timeElapsed;\n};\n\nconst StepView = ({ step }: { step: Step }) => {\n  return (\n    <TableRow>\n      <TableCell>\n        <ListItemText\n          primary={step.name}\n          secondary={getElapsedTime(step.started_at, step.completed_at)}\n        />\n      </TableCell>\n      <TableCell>\n        <WorkflowRunStatus\n          status={step.status.toLocaleUpperCase('en-US')}\n          conclusion={step.conclusion?.toLocaleUpperCase('en-US')}\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst JobListItem = ({\n  job,\n  className,\n  entity,\n}: {\n  job: Job;\n  className: string;\n  entity: Entity;\n}) => {\n  const classes = useStyles();\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} className={className}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls={`panel-${name}-content`}\n        id={`panel-${name}-header`}\n        IconButtonProps={{\n          className: classes.button,\n        }}\n      >\n        <Typography variant=\"button\">\n          {job.name} ({getElapsedTime(job.started_at, job.completed_at)})\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.accordionDetails}>\n        <TableContainer>\n          <Table>\n            {job.steps.map(step => (\n              <StepView key={step.number} step={step} />\n            ))}\n          </Table>\n        </TableContainer>\n      </AccordionDetails>\n      {job.status === 'queued' || job.status === 'in_progress' ? (\n        <WorkflowRunLogs runId={job.id} inProgress entity={entity} />\n      ) : (\n        <WorkflowRunLogs runId={job.id} inProgress={false} entity={entity} />\n      )}\n    </Accordion>\n  );\n};\n\nconst JobsList = ({ jobs, entity }: { jobs?: Jobs; entity: Entity }) => {\n  const classes = useStyles();\n  return (\n    <Box>\n      {jobs &&\n        jobs.total_count > 0 &&\n        jobs.jobs.map(job => (\n          <JobListItem\n            key={job.id}\n            job={job}\n            className={\n              job.status !== 'success' ? classes.failed : classes.success\n            }\n            entity={entity}\n          />\n        ))}\n    </Box>\n  );\n};\n\nexport const WorkflowRunDetails = ({ entity }: { entity: Entity }) => {\n  const config = useApi(configApiRef);\n  const projectName = useProjectName(entity);\n\n  // TODO: Get github hostname from metadata annotation\n  const hostname = readGitHubIntegrationConfigs(\n    config.getOptionalConfigArray('integrations.github') ?? [],\n  )[0].host;\n  const [owner, repo] = projectName.value ? projectName.value.split('/') : [];\n  const details = useWorkflowRunsDetails({ hostname, owner, repo });\n  const jobs = useWorkflowRunJobs(details.value?.jobs_url);\n\n  const error = projectName.error || (projectName.value && details.error);\n  const classes = useStyles();\n  if (error) {\n    return (\n      <Typography variant=\"h6\" color=\"error\">\n        Failed to load build, {error.message}\n      </Typography>\n    );\n  } else if (projectName.loading || details.loading) {\n    return <LinearProgress />;\n  }\n  return (\n    <div className={classes.root}>\n      <Box mb={3}>\n        <Breadcrumbs aria-label=\"breadcrumb\">\n          <Link to=\"..\">Workflow runs</Link>\n          <Typography>Workflow run details</Typography>\n        </Breadcrumbs>\n      </Box>\n      <TableContainer component={Paper} className={classes.table}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Branch</Typography>\n              </TableCell>\n              <TableCell>{details.value?.head_branch}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Message</Typography>\n              </TableCell>\n              <TableCell>{details.value?.head_commit?.message}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Commit ID</Typography>\n              </TableCell>\n              <TableCell>{details.value?.head_commit?.id}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Workflow</Typography>\n              </TableCell>\n              <TableCell>{details.value?.name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Status</Typography>\n              </TableCell>\n              <TableCell>\n                <WorkflowRunStatus\n                  status={details.value?.status || undefined}\n                  conclusion={details.value?.conclusion || undefined}\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Author</Typography>\n              </TableCell>\n              <TableCell>{`${details.value?.head_commit?.author?.name} (${details.value?.head_commit?.author?.email})`}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Links</Typography>\n              </TableCell>\n              <TableCell>\n                {details.value?.html_url && (\n                  <MaterialLink target=\"_blank\" href={details.value.html_url}>\n                    Workflow runs on GitHub{' '}\n                    <ExternalLinkIcon className={classes.externalLinkIcon} />\n                  </MaterialLink>\n                )}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell colSpan={2}>\n                <Typography noWrap>Jobs</Typography>\n                {jobs.loading ? (\n                  <CircularProgress />\n                ) : (\n                  <JobsList jobs={jobs.value} entity={entity} />\n                )}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useState } from 'react';\nimport { useAsyncRetry } from 'react-use';\nimport { githubActionsApiRef } from '../api/GithubActionsApi';\nimport { useApi, errorApiRef } from '@backstage/core';\n\nexport type WorkflowRun = {\n  workflowName: string;\n  id: string;\n  message: string;\n  url?: string;\n  githubUrl?: string;\n  source: {\n    branchName: string;\n    commit: {\n      hash: string;\n      url?: string;\n    };\n  };\n  status: string;\n  conclusion: string;\n  onReRunClick: () => void;\n};\n\nexport function useWorkflowRuns({\n  hostname,\n  owner,\n  repo,\n  branch,\n  initialPageSize = 5,\n}: {\n  hostname?: string;\n  owner: string;\n  repo: string;\n  branch?: string;\n  initialPageSize?: number;\n}) {\n  const api = useApi(githubActionsApiRef);\n\n  const errorApi = useApi(errorApiRef);\n\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(initialPageSize);\n\n  const { loading, value: runs, retry, error } = useAsyncRetry<\n    WorkflowRun[]\n  >(async () => {\n    // GitHub API pagination count starts from 1\n    const workflowRunsData = await api.listWorkflowRuns({\n      hostname,\n      owner,\n      repo,\n      pageSize,\n      page: page + 1,\n      branch,\n    });\n    setTotal(workflowRunsData.total_count);\n    // Transformation here\n    return workflowRunsData.workflow_runs.map(run => ({\n      workflowName: run.name,\n      message: run.head_commit.message,\n      id: `${run.id}`,\n      onReRunClick: async () => {\n        try {\n          await api.reRunWorkflow({\n            hostname,\n            owner,\n            repo,\n            runId: run.id,\n          });\n        } catch (e) {\n          errorApi.post(e);\n        }\n      },\n      source: {\n        branchName: run.head_branch,\n        commit: {\n          hash: run.head_commit.id,\n          url: run.head_repository?.branches_url?.replace(\n            '{/branch}',\n            run.head_branch,\n          ),\n        },\n      },\n      status: run.status,\n      conclusion: run.conclusion,\n      url: run.url,\n      githubUrl: run.html_url,\n    }));\n  }, [page, pageSize, repo, owner]);\n\n  return [\n    {\n      page,\n      pageSize,\n      loading,\n      runs,\n      projectName: `${owner}/${repo}`,\n      total,\n      error,\n    },\n    {\n      runs,\n      setPage,\n      setPageSize,\n      retry,\n    },\n  ] as const;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport {\n  Link,\n  Typography,\n  Box,\n  IconButton,\n  Tooltip,\n  Button,\n} from '@material-ui/core';\nimport RetryIcon from '@material-ui/icons/Replay';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link as RouterLink, generatePath } from 'react-router-dom';\nimport {\n  EmptyState,\n  Table,\n  TableColumn,\n  configApiRef,\n  useApi,\n} from '@backstage/core';\nimport { useWorkflowRuns, WorkflowRun } from '../useWorkflowRuns';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport { buildRouteRef } from '../../routes';\nimport { useProjectName } from '../useProjectName';\nimport { Entity } from '@backstage/catalog-model';\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\n\nconst generatedColumns: TableColumn[] = [\n  {\n    title: 'ID',\n    field: 'id',\n    type: 'numeric',\n    width: '150px',\n  },\n  {\n    title: 'Message',\n    field: 'message',\n    highlight: true,\n    render: (row: Partial<WorkflowRun>) => (\n      <Link\n        component={RouterLink}\n        to={generatePath(buildRouteRef.path, { id: row.id! })}\n      >\n        {row.message}\n      </Link>\n    ),\n  },\n  {\n    title: 'Source',\n    render: (row: Partial<WorkflowRun>) => (\n      <Typography variant=\"body2\" noWrap>\n        <p>{row.source?.branchName}</p>\n        <p>{row.source?.commit.hash}</p>\n      </Typography>\n    ),\n  },\n  {\n    title: 'Workflow',\n    field: 'workflowName',\n  },\n  {\n    title: 'Status',\n    width: '150px',\n\n    render: (row: Partial<WorkflowRun>) => (\n      <Box display=\"flex\" alignItems=\"center\">\n        <WorkflowRunStatus status={row.status} conclusion={row.conclusion} />\n      </Box>\n    ),\n  },\n  {\n    title: 'Actions',\n    render: (row: Partial<WorkflowRun>) => (\n      <Tooltip title=\"Rerun workflow\">\n        <IconButton onClick={row.onReRunClick}>\n          <RetryIcon />\n        </IconButton>\n      </Tooltip>\n    ),\n    width: '10%',\n  },\n];\n\ntype Props = {\n  loading: boolean;\n  retry: () => void;\n  runs?: WorkflowRun[];\n  projectName: string;\n  page: number;\n  onChangePage: (page: number) => void;\n  total: number;\n  pageSize: number;\n  onChangePageSize: (pageSize: number) => void;\n};\n\nexport const WorkflowRunsTableView = ({\n  projectName,\n  loading,\n  pageSize,\n  page,\n  retry,\n  runs,\n  onChangePage,\n  onChangePageSize,\n  total,\n}: Props) => {\n  return (\n    <Table\n      isLoading={loading}\n      options={{ paging: true, pageSize, padding: 'dense' }}\n      totalCount={total}\n      page={page}\n      actions={[\n        {\n          icon: () => <SyncIcon />,\n          tooltip: 'Reload workflow runs',\n          isFreeAction: true,\n          onClick: () => retry(),\n        },\n      ]}\n      data={runs ?? []}\n      onChangePage={onChangePage}\n      onChangeRowsPerPage={onChangePageSize}\n      style={{ width: '100%' }}\n      title={\n        <Box display=\"flex\" alignItems=\"center\">\n          <GitHubIcon />\n          <Box mr={1} />\n          <Typography variant=\"h6\">{projectName}</Typography>\n        </Box>\n      }\n      columns={generatedColumns}\n    />\n  );\n};\n\nexport const WorkflowRunsTable = ({\n  entity,\n  branch,\n}: {\n  entity: Entity;\n  branch?: string;\n}) => {\n  const config = useApi(configApiRef);\n  const { value: projectName, loading } = useProjectName(entity);\n  // TODO: Get github hostname from metadata annotation\n  const hostname = readGitHubIntegrationConfigs(\n    config.getOptionalConfigArray('integrations.github') ?? [],\n  )[0].host;\n  const [owner, repo] = (projectName ?? '/').split('/');\n  const [\n    { runs, ...tableProps },\n    { retry, setPage, setPageSize },\n  ] = useWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    branch,\n  });\n\n  const githubHost = hostname || 'github.com';\n\n  return !runs ? (\n    <EmptyState\n      missing=\"data\"\n      title=\"No Workflow Data\"\n      description=\"This component has GitHub Actions enabled, but no data was found. Have you created any Workflows? Click the button below to create a new Workflow.\"\n      action={\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          href={`https://${githubHost}/${projectName}/actions/new`}\n        >\n          Create new Workflow\n        </Button>\n      }\n    />\n  ) : (\n    <WorkflowRunsTableView\n      {...tableProps}\n      runs={runs}\n      loading={loading || tableProps.loading}\n      retry={retry}\n      onChangePageSize={setPageSize}\n      onChangePage={setPage}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { Entity } from '@backstage/catalog-model';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { Routes, Route } from 'react-router';\nimport { rootRouteRef, buildRouteRef } from '../routes';\nimport { WorkflowRunDetails } from './WorkflowRunDetails';\nimport { WorkflowRunsTable } from './WorkflowRunsTable';\nimport { GITHUB_ACTIONS_ANNOTATION } from './useProjectName';\nimport { MissingAnnotationEmptyState } from '@backstage/core';\n\nexport const isGithubActionsAvailable = (entity: Entity) =>\n  Boolean(entity.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION]);\n\ntype Props = {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n};\n\nexport const Router = (_props: Props) => {\n  const { entity } = useEntity();\n\n  if (!isGithubActionsAvailable(entity)) {\n    return (\n      <MissingAnnotationEmptyState annotation={GITHUB_ACTIONS_ANNOTATION} />\n    );\n  }\n  return (\n    <Routes>\n      <Route\n        path={`/${rootRouteRef.path}`}\n        element={<WorkflowRunsTable entity={entity} />}\n      />\n      <Route\n        path={`/${buildRouteRef.path}`}\n        element={<WorkflowRunDetails entity={entity} />}\n      />\n      )\n    </Routes>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  configApiRef,\n  errorApiRef,\n  InfoCard,\n  InfoCardVariants,\n  StructuredMetadataTable,\n  useApi,\n} from '@backstage/core';\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  LinearProgress,\n  Link,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport ExternalLinkIcon from '@material-ui/icons/Launch';\nimport React, { useEffect } from 'react';\nimport { GITHUB_ACTIONS_ANNOTATION } from '../useProjectName';\nimport { useWorkflowRuns, WorkflowRun } from '../useWorkflowRuns';\nimport { WorkflowRunsTable } from '../WorkflowRunsTable';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\n\nconst useStyles = makeStyles<Theme>({\n  externalLinkIcon: {\n    fontSize: 'inherit',\n    verticalAlign: 'bottom',\n  },\n});\n\nconst WidgetContent = ({\n  error,\n  loading,\n  lastRun,\n  branch,\n}: {\n  error?: Error;\n  loading?: boolean;\n  lastRun: WorkflowRun;\n  branch: string;\n}) => {\n  const classes = useStyles();\n  if (error) return <Typography>Couldn't fetch latest {branch} run</Typography>;\n  if (loading) return <LinearProgress />;\n  return (\n    <StructuredMetadataTable\n      metadata={{\n        status: (\n          <>\n            <WorkflowRunStatus\n              status={lastRun.status}\n              conclusion={lastRun.conclusion}\n            />\n          </>\n        ),\n        message: lastRun.message,\n        url: (\n          <Link href={lastRun.githubUrl} target=\"_blank\">\n            See more on GitHub{' '}\n            <ExternalLinkIcon className={classes.externalLinkIcon} />\n          </Link>\n        ),\n      }}\n    />\n  );\n};\n\nexport const LatestWorkflowRunCard = ({\n  branch = 'master',\n  // Display the card full height suitable for\n  variant,\n}: Props) => {\n  const { entity } = useEntity();\n  const config = useApi(configApiRef);\n  const errorApi = useApi(errorApiRef);\n  // TODO: Get github hostname from metadata annotation\n  const hostname = readGitHubIntegrationConfigs(\n    config.getOptionalConfigArray('integrations.github') ?? [],\n  )[0].host;\n  const [owner, repo] = (\n    entity?.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION] ?? '/'\n  ).split('/');\n  const [{ runs, loading, error }] = useWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    branch,\n  });\n  const lastRun = runs?.[0] ?? ({} as WorkflowRun);\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n\n  return (\n    <InfoCard title={`Last ${branch} build`} variant={variant}>\n      <WidgetContent\n        error={error}\n        loading={loading}\n        branch={branch}\n        lastRun={lastRun}\n      />\n    </InfoCard>\n  );\n};\n\ntype Props = {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n  branch: string;\n  variant?: InfoCardVariants;\n};\n\nexport const LatestWorkflowsForBranchCard = ({\n  branch = 'master',\n  variant,\n}: Props) => {\n  const { entity } = useEntity();\n\n  return (\n    <InfoCard title={`Last ${branch} build`} variant={variant}>\n      <WorkflowRunsTable branch={branch} entity={entity} />\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  configApiRef,\n  errorApiRef,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  Table,\n  useApi,\n} from '@backstage/core';\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport React, { useEffect } from 'react';\nimport { generatePath, Link as RouterLink } from 'react-router-dom';\nimport { GITHUB_ACTIONS_ANNOTATION } from '../useProjectName';\nimport { useWorkflowRuns } from '../useWorkflowRuns';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\nimport { Typography } from '@material-ui/core';\n\nconst firstLine = (message: string): string => message.split('\\n')[0];\n\nexport type Props = {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n  branch?: string;\n  dense?: boolean;\n  limit?: number;\n  variant?: InfoCardVariants;\n};\n\nexport const RecentWorkflowRunsCard = ({\n  branch,\n  dense = false,\n  limit = 5,\n  variant,\n}: Props) => {\n  const { entity } = useEntity();\n  const config = useApi(configApiRef);\n  const errorApi = useApi(errorApiRef);\n  // TODO: Get github hostname from metadata annotation\n  const hostname = readGitHubIntegrationConfigs(\n    config.getOptionalConfigArray('integrations.github') ?? [],\n  )[0].host;\n  const [owner, repo] = (\n    entity?.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION] ?? '/'\n  ).split('/');\n  const [{ runs = [], loading, error }] = useWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    branch,\n    initialPageSize: limit,\n  });\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n\n  const githubHost = hostname || 'github.com';\n\n  return (\n    <InfoCard\n      title=\"Recent Workflow Runs\"\n      subheader={branch ? `Branch: ${branch}` : 'All Branches'}\n      noPadding\n      variant={variant}\n    >\n      {!runs.length ? (\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            This component has GitHub Actions enabled, but no workflows were\n            found.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to={`https://${githubHost}/${owner}/${repo}/actions/new`}>\n              Create a new workflow\n            </Link>\n          </Typography>\n        </div>\n      ) : (\n        <Table\n          isLoading={loading}\n          options={{\n            search: false,\n            paging: false,\n            padding: dense ? 'dense' : 'default',\n            toolbar: false,\n          }}\n          columns={[\n            {\n              title: 'Commit Message',\n              field: 'message',\n              render: data => (\n                <Link\n                  component={RouterLink}\n                  to={generatePath('./ci-cd/:id', { id: data.id! })}\n                >\n                  {firstLine(data.message)}\n                </Link>\n              ),\n            },\n            { title: 'Branch', field: 'source.branchName' },\n            { title: 'Status', field: 'status', render: WorkflowRunStatus },\n          ]}\n          data={runs}\n        />\n      )}\n    </InfoCard>\n  );\n};\n"],"names":["useStyles","MaterialLink","Link","RouterLink","Table"],"mappings":"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"}