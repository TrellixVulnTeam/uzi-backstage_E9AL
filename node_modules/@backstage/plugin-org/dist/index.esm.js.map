{"version":3,"file":"index.esm.js","sources":["../src/plugin.ts","../src/components/Cards/Group/MembersList/MembersListCard.tsx","../src/components/Cards/Group/GroupProfile/GroupProfileCard.tsx","../src/components/Cards/User/UserProfileCard/UserProfileCard.tsx","../src/components/Cards/OwnershipCard/OwnershipCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createComponentExtension, createPlugin } from '@backstage/core';\n\nexport const orgPlugin = createPlugin({\n  id: 'org',\n});\n\nexport const EntityGroupProfileCard = orgPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () => import('./components').then(m => m.GroupProfileCard),\n    },\n  }),\n);\nexport const EntityMembersListCard = orgPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () => import('./components').then(m => m.MembersListCard),\n    },\n  }),\n);\nexport const EntityOwnershipCard = orgPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () => import('./components').then(m => m.OwnershipCard),\n    },\n  }),\n);\nexport const EntityUserProfileCard = orgPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () => import('./components').then(m => m.UserProfileCard),\n    },\n  }),\n);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  ENTITY_DEFAULT_NAMESPACE,\n  GroupEntity,\n  RELATION_MEMBER_OF,\n  UserEntity,\n} from '@backstage/catalog-model';\nimport {\n  Avatar,\n  InfoCard,\n  Progress,\n  ResponseErrorPanel,\n  useApi,\n} from '@backstage/core';\nimport {\n  catalogApiRef,\n  entityRouteParams,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  createStyles,\n  Grid,\n  Link,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport React from 'react';\nimport { generatePath, Link as RouterLink } from 'react-router-dom';\nimport { useAsync } from 'react-use';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      border: `1px solid ${theme.palette.divider}`,\n      boxShadow: theme.shadows[2],\n      borderRadius: '4px',\n      overflow: 'visible',\n      position: 'relative',\n      margin: theme.spacing(4, 1, 1),\n      flex: '1',\n      minWidth: '0px',\n    },\n  }),\n);\n\nconst MemberComponent = ({ member }: { member: UserEntity }) => {\n  const classes = useStyles();\n  const {\n    metadata: { name: metaName },\n    spec: { profile },\n  } = member;\n  const displayName = profile?.displayName ?? metaName;\n\n  return (\n    <Grid item container xs={12} sm={6} md={4} xl={2}>\n      <Box className={classes.card}>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          m={3}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Avatar\n            displayName={displayName}\n            picture={profile?.picture}\n            customStyles={{\n              position: 'absolute',\n              top: '-2rem',\n            }}\n          />\n          <Box pt={2} textAlign=\"center\">\n            <Typography variant=\"h5\">\n              <Link\n                component={RouterLink}\n                to={generatePath(\n                  `/catalog/:namespace/user/${metaName}`,\n                  entityRouteParams(member),\n                )}\n              >\n                {displayName}\n              </Link>\n            </Typography>\n            <Typography variant=\"caption\">{profile?.email}</Typography>\n          </Box>\n        </Box>\n      </Box>\n    </Grid>\n  );\n};\n\nexport const MembersListCard = (_props: {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: GroupEntity;\n}) => {\n  const { entity: groupEntity } = useEntity<GroupEntity>();\n  const {\n    metadata: { name: groupName, namespace: grpNamespace },\n    spec: { profile },\n  } = groupEntity;\n  const catalogApi = useApi(catalogApiRef);\n\n  const displayName = profile?.displayName ?? groupName;\n\n  const groupNamespace = grpNamespace || ENTITY_DEFAULT_NAMESPACE;\n\n  const [page, setPage] = React.useState(1);\n  const pageChange = (_: React.ChangeEvent<unknown>, pageIndex: number) => {\n    setPage(pageIndex);\n  };\n  const pageSize = 50;\n\n  const { loading, error, value: members } = useAsync(async () => {\n    const membersList = await catalogApi.getEntities({\n      filter: { kind: 'User' },\n    });\n    const groupMembersList = (membersList.items as UserEntity[]).filter(\n      member =>\n        member?.relations?.some(\n          r =>\n            r.type === RELATION_MEMBER_OF &&\n            r.target.name.toLocaleLowerCase('en-US') ===\n              groupName.toLocaleLowerCase('en-US') &&\n            r.target.namespace.toLocaleLowerCase('en-US') ===\n              groupNamespace.toLocaleLowerCase('en-US'),\n        ),\n    );\n    return groupMembersList;\n  }, [catalogApi, groupEntity]);\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  const nbPages = Math.ceil((members?.length || 0) / pageSize);\n  const paginationLabel = nbPages < 2 ? '' : `, page ${page} of ${nbPages}`;\n\n  const pagination = (\n    <Pagination\n      count={nbPages}\n      page={page}\n      onChange={pageChange}\n      showFirstButton\n      showLastButton\n    />\n  );\n\n  return (\n    <Grid item>\n      <InfoCard\n        title={`Members (${members?.length || 0}${paginationLabel})`}\n        subheader={`of ${displayName}`}\n        actions={pagination}\n      >\n        <Grid container spacing={3}>\n          {members && members.length > 0 ? (\n            members\n              .slice(pageSize * (page - 1), pageSize * page)\n              .map(member => (\n                <MemberComponent member={member} key={member.metadata.uid} />\n              ))\n          ) : (\n            <Box p={2}>\n              <Typography>This group has no members.</Typography>\n            </Box>\n          )}\n        </Grid>\n      </InfoCard>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  GroupEntity,\n  RELATION_CHILD_OF,\n  RELATION_PARENT_OF,\n} from '@backstage/catalog-model';\nimport { Avatar, InfoCard, InfoCardVariants } from '@backstage/core';\nimport {\n  EntityRefLinks,\n  getEntityRelations,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  Grid,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n} from '@material-ui/core';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Alert from '@material-ui/lab/Alert';\nimport React from 'react';\n\nconst CardTitle = ({ title }: { title: string }) => (\n  <Box display=\"flex\" alignItems=\"center\">\n    <GroupIcon fontSize=\"inherit\" />\n    <Box ml={1}>{title}</Box>\n  </Box>\n);\n\nexport const GroupProfileCard = ({\n  variant,\n}: {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: GroupEntity;\n  variant?: InfoCardVariants;\n}) => {\n  const { entity: group } = useEntity<GroupEntity>();\n  if (!group) {\n    return <Alert severity=\"error\">Group not found</Alert>;\n  }\n\n  const {\n    metadata: { name, description },\n    spec: { profile },\n  } = group;\n\n  const childRelations = getEntityRelations(group, RELATION_PARENT_OF, {\n    kind: 'Group',\n  });\n  const parentRelations = getEntityRelations(group, RELATION_CHILD_OF, {\n    kind: 'group',\n  });\n\n  const displayName = profile?.displayName ?? name;\n  const emailHref = profile?.email ? `mailto:${profile.email}` : undefined;\n\n  return (\n    <InfoCard\n      title={<CardTitle title={displayName} />}\n      subheader={description}\n      variant={variant}\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={2} xl={1}>\n          <Avatar displayName={displayName} picture={profile?.picture} />\n        </Grid>\n        <Grid item md={10} xl={11}>\n          <List>\n            {profile?.email && (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Email\">\n                    <EmailIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText>\n                  <Link href={emailHref}>{profile.email}</Link>\n                </ListItemText>\n              </ListItem>\n            )}\n\n            {parentRelations.length ? (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Parent Group\">\n                    <AccountTreeIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText>\n                  <EntityRefLinks\n                    entityRefs={parentRelations}\n                    defaultKind=\"Group\"\n                  />\n                </ListItemText>\n              </ListItem>\n            ) : null}\n\n            {childRelations.length ? (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Child Groups\">\n                    <GroupIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText>\n                  <EntityRefLinks\n                    entityRefs={childRelations}\n                    defaultKind=\"Group\"\n                  />\n                </ListItemText>\n              </ListItem>\n            ) : null}\n          </List>\n        </Grid>\n      </Grid>\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RELATION_MEMBER_OF, UserEntity } from '@backstage/catalog-model';\nimport { Avatar, InfoCard, InfoCardVariants } from '@backstage/core';\nimport {\n  EntityRefLinks,\n  getEntityRelations,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  Grid,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n} from '@material-ui/core';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GroupIcon from '@material-ui/icons/Group';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Alert from '@material-ui/lab/Alert';\nimport React from 'react';\n\nconst CardTitle = ({ title }: { title?: string }) =>\n  title ? (\n    <Box display=\"flex\" alignItems=\"center\">\n      <PersonIcon fontSize=\"inherit\" />\n      <Box ml={1}>{title}</Box>\n    </Box>\n  ) : null;\n\nexport const UserProfileCard = ({\n  variant,\n}: {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: UserEntity;\n  variant?: InfoCardVariants;\n}) => {\n  const { entity: user } = useEntity<UserEntity>();\n  if (!user) {\n    return <Alert severity=\"error\">User not found</Alert>;\n  }\n\n  const {\n    metadata: { name: metaName },\n    spec: { profile },\n  } = user;\n  const displayName = profile?.displayName ?? metaName;\n  const emailHref = profile?.email ? `mailto:${profile.email}` : undefined;\n  const memberOfRelations = getEntityRelations(user, RELATION_MEMBER_OF, {\n    kind: 'Group',\n  });\n\n  return (\n    <InfoCard title={<CardTitle title={displayName} />} variant={variant}>\n      <Grid container spacing={3} alignItems=\"flex-start\">\n        <Grid item xs={12} sm={2} xl={1}>\n          <Avatar displayName={displayName} picture={profile?.picture} />\n        </Grid>\n\n        <Grid item md={10} xl={11}>\n          <List>\n            {profile?.email && (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Email\">\n                    <EmailIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText>\n                  <Link href={emailHref}>{profile.email}</Link>\n                </ListItemText>\n              </ListItem>\n            )}\n\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Member of\">\n                  <GroupIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText>\n                <EntityRefLinks\n                  entityRefs={memberOfRelations}\n                  defaultKind=\"Group\"\n                />\n              </ListItemText>\n            </ListItem>\n          </List>\n        </Grid>\n      </Grid>\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  InfoCard,\n  InfoCardVariants,\n  Progress,\n  ResponseErrorPanel,\n  useApi,\n} from '@backstage/core';\nimport {\n  catalogApiRef,\n  isOwnerOf,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport { BackstageTheme, genPageTheme } from '@backstage/theme';\nimport {\n  Box,\n  createStyles,\n  Grid,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { useAsync } from 'react-use';\n\ntype EntitiesKinds = 'Component' | 'API';\ntype EntitiesTypes =\n  | 'service'\n  | 'website'\n  | 'library'\n  | 'documentation'\n  | 'api'\n  | 'tool';\n\nconst createPageTheme = (\n  theme: BackstageTheme,\n  shapeKey: string,\n  colorsKey: string,\n) => {\n  const { colors } = theme.getPageTheme({ themeId: colorsKey });\n  const { shape } = theme.getPageTheme({ themeId: shapeKey });\n  return genPageTheme(colors, shape).backgroundImage;\n};\n\nconst useStyles = makeStyles((theme: BackstageTheme) =>\n  createStyles({\n    card: {\n      border: `1px solid ${theme.palette.divider}`,\n      boxShadow: theme.shadows[2],\n      borderRadius: '4px',\n      padding: theme.spacing(2),\n      color: '#fff',\n      transition: `${theme.transitions.duration.standard}ms`,\n      '&:hover': {\n        boxShadow: theme.shadows[4],\n      },\n    },\n    bold: {\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    service: {\n      background: createPageTheme(theme, 'home', 'service'),\n    },\n    website: {\n      background: createPageTheme(theme, 'home', 'website'),\n    },\n    library: {\n      background: createPageTheme(theme, 'home', 'library'),\n    },\n    documentation: {\n      background: createPageTheme(theme, 'home', 'documentation'),\n    },\n    api: {\n      background: createPageTheme(theme, 'home', 'home'),\n    },\n    tool: {\n      background: createPageTheme(theme, 'home', 'tool'),\n    },\n  }),\n);\n\nconst countEntitiesBy = (\n  entities: Array<Entity>,\n  kind: EntitiesKinds,\n  type?: EntitiesTypes,\n) =>\n  entities.filter(\n    e => e.kind === kind && (type ? e?.spec?.type === type : true),\n  ).length;\n\nconst EntityCountTile = ({\n  counter,\n  className,\n  name,\n}: {\n  counter: number;\n  className: EntitiesTypes;\n  name: string;\n}) => {\n  const classes = useStyles();\n  return (\n    <Box\n      className={`${classes.card} ${classes[className]}`}\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n    >\n      <Typography className={classes.bold} variant=\"h6\">\n        {counter}\n      </Typography>\n      <Typography className={classes.bold} variant=\"h6\">\n        {name}\n      </Typography>\n    </Box>\n  );\n};\n\nexport const OwnershipCard = ({\n  variant,\n}: {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n  variant?: InfoCardVariants;\n}) => {\n  const { entity } = useEntity();\n  const catalogApi = useApi(catalogApiRef);\n  const {\n    loading,\n    error,\n    value: componentsWithCounters,\n  } = useAsync(async () => {\n    const kinds = ['Component', 'API'];\n    const entitiesList = await catalogApi.getEntities({\n      filter: {\n        kind: kinds,\n      },\n      fields: [\n        'kind',\n        'metadata.name',\n        'metadata.namespace',\n        'spec.type',\n        'relations',\n      ],\n    });\n\n    const ownedEntitiesList = entitiesList.items.filter(component =>\n      isOwnerOf(entity, component),\n    );\n\n    return [\n      {\n        counter: countEntitiesBy(ownedEntitiesList, 'Component', 'service'),\n        className: 'service',\n        name: 'Services',\n      },\n      {\n        counter: countEntitiesBy(\n          ownedEntitiesList,\n          'Component',\n          'documentation',\n        ),\n        className: 'documentation',\n        name: 'Documentation',\n      },\n      {\n        counter: countEntitiesBy(ownedEntitiesList, 'API'),\n        className: 'api',\n        name: 'APIs',\n      },\n      {\n        counter: countEntitiesBy(ownedEntitiesList, 'Component', 'library'),\n        className: 'library',\n        name: 'Libraries',\n      },\n      {\n        counter: countEntitiesBy(ownedEntitiesList, 'Component', 'website'),\n        className: 'website',\n        name: 'Websites',\n      },\n      {\n        counter: countEntitiesBy(ownedEntitiesList, 'Component', 'tool'),\n        className: 'tool',\n        name: 'Tools',\n      },\n    ] as Array<{ counter: number; className: EntitiesTypes; name: string }>;\n  }, [catalogApi, entity]);\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  return (\n    <InfoCard title=\"Ownership\" variant={variant}>\n      <Grid container>\n        {componentsWithCounters?.map(c => (\n          <Grid item xs={6} md={6} lg={4} key={c.name}>\n            <EntityCountTile\n              counter={c.counter}\n              className={c.className}\n              name={c.name}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </InfoCard>\n  );\n};\n"],"names":["RouterLink","CardTitle","useStyles"],"mappings":"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"}