import { RequesterType, DefaultServiceOptions } from './RequesterUtils';
export interface BaseServiceOptions {
    oauthToken?: string;
    token?: string;
    jobToken?: string;
    host?: string;
    prefixUrl?: string;
    version?: 3 | 4;
    rejectUnauthorized?: boolean;
    camelize?: boolean;
    requesterFn?: (serviceOptions: DefaultServiceOptions) => RequesterType;
    requestTimeout?: number;
    profileToken?: string;
    sudo?: string | number;
    profileMode?: 'execution' | 'memory';
}
export declare class BaseService {
    readonly url: string;
    readonly requester: RequesterType;
    readonly requestTimeout: number;
    readonly headers: {
        [header: string]: string;
    };
    readonly camelize: boolean;
    readonly rejectUnauthorized: boolean;
    constructor({ token, jobToken, oauthToken, sudo, profileToken, requesterFn, profileMode, host, prefixUrl, version, camelize, rejectUnauthorized, requestTimeout, }?: BaseServiceOptions);
}
