/// <reference types="react" />
import { ApiEntity, Entity } from '@backstage/catalog-model';
import React from 'react';
import { ApiRef, BackstagePlugin, RouteRef, ExternalRouteRef } from '@backstage/core';

declare type Props = {
    /** @deprecated The entity is now grabbed from context instead */
    apiEntity?: ApiEntity;
};
declare const ApiDefinitionCard: (_: Props) => JSX.Element;

declare type ApiDefinitionWidget = {
    type: string;
    title: string;
    component: (definition: string) => React.ReactElement;
    rawLanguage?: string;
};
declare function defaultDefinitionWidgets(): ApiDefinitionWidget[];

declare const ApiTypeTitle: ({ apiEntity }: {
    apiEntity: ApiEntity;
}) => JSX.Element;

declare type Props$1 = {
    /** @deprecated The entity is now grabbed from context instead */
    entity?: Entity;
    variant?: 'gridItem';
};
declare const ConsumedApisCard: ({ variant }: Props$1) => JSX.Element;

declare type Props$2 = {
    variant?: 'gridItem';
};
declare const HasApisCard: ({ variant }: Props$2) => JSX.Element;

declare type Props$3 = {
    /** @deprecated The entity is now grabbed from context instead */
    entity?: Entity;
    variant?: 'gridItem';
};
declare const ProvidedApisCard: ({ variant }: Props$3) => JSX.Element;

declare type Props$4 = {
    definition: string;
};
declare const AsyncApiDefinitionWidget: ({ definition }: Props$4) => JSX.Element;

declare type Props$5 = {
    /** @deprecated The entity is now grabbed from context instead */
    entity?: Entity;
    variant?: 'gridItem';
};
declare const ConsumingComponentsCard: ({ variant }: Props$5) => JSX.Element;

declare type Props$6 = {
    /** @deprecated The entity is now grabbed from context instead */
    entity?: Entity;
    variant?: 'gridItem';
};
declare const ProvidingComponentsCard: ({ variant }: Props$6) => JSX.Element;

declare type Props$7 = {
    definition: string;
};
declare const OpenApiDefinitionWidget: ({ definition }: Props$7) => JSX.Element;

declare type Props$8 = {
    definition: any;
    language: string;
};
declare const PlainApiDefinitionWidget: ({ definition, language }: Props$8) => JSX.Element;

declare const apiDocsConfigRef: ApiRef<ApiDocsConfig>;
interface ApiDocsConfig {
    getApiDefinitionWidget: (apiEntity: ApiEntity) => ApiDefinitionWidget | undefined;
}

declare const apiDocsPlugin: BackstagePlugin<{
    root: RouteRef<undefined>;
}, {
    createComponent: ExternalRouteRef<undefined, true>;
}>;
declare const ApiExplorerPage: () => JSX.Element;
declare const EntityApiDefinitionCard: (_: {
    apiEntity?: ApiEntity | undefined;
}) => JSX.Element;
declare const EntityConsumedApisCard: ({ variant }: {
    entity?: Entity | undefined;
    variant?: "gridItem" | undefined;
}) => JSX.Element;
declare const EntityConsumingComponentsCard: ({ variant }: {
    entity?: Entity | undefined;
    variant?: "gridItem" | undefined;
}) => JSX.Element;
declare const EntityProvidedApisCard: ({ variant }: {
    entity?: Entity | undefined;
    variant?: "gridItem" | undefined;
}) => JSX.Element;
declare const EntityProvidingComponentsCard: ({ variant }: {
    entity?: Entity | undefined;
    variant?: "gridItem" | undefined;
}) => JSX.Element;
declare const EntityHasApisCard: ({ variant }: {
    variant?: "gridItem" | undefined;
}) => JSX.Element;

export { ApiDefinitionCard, ApiDefinitionWidget, ApiExplorerPage, ApiTypeTitle, AsyncApiDefinitionWidget, ConsumedApisCard, ConsumingComponentsCard, EntityApiDefinitionCard, EntityConsumedApisCard, EntityConsumingComponentsCard, EntityHasApisCard, EntityProvidedApisCard, EntityProvidingComponentsCard, HasApisCard, OpenApiDefinitionWidget, PlainApiDefinitionWidget, ProvidedApisCard, ProvidingComponentsCard, apiDocsConfigRef, apiDocsPlugin, defaultDefinitionWidgets, apiDocsPlugin as plugin };
