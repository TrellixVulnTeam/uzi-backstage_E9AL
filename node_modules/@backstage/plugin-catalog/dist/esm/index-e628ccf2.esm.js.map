{"version":3,"file":"index-e628ccf2.esm.js","sources":["../../src/components/EntityLinksCard/EntityLinksEmptyState.tsx","../../src/components/EntityLinksCard/IconLink.tsx","../../src/components/EntityLinksCard/useDynamicColumns.tsx","../../src/components/EntityLinksCard/LinksGridList.tsx","../../src/components/EntityLinksCard/EntityLinksCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CodeSnippet } from '@backstage/core';\nimport { BackstageTheme } from '@backstage/theme';\nimport { Button, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\n\nconst ENTITY_YAML = `metadata:\n  name: example\n  links:\n    - url: https://dashboard.example.com\n      title: My Dashboard\n      icon: dashboard`;\n\nconst useStyles = makeStyles<BackstageTheme>(theme => ({\n  code: {\n    borderRadius: 6,\n    margin: `${theme.spacing(2)}px 0px`,\n    background: theme.palette.type === 'dark' ? '#444' : '#fff',\n  },\n}));\n\nexport const EntityLinksEmptyState = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography variant=\"body1\">\n        No links defined for this entity. You can add links to your entity YAML\n        as shown in the highlighted example below:\n      </Typography>\n      <div className={classes.code}>\n        <CodeSnippet\n          text={ENTITY_YAML}\n          language=\"yaml\"\n          showLineNumbers\n          highlightedNumbers={[3, 4, 5, 6]}\n          customStyle={{ background: 'inherit', fontSize: '115%' }}\n        />\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        target=\"_blank\"\n        href=\"https://backstage.io/docs/features/software-catalog/descriptor-format#links-optional\"\n      >\n        Read more\n      </Button>\n    </>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Link, IconComponent } from '@backstage/core';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport React from 'react';\n\nconst useStyles = makeStyles({\n  svgIcon: {\n    display: 'inline-block',\n    '& svg': {\n      display: 'inline-block',\n      fontSize: 'inherit',\n      verticalAlign: 'baseline',\n    },\n  },\n});\n\nexport const IconLink = ({\n  href,\n  text,\n  Icon,\n}: {\n  href: string;\n  text?: string;\n  Icon?: IconComponent;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"row\" spacing={1}>\n      <Grid item>\n        <Typography component=\"div\" className={classes.svgIcon}>\n          {Icon ? <Icon /> : <LanguageIcon />}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Link to={href} target=\"_blank\" rel=\"noopener\">\n          {text || href}\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Theme, useMediaQuery } from '@material-ui/core';\nimport { Breakpoint, ColumnBreakpoints } from './types';\n\nconst colDefaults: ColumnBreakpoints = {\n  xs: 1,\n  sm: 1,\n  md: 1,\n  lg: 2,\n  xl: 3,\n};\n\nexport function useDynamicColumns(\n  cols: ColumnBreakpoints | number | undefined,\n): number {\n  const matches: (Breakpoint | null)[] = [\n    useMediaQuery((theme: Theme) => theme.breakpoints.up('xl')) ? 'xl' : null,\n    useMediaQuery((theme: Theme) => theme.breakpoints.up('lg')) ? 'lg' : null,\n    useMediaQuery((theme: Theme) => theme.breakpoints.up('md')) ? 'md' : null,\n    useMediaQuery((theme: Theme) => theme.breakpoints.up('sm')) ? 'sm' : null,\n    useMediaQuery((theme: Theme) => theme.breakpoints.up('xs')) ? 'xs' : null,\n  ];\n\n  let numOfCols = 1;\n\n  if (typeof cols === 'number') {\n    numOfCols = cols;\n  } else {\n    const breakpoint = matches.find(k => k !== null) ?? 'xs';\n    numOfCols = cols?.[breakpoint] ?? colDefaults[breakpoint];\n  }\n\n  return numOfCols;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IconComponent } from '@backstage/core';\nimport { GridList, GridListTile } from '@material-ui/core';\nimport React from 'react';\nimport { IconLink } from './IconLink';\nimport { ColumnBreakpoints } from './types';\nimport { useDynamicColumns } from './useDynamicColumns';\n\nexport type LinksGridListItem = {\n  href: string;\n  text?: string;\n  Icon?: IconComponent;\n};\n\ntype Props = {\n  items: LinksGridListItem[];\n  cols?: ColumnBreakpoints | number;\n};\n\nexport const LinksGridList = ({ items, cols = undefined }: Props) => {\n  const numOfCols = useDynamicColumns(cols);\n\n  return (\n    <GridList cellHeight=\"auto\" cols={numOfCols}>\n      {items.map(({ text, href, Icon }, i) => (\n        <GridListTile key={i}>\n          <IconLink href={href} text={text ?? href} Icon={Icon} />\n        </GridListTile>\n      ))}\n    </GridList>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { IconComponent, IconKey, InfoCard, useApp } from '@backstage/core';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport React from 'react';\nimport { EntityLinksEmptyState } from './EntityLinksEmptyState';\nimport { LinksGridList } from './LinksGridList';\nimport { ColumnBreakpoints } from './types';\n\ntype Props = {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n  cols?: ColumnBreakpoints | number;\n  variant?: 'gridItem';\n};\n\nexport const EntityLinksCard = ({ cols = undefined, variant }: Props) => {\n  const { entity } = useEntity();\n  const app = useApp();\n\n  const iconResolver = (key: IconKey | undefined): IconComponent =>\n    key ? app.getSystemIcon(key) ?? LanguageIcon : LanguageIcon;\n\n  const links = entity?.metadata?.links;\n\n  return (\n    <InfoCard title=\"Links\" variant={variant}>\n      {!links || links.length === 0 ? (\n        <EntityLinksEmptyState />\n      ) : (\n        <LinksGridList\n          cols={cols}\n          items={links.map(({ url, title, icon }) => ({\n            text: title ?? url,\n            href: url,\n            Icon: iconResolver(icon),\n          }))}\n        />\n      )}\n    </InfoCard>\n  );\n};\n"],"names":["useStyles"],"mappings":";;;;;;AAqBA,MAAM,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAOpB,MAAM,YAAY,WAA2B;AAAU,EACrD,MAAM;AAAA,IACJ,cAAc;AAAA,IACd,QAAQ,GAAG,MAAM,QAAQ;AAAA,IACzB,YAAY,MAAM,QAAQ,SAAS,SAAS,SAAS;AAAA;AAAA;MAI5C,wBAAwB,MAAM;AACzC,QAAM,UAAU;AAEhB,uGAEK,YAAD;AAAA,IAAY,SAAQ;AAAA,KAAQ,2JAI3B,OAAD;AAAA,IAAK,WAAW,QAAQ;AAAA,yCACrB,aAAD;AAAA,IACE,MAAM;AAAA,IACN,UAAS;AAAA,IACT,iBAAe;AAAA,IACf,oBAAoB,CAAC,GAAG,GAAG,GAAG;AAAA,IAC9B,aAAa,CAAE,YAAY,WAAW,UAAU;AAAA,2CAGnD,QAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,QAAO;AAAA,IACP,MAAK;AAAA,KACN;AAAA;;ACtCP,MAAMA,cAAY,WAAW;AAAA,EAC3B,SAAS;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,MACP,SAAS;AAAA,MACT,UAAU;AAAA,MACV,eAAe;AAAA;AAAA;AAAA;MAKR,WAAW,CAAC;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,MAKI;AACJ,QAAM,UAAUA;AAEhB,6CACG,MAAD;AAAA,IAAM,WAAS;AAAA,IAAC,WAAU;AAAA,IAAM,SAAS;AAAA,yCACtC,MAAD;AAAA,IAAM,MAAI;AAAA,yCACP,YAAD;AAAA,IAAY,WAAU;AAAA,IAAM,WAAW,QAAQ;AAAA,KAC5C,2CAAQ,MAAD,4CAAY,cAAD,6CAGtB,MAAD;AAAA,IAAM,MAAI;AAAA,yCACP,MAAD;AAAA,IAAM,IAAI;AAAA,IAAM,QAAO;AAAA,IAAS,KAAI;AAAA,KACjC,QAAQ;AAAA;;ACjCnB,MAAM,cAAiC;AAAA,EACrC,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA;2BAIJ,MACQ;AA7BV;AA8BE,QAAM,UAAiC;AAAA,IACrC,cAAc,CAAC,UAAiB,MAAM,YAAY,GAAG,SAAS,OAAO;AAAA,IACrE,cAAc,CAAC,UAAiB,MAAM,YAAY,GAAG,SAAS,OAAO;AAAA,IACrE,cAAc,CAAC,UAAiB,MAAM,YAAY,GAAG,SAAS,OAAO;AAAA,IACrE,cAAc,CAAC,UAAiB,MAAM,YAAY,GAAG,SAAS,OAAO;AAAA,IACrE,cAAc,CAAC,UAAiB,MAAM,YAAY,GAAG,SAAS,OAAO;AAAA;AAGvE,MAAI,YAAY;AAEhB,MAAI,OAAO,SAAS,UAAU;AAC5B,gBAAY;AAAA,SACP;AACL,UAAM,aAAa,cAAQ,KAAK,OAAK,MAAM,UAAxB,YAAiC;AACpD,gBAAY,mCAAO,gBAAP,YAAsB,YAAY;AAAA;AAGhD,SAAO;AAAA;;MCbI,gBAAgB,CAAC,CAAE,OAAO,OAAO,YAAuB;AACnE,QAAM,YAAY,kBAAkB;AAEpC,6CACG,UAAD;AAAA,IAAU,YAAW;AAAA,IAAO,MAAM;AAAA,KAC/B,MAAM,IAAI,CAAC,CAAE,MAAM,MAAM,OAAQ,0CAC/B,cAAD;AAAA,IAAc,KAAK;AAAA,yCAChB,UAAD;AAAA,IAAU;AAAA,IAAY,MAAM,sBAAQ;AAAA,IAAM;AAAA;AAAA;;MCTvC,kBAAkB,CAAC,CAAE,OAAO,QAAW,aAAqB;AAhCzE;AAiCE,QAAM,CAAE,UAAW;AACnB,QAAM,MAAM;AAEZ,QAAM,eAAe,CAAC,QAAyC;AApCjE;AAqCI,iBAAM,WAAI,cAAc,SAAlB,aAA0B,eAAe;AAAA;AAEjD,QAAM,QAAQ,uCAAQ,aAAR,mBAAkB;AAEhC,6CACG,UAAD;AAAA,IAAU,OAAM;AAAA,IAAQ;AAAA,KACrB,CAAC,SAAS,MAAM,WAAW,wCACzB,uBAAD,4CAEC,eAAD;AAAA,IACE;AAAA,IACA,OAAO,MAAM,IAAI,CAAC,CAAE,KAAK,OAAO;AAAY,MAC1C,MAAM,wBAAS;AAAA,MACf,MAAM;AAAA,MACN,MAAM,aAAa;AAAA;AAAA;AAAA;;;;"}