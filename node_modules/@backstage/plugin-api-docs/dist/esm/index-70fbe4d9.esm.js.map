{"version":3,"file":"index-70fbe4d9.esm.js","sources":["../../src/config.ts","../../src/components/PlainApiDefinitionWidget/PlainApiDefinitionWidget.tsx","../../src/components/ApiDefinitionCard/ApiDefinitionCard.tsx","../../src/components/AsyncApiDefinitionWidget/AsyncApiDefinitionWidget.tsx","../../src/components/GraphQlDefinitionWidget/GraphQlDefinitionWidget.tsx","../../src/components/OpenApiDefinitionWidget/OpenApiDefinitionWidget.tsx","../../src/components/ApiDefinitionCard/ApiDefinitionWidget.tsx","../../src/components/ApiDefinitionCard/ApiTypeTitle.tsx","../../src/components/ApisCards/presets.tsx","../../src/components/ApisCards/ConsumedApisCard.tsx","../../src/components/ApisCards/HasApisCard.tsx","../../src/components/ApisCards/ProvidedApisCard.tsx","../../src/components/ComponentsCards/ConsumingComponentsCard.tsx","../../src/components/ComponentsCards/ProvidingComponentsCard.tsx","../../src/routes.ts","../../src/components/ApiExplorerTable/ApiExplorerTable.tsx","../../src/components/ApiExplorerPage/ApiExplorerLayout.tsx","../../src/components/ApiExplorerPage/ApiExplorerPage.tsx","../../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity } from '@backstage/catalog-model';\nimport { createApiRef } from '@backstage/core';\nimport { ApiDefinitionWidget } from './components/ApiDefinitionCard/ApiDefinitionWidget';\n\nexport const apiDocsConfigRef = createApiRef<ApiDocsConfig>({\n  id: 'plugin.api-docs.config',\n  description: 'Used to configure api-docs widgets',\n});\n\nexport interface ApiDocsConfig {\n  getApiDefinitionWidget: (\n    apiEntity: ApiEntity,\n  ) => ApiDefinitionWidget | undefined;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CodeSnippet } from '@backstage/core';\nimport React from 'react';\n\ntype Props = {\n  definition: any;\n  language: string;\n};\n\nexport const PlainApiDefinitionWidget = ({ definition, language }: Props) => {\n  return (\n    <CodeSnippet text={definition} language={language} showCopyCodeButton />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity } from '@backstage/catalog-model';\nimport { CardTab, TabbedCard, useApi } from '@backstage/core';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { Alert } from '@material-ui/lab';\nimport React from 'react';\nimport { apiDocsConfigRef } from '../../config';\nimport { PlainApiDefinitionWidget } from '../PlainApiDefinitionWidget';\n\ntype Props = {\n  /** @deprecated The entity is now grabbed from context instead */\n  apiEntity?: ApiEntity;\n};\n\nexport const ApiDefinitionCard = (_: Props) => {\n  const { entity } = useEntity<ApiEntity>();\n  const config = useApi(apiDocsConfigRef);\n  const { getApiDefinitionWidget } = config;\n\n  if (!entity) {\n    return <Alert severity=\"error\">Could not fetch the API</Alert>;\n  }\n\n  const definitionWidget = getApiDefinitionWidget(entity);\n\n  if (definitionWidget) {\n    return (\n      <TabbedCard title={entity.metadata.name}>\n        <CardTab label={definitionWidget.title} key=\"widget\">\n          {definitionWidget.component(entity.spec.definition)}\n        </CardTab>\n        <CardTab label=\"Raw\" key=\"raw\">\n          <PlainApiDefinitionWidget\n            definition={entity.spec.definition}\n            language={definitionWidget.rawLanguage || entity.spec.type}\n          />\n        </CardTab>\n      </TabbedCard>\n    );\n  }\n\n  return (\n    <TabbedCard\n      title={entity.metadata.name}\n      children={[\n        // Has to be an array, otherwise typescript doesn't like that this has only a single child\n        <CardTab label={entity.spec.type} key=\"raw\">\n          <PlainApiDefinitionWidget\n            definition={entity.spec.definition}\n            language={entity.spec.type}\n          />\n        </CardTab>,\n      ]}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AsyncApi from '@asyncapi/react-component';\nimport '@asyncapi/react-component/lib/styles/fiori.css';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .asyncapi': {\n      'font-family': 'inherit',\n      background: 'none',\n    },\n    '& h2': {\n      ...theme.typography.h6,\n    },\n    '& .text-teal': {\n      color: theme.palette.primary.main,\n    },\n    '& button': {\n      ...theme.typography.button,\n      background: 'none',\n      boxSizing: 'border-box',\n      minWidth: 64,\n      borderRadius: theme.shape.borderRadius,\n      transition: theme.transitions.create(\n        ['background-color', 'box-shadow', 'border'],\n        {\n          duration: theme.transitions.duration.short,\n        },\n      ),\n      padding: '5px 15px',\n      color: theme.palette.primary.main,\n      border: `1px solid ${fade(theme.palette.primary.main, 0.5)}`,\n      '&:hover': {\n        textDecoration: 'none',\n        '&.Mui-disabled': {\n          backgroundColor: 'transparent',\n        },\n        border: `1px solid ${theme.palette.primary.main}`,\n        backgroundColor: fade(\n          theme.palette.primary.main,\n          theme.palette.action.hoverOpacity,\n        ),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent',\n        },\n      },\n      '&.Mui-disabled': {\n        color: theme.palette.action.disabled,\n      },\n    },\n    '& .asyncapi__collapse-button:hover': {\n      color: theme.palette.primary.main,\n    },\n    '& button.asyncapi__toggle-button': {\n      'min-width': 'inherit',\n    },\n    '& .asyncapi__info-list li': {\n      'border-color': theme.palette.primary.main,\n      '&:hover': {\n        color: theme.palette.text.primary,\n        'border-color': theme.palette.primary.main,\n        'background-color': theme.palette.primary.main,\n      },\n    },\n    '& .asyncapi__info-list li a': {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n      },\n    },\n    '& .asyncapi__enum': {\n      color: theme.palette.secondary.main,\n    },\n    '& .asyncapi__info, .asyncapi__channel, .asyncapi__channels > div, .asyncapi__schema, .asyncapi__channel-operations-list .asyncapi__messages-list-item .asyncapi__message, .asyncapi__message, .asyncapi__server, .asyncapi__servers > div, .asyncapi__messages > div, .asyncapi__schemas > div': {\n      'background-color': 'inherit',\n    },\n    '& .asyncapi__channel-parameters-header, .asyncapi__channel-operations-header, .asyncapi__channel-operation-oneOf-subscribe-header, .asyncapi__channel-operation-oneOf-publish-header, .asyncapi__channel-operation-message-header,  .asyncapi__message-header, .asyncapi__message-header-title, .asyncapi__message-header-title > h3, .asyncapi__bindings, .asyncapi__bindings-header, .asyncapi__bindings-header > h4': {\n      'background-color': 'inherit',\n      color: theme.palette.text.primary,\n    },\n    '& .asyncapi__additional-properties-notice': {\n      color: theme.palette.text.hint,\n    },\n    '& .asyncapi__code, .asyncapi__code-pre': {\n      background: theme.palette.background.default,\n    },\n    '& .asyncapi__schema-example-header-title': {\n      color: theme.palette.text.secondary,\n    },\n    '& .asyncapi__message-headers-header, .asyncapi__message-payload-header, .asyncapi__server-variables-header, .asyncapi__server-security-header': {\n      'background-color': 'inherit',\n      color: theme.palette.text.secondary,\n    },\n    '& .asyncapi__table-header': {\n      background: theme.palette.background.default,\n    },\n    '& .asyncapi__table-body': {\n      color: theme.palette.text.primary,\n    },\n    '& .asyncapi__server-security-flow': {\n      background: theme.palette.background.default,\n      border: 'none',\n    },\n    '& .asyncapi__server-security-flows-list a': {\n      color: theme.palette.primary.main,\n    },\n    '& .asyncapi__table-row--nested': {\n      color: theme.palette.text.secondary,\n    },\n  },\n}));\n\ntype Props = {\n  definition: string;\n};\n\nexport const AsyncApiDefinitionWidget = ({ definition }: Props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AsyncApi schema={definition} />\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Progress } from '@backstage/core';\nimport { BackstageTheme } from '@backstage/theme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'graphiql/graphiql.css';\nimport { buildSchema } from 'graphql';\nimport React, { Suspense } from 'react';\n\nconst GraphiQL = React.lazy(() => import('graphiql'));\n\nconst useStyles = makeStyles<BackstageTheme>(() => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexFlow: 'column nowrap',\n  },\n  graphiQlWrapper: {\n    flex: 1,\n    '@global': {\n      '.graphiql-container': {\n        boxSizing: 'initial',\n        height: '100%',\n        minHeight: '600px',\n        flex: '1 1 auto',\n      },\n    },\n  },\n}));\n\ntype Props = {\n  definition: any;\n};\n\nexport const GraphQlDefinitionWidget = ({ definition }: Props) => {\n  const classes = useStyles();\n  const schema = buildSchema(definition);\n\n  return (\n    <Suspense fallback={<Progress />}>\n      <div className={classes.root}>\n        <div className={classes.graphiQlWrapper}>\n          <GraphiQL\n            fetcher={() => Promise.resolve(null) as any}\n            schema={schema}\n            docExplorerOpen\n            defaultSecondaryEditorOpen={false}\n          />\n        </div>\n      </div>\n    </Suspense>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwaggerUI from 'swagger-ui-react';\nimport 'swagger-ui-react/swagger-ui.css';\n\n// TODO: Schemas\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .swagger-ui, .info h1, .info h2, .info h3, .info h4, .info h': {\n      'font-family': 'inherit',\n      color: theme.palette.text.primary,\n    },\n    '& .scheme-container': {\n      'background-color': theme.palette.background.default,\n    },\n    '& .opblock-tag, .opblock-tag small, table thead tr td, table thead tr th': {\n      color: theme.palette.text.primary,\n      'border-color': theme.palette.divider,\n    },\n    '& section.models, section.models.is-open h4': {\n      'border-color': theme.palette.divider,\n    },\n    '& .opblock .opblock-summary-description, .parameter__type, table.headers td, .model-title, .model .property.primitive, section h3': {\n      color: theme.palette.text.secondary,\n    },\n    '& .opblock .opblock-summary-operation-id, .opblock .opblock-summary-path, .opblock .opblock-summary-path__deprecated, .opblock .opblock-section-header h4, .parameter__name, .response-col_status, .response-col_links, .responses-inner h4, .swagger-ui .responses-inner h5, .opblock-section-header .btn, .tab li, .info li, .info p, .info table, section.models h4, .info .title, table.model tr.description, .property-row': {\n      color: theme.palette.text.primary,\n    },\n    '& .opblock .opblock-section-header, .model-box, section.models .model-container': {\n      background: theme.palette.background.default,\n    },\n    '& .prop-format, .parameter__in': {\n      color: theme.palette.text.disabled,\n    },\n    '& ': {\n      color: theme.palette.text.primary,\n      'border-color': theme.palette.divider,\n    },\n    '& .opblock-description-wrapper p, .opblock-external-docs-wrapper p, .opblock-title_normal p, .response-control-media-type__accept-message, .opblock .opblock-section-header>label, .scheme-container .schemes>label, .info .base-url, .model': {\n      color: theme.palette.text.hint,\n    },\n    '& .parameter__name.required:after': {\n      color: theme.palette.warning.dark,\n    },\n    '& .prop-type': {\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\ntype Props = {\n  definition: string;\n};\n\nexport const OpenApiDefinitionWidget = ({ definition }: Props) => {\n  const classes = useStyles();\n\n  // Due to a bug in the swagger-ui-react component, the component needs\n  // to be created without content first.\n  const [def, setDef] = useState('');\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDef(definition), 0);\n    return () => clearTimeout(timer);\n  }, [definition, setDef]);\n\n  return (\n    <div className={classes.root}>\n      <SwaggerUI spec={def} />\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { AsyncApiDefinitionWidget } from '../AsyncApiDefinitionWidget';\nimport { GraphQlDefinitionWidget } from '../GraphQlDefinitionWidget';\nimport { OpenApiDefinitionWidget } from '../OpenApiDefinitionWidget';\n\nexport type ApiDefinitionWidget = {\n  type: string;\n  title: string;\n  component: (definition: string) => React.ReactElement;\n  rawLanguage?: string;\n};\n\nexport function defaultDefinitionWidgets(): ApiDefinitionWidget[] {\n  return [\n    {\n      type: 'openapi',\n      title: 'OpenAPI',\n      rawLanguage: 'yaml',\n      component: definition => (\n        <OpenApiDefinitionWidget definition={definition} />\n      ),\n    },\n    {\n      type: 'asyncapi',\n      title: 'AsyncAPI',\n      rawLanguage: 'yaml',\n      component: definition => (\n        <AsyncApiDefinitionWidget definition={definition} />\n      ),\n    },\n    {\n      type: 'graphql',\n      title: 'GraphQL',\n      rawLanguage: 'graphql',\n      component: definition => (\n        <GraphQlDefinitionWidget definition={definition} />\n      ),\n    },\n  ];\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core';\nimport React from 'react';\nimport { apiDocsConfigRef } from '../../config';\n\nexport const ApiTypeTitle = ({ apiEntity }: { apiEntity: ApiEntity }) => {\n  const config = useApi(apiDocsConfigRef);\n  const definition = config.getApiDefinitionWidget(apiEntity);\n  const type = definition ? definition.title : apiEntity.spec.type;\n\n  return <span>{type}</span>;\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity } from '@backstage/catalog-model';\nimport { TableColumn } from '@backstage/core';\nimport { EntityTable } from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { ApiTypeTitle } from '../ApiDefinitionCard';\n\nexport function createSpecApiTypeColumn(): TableColumn<ApiEntity> {\n  return {\n    title: 'Type',\n    field: 'spec.type',\n    render: entity => <ApiTypeTitle apiEntity={entity} />,\n  };\n}\n\n// TODO: This could be moved to plugin-catalog-react if we wouldn't have a\n// special createSpecApiTypeColumn. But this is required to use ApiTypeTitle to\n// resolve the display name of an entity. Is the display name really worth it?\n\nexport const apiEntityColumns: TableColumn<ApiEntity>[] = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: 'API' }),\n  EntityTable.columns.createSystemColumn(),\n  EntityTable.columns.createOwnerColumn(),\n  EntityTable.columns.createSpecLifecycleColumn(),\n  createSpecApiTypeColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn(),\n];\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApiEntity,\n  Entity,\n  RELATION_CONSUMES_API,\n} from '@backstage/catalog-model';\nimport {\n  CodeSnippet,\n  InfoCard,\n  Link,\n  Progress,\n  WarningPanel,\n} from '@backstage/core';\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { apiEntityColumns } from './presets';\n\ntype Props = {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n  variant?: 'gridItem';\n};\n\nexport const ConsumedApisCard = ({ variant = 'gridItem' }: Props) => {\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_CONSUMES_API,\n  });\n\n  if (loading) {\n    return (\n      <InfoCard variant={variant} title=\"Consumed APIs\">\n        <Progress />\n      </InfoCard>\n    );\n  }\n\n  if (error || !entities) {\n    return (\n      <InfoCard variant={variant} title=\"Consumed APIs\">\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not load APIs\"\n          message={<CodeSnippet text={`${error}`} language=\"text\" />}\n        />\n      </InfoCard>\n    );\n  }\n\n  return (\n    <EntityTable\n      title=\"Consumed APIs\"\n      variant={variant}\n      emptyContent={\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            This {entity.kind.toLocaleLowerCase('en-US')} does not consume any\n            APIs.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to=\"https://backstage.io/docs/features/software-catalog/descriptor-format#specconsumesapis-optional\">\n              Learn how to change this.\n            </Link>\n          </Typography>\n        </div>\n      }\n      columns={apiEntityColumns}\n      entities={entities as ApiEntity[]}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity, RELATION_HAS_PART } from '@backstage/catalog-model';\nimport {\n  CodeSnippet,\n  InfoCard,\n  Link,\n  Progress,\n  TableColumn,\n  WarningPanel,\n} from '@backstage/core';\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { createSpecApiTypeColumn } from './presets';\n\ntype Props = {\n  variant?: 'gridItem';\n};\n\nconst columns: TableColumn<ApiEntity>[] = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: 'API' }),\n  EntityTable.columns.createOwnerColumn(),\n  EntityTable.columns.createSpecLifecycleColumn(),\n  createSpecApiTypeColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn(),\n];\n\nexport const HasApisCard = ({ variant = 'gridItem' }: Props) => {\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_HAS_PART,\n    kind: 'API',\n  });\n\n  if (loading) {\n    return (\n      <InfoCard variant={variant} title=\"APIs\">\n        <Progress />\n      </InfoCard>\n    );\n  }\n\n  if (error || !entities) {\n    return (\n      <InfoCard variant={variant} title=\"APIs\">\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not load APIs\"\n          message={<CodeSnippet text={`${error}`} language=\"text\" />}\n        />\n      </InfoCard>\n    );\n  }\n\n  return (\n    <EntityTable\n      title=\"APIs\"\n      variant={variant}\n      emptyContent={\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            This {entity.kind.toLocaleLowerCase('en-US')} does not contain any\n            APIs.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to=\"https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api\">\n              Learn how to change this.\n            </Link>\n          </Typography>\n        </div>\n      }\n      columns={columns}\n      entities={entities as ApiEntity[]}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApiEntity,\n  Entity,\n  RELATION_PROVIDES_API,\n} from '@backstage/catalog-model';\nimport {\n  CodeSnippet,\n  InfoCard,\n  Link,\n  Progress,\n  WarningPanel,\n} from '@backstage/core';\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { apiEntityColumns } from './presets';\n\ntype Props = {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n  variant?: 'gridItem';\n};\n\nexport const ProvidedApisCard = ({ variant = 'gridItem' }: Props) => {\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_PROVIDES_API,\n  });\n\n  if (loading) {\n    return (\n      <InfoCard variant={variant} title=\"Provided APIs\">\n        <Progress />\n      </InfoCard>\n    );\n  }\n\n  if (error || !entities) {\n    return (\n      <InfoCard variant={variant} title=\"Provided APIs\">\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not load APIs\"\n          message={<CodeSnippet text={`${error}`} language=\"text\" />}\n        />\n      </InfoCard>\n    );\n  }\n\n  return (\n    <EntityTable\n      title=\"Provided APIs\"\n      variant={variant}\n      emptyContent={\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            This {entity.kind.toLocaleLowerCase('en-US')} does not provide any\n            APIs.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to=\"https://backstage.io/docs/features/software-catalog/descriptor-format#specprovidesapis-optional\">\n              Learn how to change this.\n            </Link>\n          </Typography>\n        </div>\n      }\n      columns={apiEntityColumns}\n      entities={entities as ApiEntity[]}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentEntity,\n  Entity,\n  RELATION_API_CONSUMED_BY,\n} from '@backstage/catalog-model';\nimport {\n  CodeSnippet,\n  InfoCard,\n  Link,\n  Progress,\n  WarningPanel,\n} from '@backstage/core';\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\n\ntype Props = {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n  variant?: 'gridItem';\n};\n\nexport const ConsumingComponentsCard = ({ variant = 'gridItem' }: Props) => {\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_API_CONSUMED_BY,\n  });\n\n  if (loading) {\n    return (\n      <InfoCard variant={variant} title=\"Consumers\">\n        <Progress />\n      </InfoCard>\n    );\n  }\n\n  if (error || !entities) {\n    return (\n      <InfoCard variant={variant} title=\"Consumers\">\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not load components\"\n          message={<CodeSnippet text={`${error}`} language=\"text\" />}\n        />\n      </InfoCard>\n    );\n  }\n\n  return (\n    <EntityTable\n      title=\"Consumers\"\n      variant={variant}\n      emptyContent={\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            No component consumes this API.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to=\"https://backstage.io/docs/features/software-catalog/descriptor-format#specconsumesapis-optional\">\n              Learn how to change this.\n            </Link>\n          </Typography>\n        </div>\n      }\n      columns={EntityTable.componentEntityColumns}\n      entities={entities as ComponentEntity[]}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentEntity,\n  Entity,\n  RELATION_API_PROVIDED_BY,\n} from '@backstage/catalog-model';\nimport {\n  CodeSnippet,\n  InfoCard,\n  Link,\n  Progress,\n  WarningPanel,\n} from '@backstage/core';\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\n\ntype Props = {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n  variant?: 'gridItem';\n};\n\nexport const ProvidingComponentsCard = ({ variant = 'gridItem' }: Props) => {\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_API_PROVIDED_BY,\n  });\n\n  if (loading) {\n    return (\n      <InfoCard variant={variant} title=\"Providers\">\n        <Progress />\n      </InfoCard>\n    );\n  }\n\n  if (error || !entities) {\n    return (\n      <InfoCard variant={variant} title=\"Providers\">\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not load components\"\n          message={<CodeSnippet text={`${error}`} language=\"text\" />}\n        />\n      </InfoCard>\n    );\n  }\n\n  return (\n    <EntityTable\n      title=\"Providers\"\n      variant={variant}\n      emptyContent={\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            No component provides this API.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to=\"https://backstage.io/docs/features/software-catalog/descriptor-format#specprovidesapis-optional\">\n              Learn how to change this.\n            </Link>\n          </Typography>\n        </div>\n      }\n      columns={EntityTable.componentEntityColumns}\n      entities={entities as ComponentEntity[]}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createExternalRouteRef, createRouteRef } from '@backstage/core';\n\nconst NoIcon = () => null;\n\nexport const rootRoute = createRouteRef({\n  icon: NoIcon,\n  path: '/api-docs',\n  title: 'APIs',\n});\n\nexport const createComponentRouteRef = createExternalRouteRef({\n  id: 'create-component',\n  optional: true,\n});\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApiEntityV1alpha1,\n  Entity,\n  EntityName,\n  RELATION_OWNED_BY,\n  RELATION_PART_OF,\n} from '@backstage/catalog-model';\nimport {\n  CodeSnippet,\n  OverflowTooltip,\n  Table,\n  TableColumn,\n  TableFilter,\n  TableState,\n  useQueryParamState,\n  WarningPanel,\n} from '@backstage/core';\nimport {\n  EntityRefLink,\n  EntityRefLinks,\n  formatEntityRefTitle,\n  getEntityRelations,\n} from '@backstage/plugin-catalog-react';\nimport { Chip } from '@material-ui/core';\nimport React from 'react';\nimport { ApiTypeTitle } from '../ApiDefinitionCard';\n\ntype EntityRow = {\n  entity: ApiEntityV1alpha1;\n  resolved: {\n    name: string;\n    partOfSystemRelationTitle?: string;\n    partOfSystemRelations: EntityName[];\n    ownedByRelationsTitle?: string;\n    ownedByRelations: EntityName[];\n  };\n};\n\nconst columns: TableColumn<EntityRow>[] = [\n  {\n    title: 'Name',\n    field: 'resolved.name',\n    highlight: true,\n    render: ({ entity }) => (\n      <EntityRefLink entityRef={entity} defaultKind=\"API\" />\n    ),\n  },\n  {\n    title: 'System',\n    field: 'resolved.partOfSystemRelationTitle',\n    render: ({ resolved }) => (\n      <EntityRefLinks\n        entityRefs={resolved.partOfSystemRelations}\n        defaultKind=\"system\"\n      />\n    ),\n  },\n  {\n    title: 'Owner',\n    field: 'resolved.ownedByRelationsTitle',\n    render: ({ resolved }) => (\n      <EntityRefLinks\n        entityRefs={resolved.ownedByRelations}\n        defaultKind=\"group\"\n      />\n    ),\n  },\n  {\n    title: 'Lifecycle',\n    field: 'entity.spec.lifecycle',\n  },\n  {\n    title: 'Type',\n    field: 'entity.spec.type',\n    render: ({ entity }) => <ApiTypeTitle apiEntity={entity} />,\n  },\n  {\n    title: 'Description',\n    field: 'entity.metadata.description',\n    render: ({ entity }) => (\n      <OverflowTooltip\n        text={entity.metadata.description}\n        placement=\"bottom-start\"\n      />\n    ),\n    width: 'auto',\n  },\n  {\n    title: 'Tags',\n    field: 'entity.metadata.tags',\n    cellStyle: {\n      padding: '0px 16px 0px 20px',\n    },\n    render: ({ entity }) => (\n      <>\n        {entity.metadata.tags &&\n          entity.metadata.tags.map(t => (\n            <Chip\n              key={t}\n              label={t}\n              size=\"small\"\n              variant=\"outlined\"\n              style={{ marginBottom: '0px' }}\n            />\n          ))}\n      </>\n    ),\n  },\n];\n\nconst filters: TableFilter[] = [\n  {\n    column: 'Owner',\n    type: 'select',\n  },\n  {\n    column: 'Type',\n    type: 'multiple-select',\n  },\n  {\n    column: 'Lifecycle',\n    type: 'multiple-select',\n  },\n  {\n    column: 'Tags',\n    type: 'checkbox-tree',\n  },\n];\n\ntype ExplorerTableProps = {\n  entities: Entity[];\n  loading: boolean;\n  error?: any;\n};\n\nexport const ApiExplorerTable = ({\n  entities,\n  loading,\n  error,\n}: ExplorerTableProps) => {\n  const [queryParamState, setQueryParamState] = useQueryParamState<TableState>(\n    'apiTable',\n  );\n\n  if (error) {\n    return (\n      <WarningPanel severity=\"error\" title=\"Could not fetch catalog entities.\">\n        <CodeSnippet language=\"text\" text={error.toString()} />\n      </WarningPanel>\n    );\n  }\n\n  const rows = entities.map(entity => {\n    const partOfSystemRelations = getEntityRelations(entity, RELATION_PART_OF, {\n      kind: 'system',\n    });\n    const ownedByRelations = getEntityRelations(entity, RELATION_OWNED_BY);\n\n    return {\n      entity: entity as ApiEntityV1alpha1,\n      resolved: {\n        name: formatEntityRefTitle(entity, {\n          defaultKind: 'API',\n        }),\n        ownedByRelationsTitle: ownedByRelations\n          .map(r => formatEntityRefTitle(r, { defaultKind: 'group' }))\n          .join(', '),\n        ownedByRelations,\n        partOfSystemRelationTitle: partOfSystemRelations\n          .map(r =>\n            formatEntityRefTitle(r, {\n              defaultKind: 'system',\n            }),\n          )\n          .join(', '),\n        partOfSystemRelations,\n      },\n    };\n  });\n\n  return (\n    <Table<EntityRow>\n      isLoading={loading}\n      columns={columns}\n      options={{\n        paging: false,\n        actionsColumnIndex: -1,\n        loadingType: 'linear',\n        padding: 'dense',\n        showEmptyDataSourceMessage: !loading,\n      }}\n      data={rows}\n      filters={filters}\n      initialState={queryParamState}\n      onStateChange={setQueryParamState}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Header, Page, useApi, configApiRef } from '@backstage/core';\nimport React from 'react';\n\ntype Props = {\n  children?: React.ReactNode;\n};\nexport const ApiExplorerLayout = ({ children }: Props) => {\n  const configApi = useApi(configApiRef);\n  const generatedSubtitle = `${\n    configApi.getOptionalString('organization.name') ?? 'Backstage'\n  } API Explorer`;\n  return (\n    <Page themeId=\"apis\">\n      <Header\n        title=\"APIs\"\n        subtitle={generatedSubtitle}\n        pageTitleOverride=\"APIs\"\n      />\n      {children}\n    </Page>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Content,\n  ContentHeader,\n  SupportButton,\n  useApi,\n  useRouteRef,\n} from '@backstage/core';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { Button } from '@material-ui/core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useAsync } from 'react-use';\nimport { createComponentRouteRef } from '../../routes';\nimport { ApiExplorerTable } from '../ApiExplorerTable';\nimport { ApiExplorerLayout } from './ApiExplorerLayout';\n\nexport const ApiExplorerPage = () => {\n  const createComponentLink = useRouteRef(createComponentRouteRef);\n  const catalogApi = useApi(catalogApiRef);\n  const { loading, error, value: catalogResponse } = useAsync(() => {\n    return catalogApi.getEntities({\n      filter: { kind: 'API' },\n      fields: [\n        'apiVersion',\n        'kind',\n        'metadata',\n        'relations',\n        'spec.lifecycle',\n        'spec.owner',\n        'spec.type',\n        'spec.system',\n      ],\n    });\n  }, [catalogApi]);\n\n  return (\n    <ApiExplorerLayout>\n      <Content>\n        <ContentHeader title=\"\">\n          {createComponentLink && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component={RouterLink}\n              to={createComponentLink()}\n            >\n              Register Existing API\n            </Button>\n          )}\n          <SupportButton>All your APIs</SupportButton>\n        </ContentHeader>\n        <ApiExplorerTable\n          entities={catalogResponse?.items ?? []}\n          loading={loading}\n          error={error}\n        />\n      </Content>\n    </ApiExplorerLayout>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity } from '@backstage/catalog-model';\nimport {\n  createApiFactory,\n  createComponentExtension,\n  createPlugin,\n  createRoutableExtension,\n} from '@backstage/core';\nimport { defaultDefinitionWidgets } from './components/ApiDefinitionCard';\nimport { ApiExplorerPage as Page } from './components/ApiExplorerPage/ApiExplorerPage';\nimport { apiDocsConfigRef } from './config';\nimport { createComponentRouteRef, rootRoute } from './routes';\n\nexport const apiDocsPlugin = createPlugin({\n  id: 'api-docs',\n  routes: {\n    root: rootRoute,\n  },\n  apis: [\n    createApiFactory({\n      api: apiDocsConfigRef,\n      deps: {},\n      factory: () => {\n        const definitionWidgets = defaultDefinitionWidgets();\n        return {\n          getApiDefinitionWidget: (apiEntity: ApiEntity) => {\n            return definitionWidgets.find(d => d.type === apiEntity.spec.type);\n          },\n        };\n      },\n    }),\n  ],\n  externalRoutes: {\n    createComponent: createComponentRouteRef,\n  },\n  register({ router }) {\n    router.addRoute(rootRoute, Page);\n  },\n});\n\nexport const ApiExplorerPage = apiDocsPlugin.provide(\n  createRoutableExtension({\n    component: () =>\n      import('./components/ApiExplorerPage').then(m => m.ApiExplorerPage),\n    mountPoint: rootRoute,\n  }),\n);\n\nexport const EntityApiDefinitionCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/ApiDefinitionCard').then(m => m.ApiDefinitionCard),\n    },\n  }),\n);\n\nexport const EntityConsumedApisCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/ApisCards').then(m => m.ConsumedApisCard),\n    },\n  }),\n);\n\nexport const EntityConsumingComponentsCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/ComponentsCards').then(\n          m => m.ConsumingComponentsCard,\n        ),\n    },\n  }),\n);\n\nexport const EntityProvidedApisCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/ApisCards').then(m => m.ProvidedApisCard),\n    },\n  }),\n);\n\nexport const EntityProvidingComponentsCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () =>\n        import('./components/ComponentsCards').then(\n          m => m.ProvidingComponentsCard,\n        ),\n    },\n  }),\n);\n\nexport const EntityHasApisCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    component: {\n      lazy: () => import('./components/ApisCards').then(m => m.HasApisCard),\n    },\n  }),\n);\n"],"names":["useStyles","columns","RouterLink","Page","ApiExplorerPage"],"mappings":"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"}