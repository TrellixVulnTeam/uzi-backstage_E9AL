{"version":3,"file":"index.cjs.js","sources":["../src/api.ts","../src/routes.ts","../src/hooks/useEntityCompoundName.ts","../src/hooks/useEntity.ts","../src/utils/filters.ts","../src/utils/getEntityRelations.ts","../src/utils/isOwnerOf.ts","../src/hooks/useEntityListProvider.tsx","../src/types.ts","../src/hooks/useEntityTypeFilter.tsx","../src/hooks/useOwnUser.ts","../src/hooks/useRelatedEntities.ts","../src/hooks/useStarredEntities.ts","../src/components/EntityKindPicker/EntityKindPicker.tsx","../src/components/EntityProvider/EntityProvider.tsx","../src/components/EntityRefLink/format.ts","../src/components/EntityRefLink/EntityRefLink.tsx","../src/components/EntityRefLink/EntityRefLinks.tsx","../src/components/EntityTable/columns.tsx","../src/components/EntityTable/presets.tsx","../src/components/EntityTable/EntityTable.tsx","../src/components/EntityTagPicker/EntityTagPicker.tsx","../src/components/EntityTypePicker/EntityTypePicker.tsx","../src/components/UserListPicker/UserListPicker.tsx","../src/testUtils/providers.tsx"],"sourcesContent":["/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { createApiRef } from '@backstage/core';\n\nexport const catalogApiRef = createApiRef<CatalogApi>({\n  id: 'plugin.catalog.service',\n  description:\n    'Used by the Catalog plugin to make requests to accompanying backend',\n});\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, ENTITY_DEFAULT_NAMESPACE } from '@backstage/catalog-model';\nimport { createRouteRef } from '@backstage/core';\n\nconst NoIcon = () => null;\n\n// TODO(Rugvip): Move these route refs back to the catalog plugin once we're all ported to using external routes\nexport const rootRoute = createRouteRef({\n  icon: NoIcon,\n  path: '',\n  title: 'Catalog',\n});\nexport const catalogRouteRef = rootRoute;\n\nexport const entityRoute = createRouteRef({\n  icon: NoIcon,\n  path: ':namespace/:kind/:name/*',\n  title: 'Entity',\n  params: ['namespace', 'kind', 'name'],\n});\nexport const entityRouteRef = entityRoute;\n\n// Utility function to get suitable route params for entityRoute, given an\n// entity instance\nexport function entityRouteParams(entity: Entity) {\n  return {\n    kind: entity.kind.toLowerCase(),\n    namespace:\n      entity.metadata.namespace?.toLowerCase() ?? ENTITY_DEFAULT_NAMESPACE,\n    name: entity.metadata.name,\n  } as const;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useRouteRefParams } from '@backstage/core';\nimport { entityRouteRef } from '../routes';\n\n/**\n * Grabs entity kind, namespace, and name from the location\n */\nexport const useEntityCompoundName = () => {\n  const { kind, namespace, name } = useRouteRefParams(entityRouteRef);\n  return { kind, namespace, name };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport { errorApiRef, useApi } from '@backstage/core';\nimport { createContext, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useAsync } from 'react-use';\nimport { catalogApiRef } from '../api';\nimport { useEntityCompoundName } from './useEntityCompoundName';\n\ntype EntityLoadingStatus = {\n  entity?: Entity;\n  loading: boolean;\n  error?: Error;\n};\n\nexport const EntityContext = createContext<EntityLoadingStatus>({\n  entity: undefined,\n  loading: true,\n  error: undefined,\n});\n\nexport const useEntityFromUrl = (): EntityLoadingStatus => {\n  const { kind, namespace, name } = useEntityCompoundName();\n  const navigate = useNavigate();\n  const errorApi = useApi(errorApiRef);\n  const catalogApi = useApi(catalogApiRef);\n\n  const { value: entity, error, loading } = useAsync(\n    () => catalogApi.getEntityByName({ kind, namespace, name }),\n    [catalogApi, kind, namespace, name],\n  );\n\n  useEffect(() => {\n    if (!name) {\n      errorApi.post(new Error('No name provided!'));\n      navigate('/');\n    }\n  }, [errorApi, navigate, error, loading, entity, name]);\n\n  return { entity, loading, error };\n};\n\n/**\n * Grab the current entity from the context and its current loading state.\n */\nexport function useEntity<T extends Entity = Entity>() {\n  const { entity, loading, error } = useContext(EntityContext);\n  return { entity: entity as T, loading, error };\n}\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { EntityFilter } from '../types';\n\nexport function reduceCatalogFilters(\n  filters: EntityFilter[],\n): Record<string, string | string[]> {\n  return filters.reduce((compoundFilter, filter) => {\n    return {\n      ...compoundFilter,\n      ...(filter.getCatalogFilters ? filter.getCatalogFilters() : {}),\n    };\n  }, {} as Record<string, string | string[]>);\n}\n\nexport function reduceEntityFilters(\n  filters: EntityFilter[],\n): (entity: Entity) => boolean {\n  return (entity: Entity) =>\n    filters.every(\n      filter => !filter.filterEntity || filter.filterEntity(entity),\n    );\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, EntityName } from '@backstage/catalog-model';\n\n/**\n * Get the related entity references.\n */\nexport function getEntityRelations(\n  entity: Entity | undefined,\n  relationType: string,\n  filter?: { kind: string },\n): EntityName[] {\n  let entityNames =\n    entity?.relations\n      ?.filter(r => r.type === relationType)\n      ?.map(r => r.target) || [];\n\n  if (filter?.kind) {\n    entityNames = entityNames?.filter(\n      e => e.kind.toLowerCase() === filter.kind.toLowerCase(),\n    );\n  }\n\n  return entityNames;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  EntityName,\n  getEntityName,\n  RELATION_MEMBER_OF,\n  RELATION_OWNED_BY,\n} from '@backstage/catalog-model';\nimport { getEntityRelations } from './getEntityRelations';\n\n/**\n * Get the related entity references.\n */\nexport function isOwnerOf(owner: Entity, owned: Entity) {\n  const possibleOwners: EntityName[] = [\n    ...getEntityRelations(owner, RELATION_MEMBER_OF, { kind: 'group' }),\n    ...(owner ? [getEntityName(owner)] : []),\n  ];\n\n  const owners = getEntityRelations(owned, RELATION_OWNED_BY);\n\n  for (const ownerItem of owners) {\n    if (\n      possibleOwners.find(\n        o =>\n          ownerItem.kind.toLowerCase() === o.kind.toLowerCase() &&\n          ownerItem.namespace.toLowerCase() === o.namespace.toLowerCase() &&\n          ownerItem.name.toLowerCase() === o.name.toLowerCase(),\n      ) !== undefined\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { useAsyncFn, useDebounce } from 'react-use';\nimport { useApi } from '@backstage/core';\nimport { Entity } from '@backstage/catalog-model';\nimport { reduceCatalogFilters, reduceEntityFilters } from '../utils';\nimport { catalogApiRef } from '../api';\nimport {\n  EntityFilter,\n  EntityKindFilter,\n  EntityTagFilter,\n  EntityTypeFilter,\n  UserListFilter,\n} from '../types';\nimport { compact, isEqual } from 'lodash';\n\nexport type DefaultEntityFilters = {\n  kind?: EntityKindFilter;\n  type?: EntityTypeFilter;\n  user?: UserListFilter;\n  tags?: EntityTagFilter;\n};\n\nexport type EntityListContextProps<\n  EntityFilters extends DefaultEntityFilters = DefaultEntityFilters\n> = {\n  /**\n   * The currently registered filters, adhering to the shape of DefaultEntityFilters or an extension\n   * of that default (to add custom filter types).\n   */\n  filters: EntityFilters;\n\n  /**\n   * The resolved list of catalog entities, after all filters are applied.\n   */\n  entities: Entity[];\n\n  /**\n   * The resolved list of catalog entities, after _only catalog-backend_ filters are applied.\n   */\n  backendEntities: Entity[];\n\n  /**\n   * Update one or more of the registered filters. Optional filters can be set to `undefined` to\n   * reset the filter.\n   */\n  updateFilters: (\n    filters:\n      | Partial<EntityFilters>\n      | ((prevFilters: EntityFilters) => Partial<EntityFilters>),\n  ) => void;\n\n  loading: boolean;\n  error?: Error;\n};\n\nexport const EntityListContext = createContext<\n  EntityListContextProps<any> | undefined\n>(undefined);\n\nexport const EntityListProvider = <EntityFilters extends DefaultEntityFilters>({\n  children,\n}: PropsWithChildren<{}>) => {\n  const catalogApi = useApi(catalogApiRef);\n\n  const [filters, setFilters] = useState<EntityFilters>({} as EntityFilters);\n  const [entities, setEntities] = useState<Entity[]>([]);\n  const [backendEntities, setBackendEntities] = useState<Entity[]>([]);\n\n  // Store resolved catalog-backend filters and deep compare on filter updates, to avoid refetching\n  // when only frontend filters change\n  const [backendFilters, setBackendFilters] = useState<\n    Record<string, string | string[]>\n  >(reduceCatalogFilters(compact(Object.values(filters))));\n\n  useEffect(() => {\n    const newBackendFilters = reduceCatalogFilters(\n      compact(Object.values(filters)),\n    );\n    if (!isEqual(newBackendFilters, backendFilters)) {\n      setBackendFilters(newBackendFilters);\n    }\n  }, [backendFilters, filters]);\n\n  const [{ loading, error }, refresh] = useAsyncFn(async () => {\n    // TODO(timbonicus): should limit fields here, but would need filter fields + table columns\n    const items = await catalogApi\n      .getEntities({\n        filter: backendFilters,\n      })\n      .then(response => response.items);\n    setBackendEntities(items);\n  }, [backendFilters, catalogApi]);\n\n  // Slight debounce on the catalog-backend call, to prevent eager refresh on multiple programmatic\n  // filter changes.\n  useDebounce(refresh, 10, [backendFilters]);\n\n  // Apply frontend filters\n  useEffect(() => {\n    const resolvedEntities = (backendEntities ?? []).filter(\n      reduceEntityFilters(compact(Object.values(filters))),\n    );\n    setEntities(resolvedEntities);\n  }, [backendEntities, filters]);\n\n  const updateFilters = useCallback(\n    (\n      update:\n        | Partial<EntityFilter>\n        | ((prevFilters: EntityFilters) => Partial<EntityFilters>),\n    ) => {\n      if (typeof update === 'function') {\n        setFilters(prevFilters => ({ ...prevFilters, ...update(prevFilters) }));\n      } else {\n        setFilters(prevFilters => ({ ...prevFilters, ...update }));\n      }\n    },\n    [],\n  );\n\n  return (\n    <EntityListContext.Provider\n      value={{\n        filters,\n        entities,\n        backendEntities,\n        updateFilters,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </EntityListContext.Provider>\n  );\n};\n\nexport function useEntityListProvider<\n  EntityFilters extends DefaultEntityFilters\n>(): EntityListContextProps<EntityFilters> {\n  const context = useContext(EntityListContext);\n  if (!context)\n    throw new Error(\n      'useEntityListProvider must be used within EntityListProvider',\n    );\n  return context;\n}\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, UserEntity } from '@backstage/catalog-model';\nimport { isOwnerOf } from './utils';\n\nexport type EntityFilter = {\n  /**\n   * Get filters to add to the catalog-backend request. These are a dot-delimited field with\n   * value(s) to accept, extracted on the backend by parseEntityFilterParams. For example:\n   *   { field: 'kind', values: ['component'] }\n   *   { field: 'metadata.name', values: ['component-1', 'component-2'] }\n   */\n  getCatalogFilters?: () => Record<string, string | string[]>;\n\n  /**\n   * Filter entities on the frontend after a catalog-backend request. This function will be called\n   * with each backend-resolved entity. This is used when frontend information is required for\n   * filtering, such as a user's starred entities.\n   *\n   * @param entity\n   * @param env\n   */\n  filterEntity?: (entity: Entity) => boolean;\n};\n\nexport class EntityKindFilter implements EntityFilter {\n  constructor(readonly value: string) {}\n\n  getCatalogFilters(): Record<string, string | string[]> {\n    return { kind: this.value };\n  }\n}\n\nexport class EntityTypeFilter implements EntityFilter {\n  constructor(readonly value: string) {}\n\n  getCatalogFilters(): Record<string, string | string[]> {\n    return { 'spec.type': this.value };\n  }\n}\n\nexport class EntityTagFilter implements EntityFilter {\n  constructor(readonly values: string[]) {}\n\n  filterEntity(entity: Entity): boolean {\n    return this.values.every(v => (entity.metadata.tags ?? []).includes(v));\n  }\n}\n\nexport type UserListFilterKind = 'owned' | 'starred' | 'all';\nexport class UserListFilter implements EntityFilter {\n  constructor(\n    readonly value: UserListFilterKind,\n    readonly user: UserEntity | undefined,\n    readonly isStarredEntity: (entity: Entity) => boolean,\n  ) {}\n\n  filterEntity(entity: Entity): boolean {\n    switch (this.value) {\n      case 'owned':\n        return this.user !== undefined && isOwnerOf(this.user, entity);\n      case 'starred':\n        return this.isStarredEntity(entity);\n      default:\n        return true;\n    }\n  }\n}\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAsync } from 'react-use';\nimport { useApi } from '@backstage/core';\nimport { catalogApiRef } from '../api';\nimport {\n  DefaultEntityFilters,\n  useEntityListProvider,\n} from './useEntityListProvider';\nimport { EntityTypeFilter } from '../types';\n\ntype EntityTypeReturn = {\n  loading: boolean;\n  error?: Error;\n  types: string[];\n  selectedType: string | undefined;\n  setType: (type: string | undefined) => void;\n};\n\n/**\n * A hook built on top of `useEntityListProvider` for enabling selection of valid `spec.type` values\n * based on the selected EntityKindFilter.\n */\nexport function useEntityTypeFilter(): EntityTypeReturn {\n  const catalogApi = useApi(catalogApiRef);\n  const {\n    filters: { kind: kindFilter, type: typeFilter },\n    updateFilters,\n  } = useEntityListProvider();\n\n  const [types, setTypes] = useState<string[]>([]);\n  const kind = useMemo(() => kindFilter?.value, [kindFilter]);\n\n  // Load all valid spec.type values straight from the catalogApi, paying attention to only the\n  // kind filter for a complete list.\n  const { error, loading, value: entities } = useAsync(async () => {\n    if (kind) {\n      const items = await catalogApi\n        .getEntities({\n          filter: { kind },\n          fields: ['spec.type'],\n        })\n        .then(response => response.items);\n      return items;\n    }\n    return [];\n  }, [kind, catalogApi]);\n\n  useEffect(() => {\n    // Resolve the unique set of types from returned entities; could be optimized by a new endpoint\n    // in the catalog-backend that does this, rather than loading entities with redundant types.\n    const newTypes = [\n      ...new Set(\n        (entities ?? []).map(e => e.spec?.type).filter(Boolean) as string[],\n      ),\n    ].sort();\n    setTypes(newTypes);\n\n    // Reset type filter if no longer applicable\n    updateFilters((oldFilters: DefaultEntityFilters) =>\n      oldFilters.type && !newTypes.includes(oldFilters.type.value)\n        ? { type: undefined }\n        : {},\n    );\n  }, [updateFilters, entities]);\n\n  const setType = useCallback(\n    (type: string | undefined) =>\n      updateFilters({\n        type: type === undefined ? undefined : new EntityTypeFilter(type),\n      }),\n    [updateFilters],\n  );\n\n  return {\n    loading,\n    error,\n    types,\n    selectedType: typeFilter?.value,\n    setType,\n  };\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserEntity } from '@backstage/catalog-model';\nimport { identityApiRef, useApi } from '@backstage/core';\nimport { useAsync } from 'react-use';\nimport { AsyncState } from 'react-use/lib/useAsync';\nimport { catalogApiRef } from '../api';\n\n/**\n * Get the catalog User entity (if any) that matches the logged-in user.\n */\nexport function useOwnUser(): AsyncState<UserEntity | undefined> {\n  const catalogApi = useApi(catalogApiRef);\n  const identityApi = useApi(identityApiRef);\n\n  // TODO: get the full entity (or at least the full entity name) from the\n  // identityApi\n  return useAsync(\n    () =>\n      catalogApi.getEntityByName({\n        kind: 'User',\n        namespace: 'default',\n        name: identityApi.getUserId(),\n      }) as Promise<UserEntity | undefined>,\n    [catalogApi, identityApi],\n  );\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity, EntityRelation } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core';\nimport { chunk, groupBy } from 'lodash';\nimport { useAsync } from 'react-use';\nimport { catalogApiRef } from '../api';\n\nconst BATCH_SIZE = 20;\n\nexport function useRelatedEntities(\n  entity: Entity,\n  { type, kind }: { type?: string; kind?: string },\n): {\n  entities: Entity[] | undefined;\n  loading: boolean;\n  error: Error | undefined;\n} {\n  const catalogApi = useApi(catalogApiRef);\n  const { loading, value: entities, error } = useAsync(async () => {\n    const relations =\n      entity.relations &&\n      entity.relations.filter(\n        r =>\n          (!type || r.type.toLowerCase() === type.toLowerCase()) &&\n          (!kind || r.target.kind.toLowerCase() === kind.toLowerCase()),\n      );\n\n    if (!relations) {\n      return [];\n    }\n\n    // Group the relations by kind and namespace to reduce the size of the request query string.\n    // Without this grouping, the kind and namespace would need to be specified for each relation, e.g.\n    // `filter=kind=component,namespace=default,name=example1&filter=kind=component,namespace=default,name=example2`\n    // with grouping, we can generate a query a string like\n    // `filter=kind=component,namespace=default,name=example1,example2`\n    const relationsByKindAndNamespace: EntityRelation[][] = Object.values(\n      groupBy(relations, ({ target }) => {\n        return `${target.kind}:${target.namespace}`.toLowerCase();\n      }),\n    );\n\n    // Split the names within each group into batches to further reduce the query string length.\n    const batchedRelationsByKindAndNamespace: {\n      kind: string;\n      namespace: string;\n      nameBatches: string[][];\n    }[] = [];\n    for (const rs of relationsByKindAndNamespace) {\n      batchedRelationsByKindAndNamespace.push({\n        // All relations in a group have the same kind and namespace, so its arbitrary which we pick\n        kind: rs[0].target.kind,\n        namespace: rs[0].target.namespace,\n        nameBatches: chunk(\n          rs.map(r => r.target.name),\n          BATCH_SIZE,\n        ),\n      });\n    }\n\n    const results = await Promise.all(\n      batchedRelationsByKindAndNamespace.flatMap(rs => {\n        return rs.nameBatches.map(names => {\n          return catalogApi.getEntities({\n            filter: {\n              kind: rs.kind,\n              'metadata.namespace': rs.namespace,\n              'metadata.name': names,\n            },\n          });\n        });\n      }),\n    );\n\n    return results.flatMap(r => r.items);\n  }, [entity, type]);\n\n  return {\n    entities,\n    loading,\n    error,\n  };\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { storageApiRef, useApi } from '@backstage/core';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useObservable } from 'react-use';\n\nconst buildEntityKey = (component: Entity) =>\n  `entity:${component.kind}:${component.metadata.namespace ?? 'default'}:${\n    component.metadata.name\n  }`;\n\nexport const useStarredEntities = () => {\n  const storageApi = useApi(storageApiRef);\n  const settingsStore = storageApi.forBucket('settings');\n  const rawStarredEntityKeys =\n    settingsStore.get<string[]>('starredEntities') ?? [];\n\n  const [starredEntities, setStarredEntities] = useState(\n    new Set(rawStarredEntityKeys),\n  );\n\n  const observedItems = useObservable(\n    settingsStore.observe$<string[]>('starredEntities'),\n  );\n\n  useEffect(() => {\n    if (observedItems?.newValue) {\n      const currentValue = observedItems?.newValue ?? [];\n      setStarredEntities(new Set(currentValue));\n    }\n  }, [observedItems?.newValue]);\n\n  const toggleStarredEntity = useCallback(\n    (entity: Entity) => {\n      const entityKey = buildEntityKey(entity);\n      if (starredEntities.has(entityKey)) {\n        starredEntities.delete(entityKey);\n      } else {\n        starredEntities.add(entityKey);\n      }\n\n      settingsStore.set('starredEntities', Array.from(starredEntities));\n    },\n    [starredEntities, settingsStore],\n  );\n\n  const isStarredEntity = useCallback(\n    (entity: Entity) => {\n      const entityKey = buildEntityKey(entity);\n      return starredEntities.has(entityKey);\n    },\n    [starredEntities],\n  );\n\n  return {\n    starredEntities,\n    toggleStarredEntity,\n    isStarredEntity,\n  };\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Alert } from '@material-ui/lab';\nimport { useEntityListProvider } from '../../hooks';\nimport { EntityKindFilter } from '../../types';\n\ntype EntityKindFilterProps = {\n  initialFilter?: string;\n  hidden: boolean;\n};\n\nexport const EntityKindPicker = ({\n  initialFilter,\n  hidden,\n}: EntityKindFilterProps) => {\n  const [selectedKind] = useState(initialFilter);\n  const { updateFilters } = useEntityListProvider();\n\n  useEffect(() => {\n    updateFilters({\n      kind: selectedKind ? new EntityKindFilter(selectedKind) : undefined,\n    });\n  }, [selectedKind, updateFilters]);\n\n  if (hidden) return null;\n\n  // TODO(timbonicus): This should load available kinds from the catalog-backend, similar to\n  // EntityTypePicker.\n\n  return <Alert severity=\"warning\">Kind filter not yet available</Alert>;\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport React, { ReactNode } from 'react';\nimport { EntityContext } from '../../hooks';\n\ntype EntityProviderProps = {\n  entity: Entity;\n  children: ReactNode;\n};\n\nexport const EntityProvider = ({ entity, children }: EntityProviderProps) => (\n  <EntityContext.Provider\n    value={{\n      entity,\n      loading: !Boolean(entity),\n      error: undefined,\n    }}\n  >\n    {children}\n  </EntityContext.Provider>\n);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  EntityName,\n  ENTITY_DEFAULT_NAMESPACE,\n  serializeEntityRef,\n} from '@backstage/catalog-model';\n\nexport function formatEntityRefTitle(\n  entityRef: Entity | EntityName,\n  opts?: { defaultKind?: string },\n) {\n  const defaultKind = opts?.defaultKind;\n  let kind;\n  let namespace;\n  let name;\n\n  if ('metadata' in entityRef) {\n    kind = entityRef.kind;\n    namespace = entityRef.metadata.namespace;\n    name = entityRef.metadata.name;\n  } else {\n    kind = entityRef.kind;\n    namespace = entityRef.namespace;\n    name = entityRef.name;\n  }\n\n  if (namespace === ENTITY_DEFAULT_NAMESPACE) {\n    namespace = undefined;\n  }\n\n  kind = kind.toLowerCase();\n\n  return `${serializeEntityRef({\n    kind: defaultKind && defaultKind.toLowerCase() === kind ? undefined : kind,\n    name,\n    namespace,\n  })}`;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Entity,\n  EntityName,\n  ENTITY_DEFAULT_NAMESPACE,\n} from '@backstage/catalog-model';\nimport { Link, LinkProps } from '@backstage/core';\nimport React, { forwardRef } from 'react';\nimport { generatePath } from 'react-router';\nimport { entityRoute } from '../../routes';\nimport { formatEntityRefTitle } from './format';\n\nexport type EntityRefLinkProps = {\n  entityRef: Entity | EntityName;\n  defaultKind?: string;\n  children?: React.ReactNode;\n} & Omit<LinkProps, 'to'>;\n\nexport const EntityRefLink = forwardRef<any, EntityRefLinkProps>(\n  (props, ref) => {\n    const { entityRef, defaultKind, children, ...linkProps } = props;\n\n    let kind;\n    let namespace;\n    let name;\n\n    if ('metadata' in entityRef) {\n      kind = entityRef.kind;\n      namespace = entityRef.metadata.namespace;\n      name = entityRef.metadata.name;\n    } else {\n      kind = entityRef.kind;\n      namespace = entityRef.namespace;\n      name = entityRef.name;\n    }\n\n    kind = kind.toLocaleLowerCase('en-US');\n\n    const routeParams = {\n      kind,\n      namespace:\n        namespace?.toLocaleLowerCase('en-US') ?? ENTITY_DEFAULT_NAMESPACE,\n      name,\n    };\n\n    // TODO: Use useRouteRef here to generate the path\n    return (\n      <Link\n        {...linkProps}\n        ref={ref}\n        to={generatePath(`/catalog/${entityRoute.path}`, routeParams)}\n      >\n        {children}\n        {!children && formatEntityRefTitle(entityRef, { defaultKind })}\n      </Link>\n    );\n  },\n);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity, EntityName } from '@backstage/catalog-model';\nimport { LinkProps } from '@backstage/core';\nimport React from 'react';\nimport { EntityRefLink } from './EntityRefLink';\n\nexport type EntityRefLinksProps = {\n  entityRefs: (Entity | EntityName)[];\n  defaultKind?: string;\n} & Omit<LinkProps, 'to'>;\n\nexport const EntityRefLinks = ({\n  entityRefs,\n  defaultKind,\n  ...linkProps\n}: EntityRefLinksProps) => (\n  <>\n    {entityRefs.map((r, i) => (\n      <React.Fragment key={i}>\n        {i > 0 && ', '}\n        <EntityRefLink {...linkProps} entityRef={r} defaultKind={defaultKind} />\n      </React.Fragment>\n    ))}\n  </>\n);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  EntityName,\n  RELATION_OWNED_BY,\n  RELATION_PART_OF,\n} from '@backstage/catalog-model';\nimport { OverflowTooltip, TableColumn } from '@backstage/core';\nimport React from 'react';\nimport { getEntityRelations } from '../../utils';\nimport {\n  EntityRefLink,\n  EntityRefLinks,\n  formatEntityRefTitle,\n} from '../EntityRefLink';\n\nexport function createEntityRefColumn<T extends Entity>({\n  defaultKind,\n}: {\n  defaultKind?: string;\n}): TableColumn<T> {\n  function formatContent(entity: T): string {\n    return formatEntityRefTitle(entity, {\n      defaultKind,\n    });\n  }\n\n  return {\n    title: 'Name',\n    highlight: true,\n    customFilterAndSearch(filter, entity) {\n      // TODO: We could implement this more efficiently, like searching over\n      // each field that is displayed individually (kind, namespace, name).\n      // but that migth confuse the user as it will behave different than a\n      // simple text search.\n      // Another alternative would be to cache the values. But writing them\n      // into the entity feels bad too.\n      return formatContent(entity).includes(filter);\n    },\n    customSort(entity1, entity2) {\n      // TODO: We could implement this more efficiently by comparing field by field.\n      // This has similar issues as above.\n      return formatContent(entity1).localeCompare(formatContent(entity2));\n    },\n    render: entity => (\n      <EntityRefLink entityRef={entity} defaultKind={defaultKind} />\n    ),\n  };\n}\n\nexport function createEntityRelationColumn<T extends Entity>({\n  title,\n  relation,\n  defaultKind,\n  filter: entityFilter,\n}: {\n  title: string;\n  relation: string;\n  defaultKind?: string;\n  filter?: { kind: string };\n}): TableColumn<T> {\n  function getRelations(entity: T): EntityName[] {\n    return getEntityRelations(entity, relation, entityFilter);\n  }\n\n  function formatContent(entity: T): string {\n    return getRelations(entity)\n      .map(r => formatEntityRefTitle(r, { defaultKind }))\n      .join(', ');\n  }\n\n  return {\n    title,\n    customFilterAndSearch(filter, entity) {\n      return formatContent(entity).includes(filter);\n    },\n    customSort(entity1, entity2) {\n      return formatContent(entity1).localeCompare(formatContent(entity2));\n    },\n    render: entity => {\n      return (\n        <EntityRefLinks\n          entityRefs={getRelations(entity)}\n          defaultKind={defaultKind}\n        />\n      );\n    },\n  };\n}\n\nexport function createOwnerColumn<T extends Entity>(): TableColumn<T> {\n  return createEntityRelationColumn({\n    title: 'Owner',\n    relation: RELATION_OWNED_BY,\n    defaultKind: 'group',\n  });\n}\n\nexport function createDomainColumn<T extends Entity>(): TableColumn<T> {\n  return createEntityRelationColumn({\n    title: 'Domain',\n    relation: RELATION_PART_OF,\n    defaultKind: 'domain',\n    filter: {\n      kind: 'domain',\n    },\n  });\n}\n\nexport function createSystemColumn<T extends Entity>(): TableColumn<T> {\n  return createEntityRelationColumn({\n    title: 'System',\n    relation: RELATION_PART_OF,\n    defaultKind: 'system',\n    filter: {\n      kind: 'system',\n    },\n  });\n}\n\nexport function createMetadataDescriptionColumn<\n  T extends Entity\n>(): TableColumn<T> {\n  return {\n    title: 'Description',\n    field: 'metadata.description',\n    render: entity => (\n      <OverflowTooltip\n        text={entity.metadata.description}\n        placement=\"bottom-start\"\n      />\n    ),\n    width: 'auto',\n  };\n}\n\nexport function createSpecLifecycleColumn<T extends Entity>(): TableColumn<T> {\n  return {\n    title: 'Lifecycle',\n    field: 'spec.lifecycle',\n  };\n}\n\nexport function createSpecTypeColumn<T extends Entity>(): TableColumn<T> {\n  return {\n    title: 'Type',\n    field: 'spec.type',\n  };\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentEntity, SystemEntity } from '@backstage/catalog-model';\nimport { TableColumn } from '@backstage/core';\nimport {\n  createDomainColumn,\n  createEntityRefColumn,\n  createMetadataDescriptionColumn,\n  createOwnerColumn,\n  createSpecLifecycleColumn,\n  createSpecTypeColumn,\n  createSystemColumn,\n} from './columns';\n\nexport const systemEntityColumns: TableColumn<SystemEntity>[] = [\n  createEntityRefColumn({ defaultKind: 'system' }),\n  createDomainColumn(),\n  createOwnerColumn(),\n  createMetadataDescriptionColumn(),\n];\n\nexport const componentEntityColumns: TableColumn<ComponentEntity>[] = [\n  createEntityRefColumn({ defaultKind: 'component' }),\n  createSystemColumn(),\n  createOwnerColumn(),\n  createSpecTypeColumn(),\n  createSpecLifecycleColumn(),\n  createMetadataDescriptionColumn(),\n];\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { Table, TableColumn } from '@backstage/core';\nimport { makeStyles } from '@material-ui/core';\nimport React, { ReactNode } from 'react';\nimport * as columnFactories from './columns';\nimport { componentEntityColumns, systemEntityColumns } from './presets';\n\ntype Props<T extends Entity> = {\n  title: string;\n  variant?: 'gridItem';\n  entities: T[];\n  emptyContent?: ReactNode;\n  columns: TableColumn<T>[];\n};\n\nconst useStyles = makeStyles(theme => ({\n  empty: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nexport function EntityTable<T extends Entity>({\n  entities,\n  title,\n  emptyContent,\n  variant = 'gridItem',\n  columns,\n}: Props<T>) {\n  const classes = useStyles();\n  const tableStyle: React.CSSProperties = {\n    minWidth: '0',\n    width: '100%',\n  };\n\n  if (variant === 'gridItem') {\n    tableStyle.height = 'calc(100% - 10px)';\n  }\n\n  return (\n    <Table<T>\n      columns={columns}\n      title={title}\n      style={tableStyle}\n      emptyContent={\n        emptyContent && <div className={classes.empty}>{emptyContent}</div>\n      }\n      options={{\n        // TODO: Toolbar padding if off compared to other cards, should be: padding: 16px 24px;\n        search: false,\n        paging: false,\n        actionsColumnIndex: -1,\n        padding: 'dense',\n      }}\n      data={entities}\n    />\n  );\n}\n\nEntityTable.columns = columnFactories;\n\nEntityTable.systemEntityColumns = systemEntityColumns;\n\nEntityTable.componentEntityColumns = componentEntityColumns;\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useMemo } from 'react';\nimport {\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Entity } from '@backstage/catalog-model';\nimport { EntityTagFilter } from '../../types';\nimport { useEntityListProvider } from '../../hooks/useEntityListProvider';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport const EntityTagPicker = () => {\n  const { updateFilters, backendEntities, filters } = useEntityListProvider();\n  const availableTags = useMemo(\n    () => [\n      ...new Set(\n        backendEntities\n          .flatMap((e: Entity) => e.metadata.tags)\n          .filter(Boolean) as string[],\n      ),\n    ],\n    [backendEntities],\n  );\n\n  if (!availableTags.length) return null;\n\n  const onChange = (tags: string[]) => {\n    updateFilters({\n      tags: tags.length ? new EntityTagFilter(tags) : undefined,\n    });\n  };\n\n  return (\n    <>\n      <Typography variant=\"button\">Tags</Typography>\n      <Autocomplete<string>\n        multiple\n        options={availableTags}\n        value={filters.tags?.values ?? []}\n        onChange={(_: object, value: string[]) => onChange(value)}\n        renderOption={(option, { selected }) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={icon}\n                checkedIcon={checkedIcon}\n                checked={selected}\n              />\n            }\n            label={option}\n          />\n        )}\n        size=\"small\"\n        popupIcon={<ExpandMoreIcon data-testid=\"tag-picker-expand\" />}\n        renderInput={params => <TextField {...params} variant=\"outlined\" />}\n      />\n    </>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { capitalize } from 'lodash';\nimport { Box } from '@material-ui/core';\nimport { alertApiRef, Select, useApi } from '@backstage/core';\nimport { useEntityTypeFilter } from '../../hooks/useEntityTypeFilter';\n\nexport const EntityTypePicker = () => {\n  const alertApi = useApi(alertApiRef);\n  const { error, types, selectedType, setType } = useEntityTypeFilter();\n\n  if (!types) return null;\n\n  if (error) {\n    alertApi.post({\n      message: `Failed to load entity types`,\n      severity: 'error',\n    });\n    return null;\n  }\n\n  const items = [\n    { value: 'all', label: 'All' },\n    ...types.map((type: string) => ({\n      value: type,\n      label: capitalize(type),\n    })),\n  ];\n\n  return (\n    <Box pb={1} pt={1}>\n      <Select\n        label=\"Type\"\n        items={items}\n        selected={selectedType ?? 'all'}\n        onChange={value => setType(value === 'all' ? undefined : String(value))}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Fragment, useEffect, useMemo, useState } from 'react';\nimport { compact } from 'lodash';\nimport { configApiRef, IconComponent, useApi } from '@backstage/core';\nimport { UserListFilter, UserListFilterKind } from '../../types';\nimport {\n  useEntityListProvider,\n  useOwnUser,\n  useStarredEntities,\n} from '../../hooks';\nimport {\n  Card,\n  List,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  MenuItem,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport StarIcon from '@material-ui/icons/Star';\nimport { reduceEntityFilters } from '../../utils';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .11)',\n    boxShadow: 'none',\n    margin: theme.spacing(1, 0, 1, 0),\n  },\n  title: {\n    margin: theme.spacing(1, 0, 0, 1),\n    textTransform: 'uppercase',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  listIcon: {\n    minWidth: 30,\n    color: theme.palette.text.primary,\n  },\n  menuItem: {\n    minHeight: theme.spacing(6),\n  },\n  groupWrapper: {\n    margin: theme.spacing(1, 1, 2, 1),\n  },\n}));\n\nexport type ButtonGroup = {\n  name: string;\n  items: {\n    id: 'owned' | 'starred' | 'all';\n    label: string;\n    icon?: IconComponent;\n  }[];\n};\n\nfunction getFilterGroups(orgName: string | undefined): ButtonGroup[] {\n  return [\n    {\n      name: 'Personal',\n      items: [\n        {\n          id: 'owned',\n          label: 'Owned',\n          icon: SettingsIcon,\n        },\n        {\n          id: 'starred',\n          label: 'Starred',\n          icon: StarIcon,\n        },\n      ],\n    },\n    {\n      name: orgName ?? 'Company',\n      items: [\n        {\n          id: 'all',\n          label: 'All',\n        },\n      ],\n    },\n  ];\n}\n\ntype UserListPickerProps = {\n  initialFilter?: UserListFilterKind;\n};\n\nexport const UserListPicker = ({ initialFilter }: UserListPickerProps) => {\n  const classes = useStyles();\n  const configApi = useApi(configApiRef);\n  const orgName = configApi.getOptionalString('organization.name') ?? 'Company';\n  const filterGroups = getFilterGroups(orgName);\n\n  const { value: user } = useOwnUser();\n  const { isStarredEntity } = useStarredEntities();\n  const [selectedUserFilter, setSelectedUserFilter] = useState(initialFilter);\n\n  // Static filters; used for generating counts of potentially unselected kinds\n  const ownedFilter = useMemo(\n    () => new UserListFilter('owned', user, isStarredEntity),\n    [user, isStarredEntity],\n  );\n  const starredFilter = useMemo(\n    () => new UserListFilter('starred', user, isStarredEntity),\n    [user, isStarredEntity],\n  );\n\n  const { filters, updateFilters, backendEntities } = useEntityListProvider();\n\n  useEffect(() => {\n    updateFilters({\n      user: selectedUserFilter\n        ? new UserListFilter(selectedUserFilter, user, isStarredEntity)\n        : undefined,\n    });\n  }, [selectedUserFilter, user, isStarredEntity, updateFilters]);\n\n  // To show proper counts for each section, apply all other frontend filters _except_ the user\n  // filter that's controlled by this picker.\n  const [entitiesWithoutUserFilter, setEntitiesWithoutUserFilter] = useState(\n    backendEntities,\n  );\n  useEffect(() => {\n    const filterFn = reduceEntityFilters(\n      compact(Object.values({ ...filters, user: undefined })),\n    );\n    setEntitiesWithoutUserFilter(backendEntities.filter(filterFn));\n  }, [filters, backendEntities]);\n\n  function getFilterCount(id: UserListFilterKind) {\n    switch (id) {\n      case 'owned':\n        return entitiesWithoutUserFilter.filter(entity =>\n          ownedFilter.filterEntity(entity),\n        ).length;\n      case 'starred':\n        return entitiesWithoutUserFilter.filter(entity =>\n          starredFilter.filterEntity(entity),\n        ).length;\n      default:\n        return entitiesWithoutUserFilter.length;\n    }\n  }\n\n  return (\n    <Card className={classes.root}>\n      {filterGroups.map(group => (\n        <Fragment key={group.name}>\n          <Typography variant=\"subtitle2\" className={classes.title}>\n            {group.name}\n          </Typography>\n          <Card className={classes.groupWrapper}>\n            <List disablePadding dense>\n              {group.items.map(item => (\n                <MenuItem\n                  key={item.id}\n                  button\n                  divider\n                  onClick={() => setSelectedUserFilter(item.id)}\n                  selected={item.id === filters.user?.value}\n                  className={classes.menuItem}\n                >\n                  {item.icon && (\n                    <ListItemIcon className={classes.listIcon}>\n                      <item.icon fontSize=\"small\" />\n                    </ListItemIcon>\n                  )}\n                  <ListItemText>\n                    <Typography\n                      variant=\"body1\"\n                      data-testid={`user-picker-${item.id}`}\n                    >\n                      {item.label}\n                    </Typography>\n                  </ListItemText>\n                  <ListItemSecondaryAction>\n                    {getFilterCount(item.id) ?? '-'}\n                  </ListItemSecondaryAction>\n                </MenuItem>\n              ))}\n            </List>\n          </Card>\n        </Fragment>\n      ))}\n    </Card>\n  );\n};\n","/*\n * Copyright 2021 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PropsWithChildren } from 'react';\nimport {\n  EntityListContext,\n  EntityListContextProps,\n} from '../hooks/useEntityListProvider';\n\nexport const MockEntityListContextProvider = ({\n  children,\n  value,\n}: PropsWithChildren<{ value: Partial<EntityListContextProps> }>) => {\n  const defaultContext: EntityListContextProps = {\n    entities: [],\n    backendEntities: [],\n    updateFilters: jest.fn(),\n    filters: {},\n    loading: false,\n  };\n\n  return (\n    <EntityListContext.Provider value={{ ...defaultContext, ...value }}>\n      {children}\n    </EntityListContext.Provider>\n  );\n};\n"],"names":["createApiRef","createRouteRef","ENTITY_DEFAULT_NAMESPACE","useRouteRefParams","createContext","useNavigate","useApi","errorApiRef","useAsync","useContext","RELATION_MEMBER_OF","getEntityName","RELATION_OWNED_BY","useState","compact","isEqual","useAsyncFn","useCallback","useMemo","identityApiRef","groupBy","chunk","storageApiRef","useObservable","Alert","serializeEntityRef","forwardRef","Link","generatePath","React","RELATION_PART_OF","OverflowTooltip","makeStyles","Table","CheckBoxOutlineBlankIcon","CheckBoxIcon","Typography","Autocomplete","FormControlLabel","Checkbox","ExpandMoreIcon","TextField","alertApiRef","capitalize","Box","Select","useStyles","SettingsIcon","StarIcon","configApiRef","Card","Fragment","List","MenuItem","ListItemIcon","ListItemText","ListItemSecondaryAction"],"mappings":"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"}