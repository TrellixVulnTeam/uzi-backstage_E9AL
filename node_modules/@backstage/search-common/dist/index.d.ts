import { JsonObject } from '@backstage/config';

interface SearchQuery {
    term: string;
    filters?: JsonObject;
    pageCursor: string;
}
interface SearchResult {
    document: IndexableDocument;
}
interface SearchResultSet {
    results: SearchResult[];
}
/**
 * Base properties that all indexed documents must include, as well as some
 * common properties that documents are encouraged to use where appropriate.
 */
interface IndexableDocument {
    /**
     * The primary name of the document (e.g. name, title, identifier, etc).
     */
    title: string;
    /**
     * Free-form text of the document (e.g. description, content, etc).
     */
    text: string;
    /**
     * The relative or absolute URL of the document (target when a search result
     * is clicked).
     */
    location: string;
}
/**
 * Interface that must be implemented in order to expose new documents to
 * search.
 */
interface DocumentCollator {
    execute(): Promise<IndexableDocument[]>;
}
/**
 * Interface that must be implemented in order to decorate existing documents with
 * additional metadata.
 */
interface DocumentDecorator {
    execute(documents: IndexableDocument[]): Promise<IndexableDocument[]>;
}

export { DocumentCollator, DocumentDecorator, IndexableDocument, SearchQuery, SearchResult, SearchResultSet };
