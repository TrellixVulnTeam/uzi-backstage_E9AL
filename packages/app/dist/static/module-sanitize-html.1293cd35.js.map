{"version":3,"sources":["webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/stringifier.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/lazy-result.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/result.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/warning.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/parse.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/list.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/previous-map.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/index.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/escape-string-regexp/index.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/is-plain-object/dist/is-plain-object.mjs","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/postcss.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/map-generator.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/warn-once.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/parser.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/tokenize.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/processor.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/fromJSON.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/container.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/root.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/declaration.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/node.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/comment.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/css-syntax-error.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/symbols.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/stringify.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/at-rule.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/rule.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/sanitize-html/node_modules/postcss/lib/input.js"],"names":["DEFAULT_RAW","colon","indent","beforeDecl","beforeRule","beforeOpen","beforeClose","beforeComment","after","emptyBody","commentLeft","commentRight","semicolon","module","exports","builder","this","node","type","Error","body","raws","left","raw","right","text","between","string","prop","rawValue","important","block","ownSemicolon","name","params","afterName","nodes","end","last","length","i","child","before","stringify","start","own","detect","value","parent","first","root","rawCache","beforeAfter","method","str","toUpperCase","slice","walk","p","parts","split","replace","walkComments","includes","walkDecls","buf","depth","step","MapGenerator","isClean","Result","parse","Root","TYPE_TO_CLASS_NAME","atrule","rule","decl","comment","PLUGIN_PROPS","postcssPlugin","prepare","Once","Declaration","Rule","AtRule","Comment","DeclarationExit","RuleExit","AtRuleExit","CommentExit","RootExit","OnceExit","NOT_VISITORS","isPromise","obj","then","getEvents","key","toLowerCase","append","toStack","events","eventIndex","visitors","visitorIndex","iterator","cleanMarks","forEach","postcss","LazyResult","processor","css","opts","stringified","processed","map","inline","prev","parser","syntax","error","result","helpers","plugins","plugin","get","Symbol","toStringTag","content","sync","messages","warnings","onFulfilled","onRejected","async","catch","onFinally","Promise","reject","resolve","processing","runAsync","getAsyncError","runOnRoot","prepareVisitors","hasListener","walkSync","listeners","visitSync","stringifier","data","generate","event","each","toProxy","visitor","promise","lastPlugin","e","handleError","proxyOf","addToError","postcssVersion","setMessage","err","console","stack","visitTick","add","cb","push","test","version","filter","Object","keys","visit","pop","indexes","getIterator","registerPostcss","dependant","default","registerLazyResult","Warning","undefined","warning","source","pos","positionBy","line","column","opt","index","word","message","Container","Parser","Input","input","registerParse","list","separators","array","current","func","quote","escape","letter","trim","space","comma","existsSync","readFileSync","dirname","join","SourceMapConsumer","SourceMapGenerator","PreviousMap","loadAnnotation","startWith","annotation","loadMap","from","mapFile","consumerCache","consumer","sourcesContent","substr","sourceMapString","match","annotations","lastAnnotation","getAnnotationURL","decodeURIComponent","RegExp","lastMatch","Buffer","toString","window","atob","encoding","path","file","fromSourceMap","isMap","JSON","prevPath","loadFile","decodeInline","mappings","_mappings","Array","isArray","sections","htmlparser","escapeStringRegexp","klona","isPlainObject","deepmerge","parseSrcset","postcssParse","mediaTags","vulnerableTags","has","hasOwnProperty","call","a","n","v","sanitizeHtml","VALID_HTML_ATTRIBUTE_NAME","html","options","_recursing","tempResult","Frame","tag","attribs","that","tagPosition","mediaChildren","updateParentNodeText","updateParentNodeMediaChildren","assign","defaults","htmlParserDefaults","allowedTags","indexOf","allowVulnerableTags","warn","nonTextTagsArray","nonTextTags","allowedAttributesMap","allowedAttributesGlobMap","allowedAttributes","attributes","globRegex","allowedClassesMap","allowedClassesGlobMap","allowedClasses","classes","transformTagsMap","transformTagsAll","skipMap","transformMap","skipText","skipTextDepth","transformTags","transform","transFun","simpleTransform","addedText","initializeState","onopentag","enforceHtmlBoundary","frame","skip","hasText","transformedTag","innerText","tagName","disallowedTagsMode","isEmptyObject","nestingLimit","parsed","passedAllowedAttributesMapCheck","o","newValue","multiple","splitStrArray","s","values","allowedSchemesAppliedToAttributes","naughtyHref","allowed","startsWith","base","URL","hostname","protocol","allowIframeRelativeUrls","allowedIframeHostnames","allowedIframeDomains","allowedHostname","find","allowedDomain","domain","endsWith","url","evil","part","w","h","d","allowedSpecificClasses","allowedWildcardClasses","allowedClassesGlobs","t","filterClasses","abstractSyntaxTree","filteredAST","reduce","extractedAttributes","attributeObject","stringifyStyleAttributes","allowedStyles","astRules","selectedRule","selector","allowedDeclarationsList","some","regularExpression","filterDeclarations","filterCss","escapeHtml","selfClosing","textFilter","ontext","lastFrame","escaped","onclosetag","exclusiveFilter","write","decodeEntities","href","matches","allowProtocolRelative","scheme","allowedSchemesByTag","allowedSchemes","allowedGlobs","clss","glob","img","newTagName","newAttribs","merge","attrib","TypeError","isObject","prototype","ctor","prot","constructor","CssSyntaxError","Processor","fromJSON","Node","initializer","creator","args","transformer","cache","process","env","LANG","defineProperty","processOpts","pluginOpts","atRule","relative","sep","pathToFileURL","sourceMapAvailable","Boolean","pathAvailable","mapOpts","previous","previousMaps","withContent","removeChild","already","setSourceContent","toUrl","applySourceMap","isInline","btoa","unescape","encodeURIComponent","toBase64","to","outputFile","eol","generateString","isSourcesContent","setSourcesContent","applyPrevMaps","isAnnotation","addAnnotation","absolute","encodeURI","lines","mapping","generated","original","sourcePath","addMapping","lastIndexOf","clearAnnotation","generateMap","printed","tokenizer","spaces","customProperty","createTokenizer","offset","token","endOfFile","nextToken","freeSemicolon","emptyRule","other","endFile","init","getPosition","bracket","brackets","tokens","back","unclosedBracket","unknownWord","spacesAndCommentsFromEnd","shift","firstSpaces","spacesAndCommentsFromStart","precheckMissedSemicolon","stringFrom","spacesFromEnd","j","hasWord","checkMissedSemicolon","unnamedAtrule","open","unexpectedClose","unclosedBlock","fromOffset","col","next","clean","pattern","all","lastTokenType","splice","element","entries","doubleColon","founded","SINGLE_QUOTE","charCodeAt","DOUBLE_QUOTE","BACKSLASH","SLASH","NEWLINE","SPACE","FEED","TAB","CR","OPEN_SQUARE","CLOSE_SQUARE","OPEN_PARENTHESES","CLOSE_PARENTHESES","OPEN_CURLY","CLOSE_CURLY","SEMICOLON","ASTERISK","COLON","AT","RE_AT_END","RE_WORD_END","RE_BAD_BRACKET","RE_HEX_ESCAPE","code","escapePos","currentToken","valueOf","ignore","ignoreErrors","buffer","returned","unclosed","what","ignoreUnclosed","controlChar","String","fromCharCode","lastIndex","charAt","position","normalize","concat","hideNothingWarning","normalized","registerProcessor","json","inputs","ownInputs","inputHydrated","__proto__","inputId","callback","children","markDirty","reverse","unshift","id","keepBetween","super","cleanRaws","exist","props","fast","condition","every","sample","cleanSource","rebuild","setPrototypeOf","markDirtyUp","set","lastEach","registerRule","registerAtRule","Stringifier","clone","overrides","cloned","cloneNode","insertBefore","insertAfter","bookmark","foundSelf","remove","defaultType","_","fixed","emitInputs","Map","inputsNextIndex","toJSON","positionInside","proxyCache","Proxy","getProxyProcessor","postcssNode","red","bold","gray","colorette","terminalHighlight","reason","captureStackTrace","color","enabled","mark","aside","Math","max","min","maxWidth","number","gutter","spacing","showSourceCode","prepend","fileURLToPath","isAbsolute","nanoid","fromOffsetCache","hasBOM","mapResolve","lastLine","lineToIndex","prevIndex","l","mid","origin","fromUrl","originalPositionFor","sourceRoot","sourceContentFor","registerInput"],"mappings":"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","file":"static/module-sanitize-html.1293cd35.js","sourcesContent":["'use strict'\n\nconst DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  stringify(node, semicolon) {\n    /* istanbul ignore if */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    this[node.type](node, semicolon)\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    // Hack for first rule in CSS\n    if (detect === 'before') {\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n}\n\nmodule.exports = Stringifier\n","'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet { isClean } = require('./symbols')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  root: 'Root',\n  atrule: 'AtRule',\n  rule: 'Rule',\n  decl: 'Declaration',\n  comment: 'Comment'\n}\n\nconst PLUGIN_PROPS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true,\n  Root: true,\n  Declaration: true,\n  Rule: true,\n  AtRule: true,\n  Comment: true,\n  DeclarationExit: true,\n  RuleExit: true,\n  AtRuleExit: true,\n  CommentExit: true,\n  RootExit: true,\n  OnceExit: true\n}\n\nconst NOT_VISITORS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    node,\n    events,\n    eventIndex: 0,\n    visitors: [],\n    visitorIndex: 0,\n    iterator: 0\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (typeof css === 'object' && css !== null && css.type === 'root') {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, result: this.result, postcss }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  toString() {\n    return this.css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        this.visitSync(this.listeners.OnceExit, root)\n      }\n    }\n\n    return this.result\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && !node.parent) return true\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      // istanbul ignore next\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            await visitor(root, this.helpers)\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\n","'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n","'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let pos = opts.node.positionBy(opts)\n      this.line = pos.line\n      this.column = pos.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        plugin: this.plugin,\n        index: this.index,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n","'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n","'use strict'\n\nlet list = {\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let quote = false\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (quote) {\n        if (letter === quote) {\n          quote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        quote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  comma(string) {\n    return list.split(string, [','], true)\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    // istanbul ignore next\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString\n      .match(/\\/\\*\\s*# sourceMappingURL=((?:(?!sourceMappingURL=).)*)\\*\\//)[1]\n      .trim()\n  }\n\n  loadAnnotation(css) {\n    let annotations = css.match(\n      /\\/\\*\\s*# sourceMappingURL=(?:(?!sourceMappingURL=).)*\\*\\//gm\n    )\n\n    if (annotations && annotations.length > 0) {\n      // Locate the last sourceMappingURL to avoid picking up\n      // sourceMappingURLs from comments, strings, etc.\n      let lastAnnotation = annotations[annotations.length - 1]\n      if (lastAnnotation) {\n        this.annotation = this.getAnnotationURL(lastAnnotation)\n      }\n    }\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n","const htmlparser = require('htmlparser2');\nconst escapeStringRegexp = require('escape-string-regexp');\nconst { klona } = require('klona');\nconst { isPlainObject } = require('is-plain-object');\nconst deepmerge = require('deepmerge');\nconst parseSrcset = require('parse-srcset');\nconst { parse: postcssParse } = require('postcss');\n// Tags that can conceivably represent stand-alone media.\nconst mediaTags = [\n  'img', 'audio', 'video', 'picture', 'svg',\n  'object', 'map', 'iframe', 'embed'\n];\n// Tags that are inherently vulnerable to being used in XSS attacks.\nconst vulnerableTags = [ 'script', 'style' ];\n\nfunction each(obj, cb) {\n  if (obj) {\n    Object.keys(obj).forEach(function (key) {\n      cb(obj[key], key);\n    });\n  }\n}\n\n// Avoid false positives with .__proto__, .hasOwnProperty, etc.\nfunction has(obj, key) {\n  return ({}).hasOwnProperty.call(obj, key);\n}\n\n// Returns those elements of `a` for which `cb(a)` returns truthy\nfunction filter(a, cb) {\n  const n = [];\n  each(a, function(v) {\n    if (cb(v)) {\n      n.push(v);\n    }\n  });\n  return n;\n}\n\nfunction isEmptyObject(obj) {\n  for (const key in obj) {\n    if (has(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction stringifySrcset(parsedSrcset) {\n  return parsedSrcset.map(function(part) {\n    if (!part.url) {\n      throw new Error('URL missing');\n    }\n\n    return (\n      part.url +\n      (part.w ? ` ${part.w}w` : '') +\n      (part.h ? ` ${part.h}h` : '') +\n      (part.d ? ` ${part.d}x` : '')\n    );\n  }).join(', ');\n}\n\nmodule.exports = sanitizeHtml;\n\n// A valid attribute name.\n// We use a tolerant definition based on the set of strings defined by\n// html.spec.whatwg.org/multipage/parsing.html#before-attribute-name-state\n// and html.spec.whatwg.org/multipage/parsing.html#attribute-name-state .\n// The characters accepted are ones which can be appended to the attribute\n// name buffer without triggering a parse error:\n//   * unexpected-equals-sign-before-attribute-name\n//   * unexpected-null-character\n//   * unexpected-character-in-attribute-name\n// We exclude the empty string because it's impossible to get to the after\n// attribute name state with an empty attribute name buffer.\nconst VALID_HTML_ATTRIBUTE_NAME = /^[^\\0\\t\\n\\f\\r /<=>]+$/;\n\n// Ignore the _recursing flag; it's there for recursive\n// invocation as a guard against this exploit:\n// https://github.com/fb55/htmlparser2/issues/105\n\nfunction sanitizeHtml(html, options, _recursing) {\n  let result = '';\n  // Used for hot swapping the result variable with an empty string in order to \"capture\" the text written to it.\n  let tempResult = '';\n\n  function Frame(tag, attribs) {\n    const that = this;\n    this.tag = tag;\n    this.attribs = attribs || {};\n    this.tagPosition = result.length;\n    this.text = ''; // Node inner text\n    this.mediaChildren = [];\n\n    this.updateParentNodeText = function() {\n      if (stack.length) {\n        const parentFrame = stack[stack.length - 1];\n        parentFrame.text += that.text;\n      }\n    };\n\n    this.updateParentNodeMediaChildren = function() {\n      if (stack.length && mediaTags.includes(this.tag)) {\n        const parentFrame = stack[stack.length - 1];\n        parentFrame.mediaChildren.push(this.tag);\n      }\n    };\n  }\n\n  options = Object.assign({}, sanitizeHtml.defaults, options);\n  options.parser = Object.assign({}, htmlParserDefaults, options.parser);\n\n  // vulnerableTags\n  vulnerableTags.forEach(function (tag) {\n    if (\n      options.allowedTags && options.allowedTags.indexOf(tag) > -1 &&\n      !options.allowVulnerableTags\n    ) {\n      console.warn(`\\n\\n⚠️ Your \\`allowedTags\\` option includes, \\`${tag}\\`, which is inherently\\nvulnerable to XSS attacks. Please remove it from \\`allowedTags\\`.\\nOr, to disable this warning, add the \\`allowVulnerableTags\\` option\\nand ensure you are accounting for this risk.\\n\\n`);\n    }\n  });\n\n  // Tags that contain something other than HTML, or where discarding\n  // the text when the tag is disallowed makes sense for other reasons.\n  // If we are not allowing these tags, we should drop their content too.\n  // For other tags you would drop the tag but keep its content.\n  const nonTextTagsArray = options.nonTextTags || [\n    'script',\n    'style',\n    'textarea',\n    'option'\n  ];\n  let allowedAttributesMap;\n  let allowedAttributesGlobMap;\n  if (options.allowedAttributes) {\n    allowedAttributesMap = {};\n    allowedAttributesGlobMap = {};\n    each(options.allowedAttributes, function(attributes, tag) {\n      allowedAttributesMap[tag] = [];\n      const globRegex = [];\n      attributes.forEach(function(obj) {\n        if (typeof obj === 'string' && obj.indexOf('*') >= 0) {\n          globRegex.push(escapeStringRegexp(obj).replace(/\\\\\\*/g, '.*'));\n        } else {\n          allowedAttributesMap[tag].push(obj);\n        }\n      });\n      if (globRegex.length) {\n        allowedAttributesGlobMap[tag] = new RegExp('^(' + globRegex.join('|') + ')$');\n      }\n    });\n  }\n  const allowedClassesMap = {};\n  const allowedClassesGlobMap = {};\n  each(options.allowedClasses, function(classes, tag) {\n    // Implicitly allows the class attribute\n    if (allowedAttributesMap) {\n      if (!has(allowedAttributesMap, tag)) {\n        allowedAttributesMap[tag] = [];\n      }\n      allowedAttributesMap[tag].push('class');\n    }\n\n    allowedClassesMap[tag] = [];\n    const globRegex = [];\n    classes.forEach(function(obj) {\n      if (typeof obj === 'string' && obj.indexOf('*') >= 0) {\n        globRegex.push(escapeStringRegexp(obj).replace(/\\\\\\*/g, '.*'));\n      } else {\n        allowedClassesMap[tag].push(obj);\n      }\n    });\n    if (globRegex.length) {\n      allowedClassesGlobMap[tag] = new RegExp('^(' + globRegex.join('|') + ')$');\n    }\n  });\n\n  const transformTagsMap = {};\n  let transformTagsAll;\n  each(options.transformTags, function(transform, tag) {\n    let transFun;\n    if (typeof transform === 'function') {\n      transFun = transform;\n    } else if (typeof transform === 'string') {\n      transFun = sanitizeHtml.simpleTransform(transform);\n    }\n    if (tag === '*') {\n      transformTagsAll = transFun;\n    } else {\n      transformTagsMap[tag] = transFun;\n    }\n  });\n\n  let depth;\n  let stack;\n  let skipMap;\n  let transformMap;\n  let skipText;\n  let skipTextDepth;\n  let addedText = false;\n\n  initializeState();\n\n  const parser = new htmlparser.Parser({\n    onopentag: function(name, attribs) {\n      // If `enforceHtmlBoundary` is `true` and this has found the opening\n      // `html` tag, reset the state.\n      if (options.enforceHtmlBoundary && name === 'html') {\n        initializeState();\n      }\n\n      if (skipText) {\n        skipTextDepth++;\n        return;\n      }\n      const frame = new Frame(name, attribs);\n      stack.push(frame);\n\n      let skip = false;\n      const hasText = !!frame.text;\n      let transformedTag;\n      if (has(transformTagsMap, name)) {\n        transformedTag = transformTagsMap[name](name, attribs);\n\n        frame.attribs = attribs = transformedTag.attribs;\n\n        if (transformedTag.text !== undefined) {\n          frame.innerText = transformedTag.text;\n        }\n\n        if (name !== transformedTag.tagName) {\n          frame.name = name = transformedTag.tagName;\n          transformMap[depth] = transformedTag.tagName;\n        }\n      }\n      if (transformTagsAll) {\n        transformedTag = transformTagsAll(name, attribs);\n\n        frame.attribs = attribs = transformedTag.attribs;\n        if (name !== transformedTag.tagName) {\n          frame.name = name = transformedTag.tagName;\n          transformMap[depth] = transformedTag.tagName;\n        }\n      }\n\n      if ((options.allowedTags && options.allowedTags.indexOf(name) === -1) || (options.disallowedTagsMode === 'recursiveEscape' && !isEmptyObject(skipMap)) || (options.nestingLimit != null && depth >= options.nestingLimit)) {\n        skip = true;\n        skipMap[depth] = true;\n        if (options.disallowedTagsMode === 'discard') {\n          if (nonTextTagsArray.indexOf(name) !== -1) {\n            skipText = true;\n            skipTextDepth = 1;\n          }\n        }\n        skipMap[depth] = true;\n      }\n      depth++;\n      if (skip) {\n        if (options.disallowedTagsMode === 'discard') {\n          // We want the contents but not this tag\n          return;\n        }\n        tempResult = result;\n        result = '';\n      }\n      result += '<' + name;\n      if (!allowedAttributesMap || has(allowedAttributesMap, name) || allowedAttributesMap['*']) {\n        each(attribs, function(value, a) {\n          if (!VALID_HTML_ATTRIBUTE_NAME.test(a)) {\n            // This prevents part of an attribute name in the output from being\n            // interpreted as the end of an attribute, or end of a tag.\n            delete frame.attribs[a];\n            return;\n          }\n          let parsed;\n          // check allowedAttributesMap for the element and attribute and modify the value\n          // as necessary if there are specific values defined.\n          let passedAllowedAttributesMapCheck = false;\n          if (!allowedAttributesMap ||\n            (has(allowedAttributesMap, name) && allowedAttributesMap[name].indexOf(a) !== -1) ||\n            (allowedAttributesMap['*'] && allowedAttributesMap['*'].indexOf(a) !== -1) ||\n            (has(allowedAttributesGlobMap, name) && allowedAttributesGlobMap[name].test(a)) ||\n            (allowedAttributesGlobMap['*'] && allowedAttributesGlobMap['*'].test(a))) {\n            passedAllowedAttributesMapCheck = true;\n          } else if (allowedAttributesMap && allowedAttributesMap[name]) {\n            for (const o of allowedAttributesMap[name]) {\n              if (isPlainObject(o) && o.name && (o.name === a)) {\n                passedAllowedAttributesMapCheck = true;\n                let newValue = '';\n                if (o.multiple === true) {\n                  // verify the values that are allowed\n                  const splitStrArray = value.split(' ');\n                  for (const s of splitStrArray) {\n                    if (o.values.indexOf(s) !== -1) {\n                      if (newValue === '') {\n                        newValue = s;\n                      } else {\n                        newValue += ' ' + s;\n                      }\n                    }\n                  }\n                } else if (o.values.indexOf(value) >= 0) {\n                  // verified an allowed value matches the entire attribute value\n                  newValue = value;\n                }\n                value = newValue;\n              }\n            }\n          }\n          if (passedAllowedAttributesMapCheck) {\n            if (options.allowedSchemesAppliedToAttributes.indexOf(a) !== -1) {\n              if (naughtyHref(name, value)) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (name === 'iframe' && a === 'src') {\n              let allowed = true;\n              try {\n                // Chrome accepts \\ as a substitute for / in the // at the\n                // start of a URL, so rewrite accordingly to prevent exploit.\n                // Also drop any whitespace at that point in the URL\n                value = value.replace(/^(\\w+:)?\\s*[\\\\/]\\s*[\\\\/]/, '$1//');\n                if (value.startsWith('relative:')) {\n                  // An attempt to exploit our workaround for base URLs being\n                  // mandatory for relative URL validation in the WHATWG\n                  // URL parser, reject it\n                  throw new Error('relative: exploit attempt');\n                }\n                // naughtyHref is in charge of whether protocol relative URLs\n                // are cool. Here we are concerned just with allowed hostnames and\n                // whether to allow relative URLs.\n                //\n                // Build a placeholder \"base URL\" against which any reasonable\n                // relative URL may be parsed successfully\n                let base = 'relative://relative-site';\n                for (let i = 0; (i < 100); i++) {\n                  base += `/${i}`;\n                }\n                const parsed = new URL(value, base);\n                const isRelativeUrl = parsed && parsed.hostname === 'relative-site' && parsed.protocol === 'relative:';\n                if (isRelativeUrl) {\n                  // default value of allowIframeRelativeUrls is true\n                  // unless allowedIframeHostnames or allowedIframeDomains specified\n                  allowed = has(options, 'allowIframeRelativeUrls')\n                    ? options.allowIframeRelativeUrls\n                    : (!options.allowedIframeHostnames && !options.allowedIframeDomains);\n                } else if (options.allowedIframeHostnames || options.allowedIframeDomains) {\n                  const allowedHostname = (options.allowedIframeHostnames || []).find(function (hostname) {\n                    return hostname === parsed.hostname;\n                  });\n                  const allowedDomain = (options.allowedIframeDomains || []).find(function(domain) {\n                    return parsed.hostname === domain || parsed.hostname.endsWith(`.${domain}`);\n                  });\n                  allowed = allowedHostname || allowedDomain;\n                }\n              } catch (e) {\n                // Unparseable iframe src\n                allowed = false;\n              }\n              if (!allowed) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'srcset') {\n              try {\n                parsed = parseSrcset(value);\n                parsed.forEach(function(value) {\n                  if (naughtyHref('srcset', value.url)) {\n                    value.evil = true;\n                  }\n                });\n                parsed = filter(parsed, function(v) {\n                  return !v.evil;\n                });\n                if (!parsed.length) {\n                  delete frame.attribs[a];\n                  return;\n                } else {\n                  value = stringifySrcset(filter(parsed, function(v) {\n                    return !v.evil;\n                  }));\n                  frame.attribs[a] = value;\n                }\n              } catch (e) {\n                // Unparseable srcset\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'class') {\n              const allowedSpecificClasses = allowedClassesMap[name];\n              const allowedWildcardClasses = allowedClassesMap['*'];\n              const allowedSpecificClassesGlob = allowedClassesGlobMap[name];\n              const allowedWildcardClassesGlob = allowedClassesGlobMap['*'];\n              const allowedClassesGlobs = [ allowedSpecificClassesGlob, allowedWildcardClassesGlob ].filter(\n                function(t) {\n                  return t;\n                }\n              );\n              if (allowedSpecificClasses && allowedWildcardClasses) {\n                value = filterClasses(value, deepmerge(allowedSpecificClasses, allowedWildcardClasses), allowedClassesGlobs);\n              } else {\n                value = filterClasses(value, allowedSpecificClasses || allowedWildcardClasses, allowedClassesGlobs);\n              }\n              if (!value.length) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'style') {\n              try {\n                const abstractSyntaxTree = postcssParse(name + ' {' + value + '}');\n                const filteredAST = filterCss(abstractSyntaxTree, options.allowedStyles);\n\n                value = stringifyStyleAttributes(filteredAST);\n\n                if (value.length === 0) {\n                  delete frame.attribs[a];\n                  return;\n                }\n              } catch (e) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            result += ' ' + a;\n            if (value && value.length) {\n              result += '=\"' + escapeHtml(value, true) + '\"';\n            }\n          } else {\n            delete frame.attribs[a];\n          }\n        });\n      }\n      if (options.selfClosing.indexOf(name) !== -1) {\n        result += ' />';\n      } else {\n        result += '>';\n        if (frame.innerText && !hasText && !options.textFilter) {\n          result += escapeHtml(frame.innerText);\n          addedText = true;\n        }\n      }\n      if (skip) {\n        result = tempResult + escapeHtml(result);\n        tempResult = '';\n      }\n    },\n    ontext: function(text) {\n      if (skipText) {\n        return;\n      }\n      const lastFrame = stack[stack.length - 1];\n      let tag;\n\n      if (lastFrame) {\n        tag = lastFrame.tag;\n        // If inner text was set by transform function then let's use it\n        text = lastFrame.innerText !== undefined ? lastFrame.innerText : text;\n      }\n\n      if (options.disallowedTagsMode === 'discard' && ((tag === 'script') || (tag === 'style'))) {\n        // htmlparser2 gives us these as-is. Escaping them ruins the content. Allowing\n        // script tags is, by definition, game over for XSS protection, so if that's\n        // your concern, don't allow them. The same is essentially true for style tags\n        // which have their own collection of XSS vectors.\n        result += text;\n      } else {\n        const escaped = escapeHtml(text, false);\n        if (options.textFilter && !addedText) {\n          result += options.textFilter(escaped, tag);\n        } else if (!addedText) {\n          result += escaped;\n        }\n      }\n      if (stack.length) {\n        const frame = stack[stack.length - 1];\n        frame.text += text;\n      }\n    },\n    onclosetag: function(name) {\n\n      if (skipText) {\n        skipTextDepth--;\n        if (!skipTextDepth) {\n          skipText = false;\n        } else {\n          return;\n        }\n      }\n\n      const frame = stack.pop();\n      if (!frame) {\n        // Do not crash on bad markup\n        return;\n      }\n      skipText = options.enforceHtmlBoundary ? name === 'html' : false;\n      depth--;\n      const skip = skipMap[depth];\n      if (skip) {\n        delete skipMap[depth];\n        if (options.disallowedTagsMode === 'discard') {\n          frame.updateParentNodeText();\n          return;\n        }\n        tempResult = result;\n        result = '';\n      }\n\n      if (transformMap[depth]) {\n        name = transformMap[depth];\n        delete transformMap[depth];\n      }\n\n      if (options.exclusiveFilter && options.exclusiveFilter(frame)) {\n        result = result.substr(0, frame.tagPosition);\n        return;\n      }\n\n      frame.updateParentNodeMediaChildren();\n      frame.updateParentNodeText();\n\n      if (options.selfClosing.indexOf(name) !== -1) {\n        // Already output />\n        if (skip) {\n          result = tempResult;\n          tempResult = '';\n        }\n        return;\n      }\n\n      result += '</' + name + '>';\n      if (skip) {\n        result = tempResult + escapeHtml(result);\n        tempResult = '';\n      }\n    }\n  }, options.parser);\n  parser.write(html);\n  parser.end();\n\n  return result;\n\n  function initializeState() {\n    result = '';\n    depth = 0;\n    stack = [];\n    skipMap = {};\n    transformMap = {};\n    skipText = false;\n    skipTextDepth = 0;\n  }\n\n  function escapeHtml(s, quote) {\n    if (typeof (s) !== 'string') {\n      s = s + '';\n    }\n    if (options.parser.decodeEntities) {\n      s = s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n      if (quote) {\n        s = s.replace(/\"/g, '&quot;');\n      }\n    }\n    // TODO: this is inadequate because it will pass `&0;`. This approach\n    // will not work, each & must be considered with regard to whether it\n    // is followed by a 100% syntactically valid entity or not, and escaped\n    // if it is not. If this bothers you, don't set parser.decodeEntities\n    // to false. (The default is true.)\n    s = s.replace(/&(?![a-zA-Z0-9#]{1,20};)/g, '&amp;') // Match ampersands not part of existing HTML entity\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n    if (quote) {\n      s = s.replace(/\"/g, '&quot;');\n    }\n    return s;\n  }\n\n  function naughtyHref(name, href) {\n    // Browsers ignore character codes of 32 (space) and below in a surprising\n    // number of situations. Start reading here:\n    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#Embedded_tab\n    // eslint-disable-next-line no-control-regex\n    href = href.replace(/[\\x00-\\x20]+/g, '');\n    // Clobber any comments in URLs, which the browser might\n    // interpret inside an XML data island, allowing\n    // a javascript: URL to be snuck through\n    href = href.replace(/<!--.*?-->/g, '');\n    // Case insensitive so we don't get faked out by JAVASCRIPT #1\n    // Allow more characters after the first so we don't get faked\n    // out by certain schemes browsers accept\n    const matches = href.match(/^([a-zA-Z][a-zA-Z0-9.\\-+]*):/);\n    if (!matches) {\n      // Protocol-relative URL starting with any combination of '/' and '\\'\n      if (href.match(/^[/\\\\]{2}/)) {\n        return !options.allowProtocolRelative;\n      }\n\n      // No scheme\n      return false;\n    }\n    const scheme = matches[1].toLowerCase();\n\n    if (has(options.allowedSchemesByTag, name)) {\n      return options.allowedSchemesByTag[name].indexOf(scheme) === -1;\n    }\n\n    return !options.allowedSchemes || options.allowedSchemes.indexOf(scheme) === -1;\n  }\n\n  /**\n   * Filters user input css properties by whitelisted regex attributes.\n   *\n   * @param {object} abstractSyntaxTree  - Object representation of CSS attributes.\n   * @property {array[Declaration]} abstractSyntaxTree.nodes[0] - Each object cointains prop and value key, i.e { prop: 'color', value: 'red' }.\n   * @param {object} allowedStyles       - Keys are properties (i.e color), value is list of permitted regex rules (i.e /green/i).\n   * @return {object}                    - Abstract Syntax Tree with filtered style attributes.\n   */\n  function filterCss(abstractSyntaxTree, allowedStyles) {\n    if (!allowedStyles) {\n      return abstractSyntaxTree;\n    }\n\n    const filteredAST = klona(abstractSyntaxTree);\n    const astRules = abstractSyntaxTree.nodes[0];\n    let selectedRule;\n\n    // Merge global and tag-specific styles into new AST.\n    if (allowedStyles[astRules.selector] && allowedStyles['*']) {\n      selectedRule = deepmerge(\n        allowedStyles[astRules.selector],\n        allowedStyles['*']\n      );\n    } else {\n      selectedRule = allowedStyles[astRules.selector] || allowedStyles['*'];\n    }\n\n    if (selectedRule) {\n      filteredAST.nodes[0].nodes = astRules.nodes.reduce(filterDeclarations(selectedRule), []);\n    }\n\n    return filteredAST;\n  }\n\n  /**\n   * Extracts the style attribues from an AbstractSyntaxTree and formats those\n   * values in the inline style attribute format.\n   *\n   * @param  {AbstractSyntaxTree} filteredAST\n   * @return {string}             - Example: \"color:yellow;text-align:center;font-family:helvetica;\"\n   */\n  function stringifyStyleAttributes(filteredAST) {\n    return filteredAST.nodes[0].nodes\n      .reduce(function(extractedAttributes, attributeObject) {\n        extractedAttributes.push(\n          attributeObject.prop + ':' + attributeObject.value\n        );\n        return extractedAttributes;\n      }, [])\n      .join(';');\n  }\n\n  /**\n    * Filters the existing attributes for the given property. Discards any attributes\n    * which don't match the whitelist.\n    *\n    * @param  {object} selectedRule             - Example: { color: red, font-family: helvetica }\n    * @param  {array} allowedDeclarationsList   - List of declarations which pass whitelisting.\n    * @param  {object} attributeObject          - Object representing the current css property.\n    * @property {string} attributeObject.type   - Typically 'declaration'.\n    * @property {string} attributeObject.prop   - The CSS property, i.e 'color'.\n    * @property {string} attributeObject.value  - The corresponding value to the css property, i.e 'red'.\n    * @return {function}                        - When used in Array.reduce, will return an array of Declaration objects\n    */\n  function filterDeclarations(selectedRule) {\n    return function (allowedDeclarationsList, attributeObject) {\n      // If this property is whitelisted...\n      if (has(selectedRule, attributeObject.prop)) {\n        const matchesRegex = selectedRule[attributeObject.prop].some(function(regularExpression) {\n          return regularExpression.test(attributeObject.value);\n        });\n\n        if (matchesRegex) {\n          allowedDeclarationsList.push(attributeObject);\n        }\n      }\n      return allowedDeclarationsList;\n    };\n  }\n\n  function filterClasses(classes, allowed, allowedGlobs) {\n    if (!allowed) {\n      // The class attribute is allowed without filtering on this tag\n      return classes;\n    }\n    classes = classes.split(/\\s+/);\n    return classes.filter(function(clss) {\n      return allowed.indexOf(clss) !== -1 || allowedGlobs.some(function(glob) {\n        return glob.test(clss);\n      });\n    }).join(' ');\n  }\n}\n\n// Defaults are accessible to you so that you can use them as a starting point\n// programmatically if you wish\n\nconst htmlParserDefaults = {\n  decodeEntities: true\n};\nsanitizeHtml.defaults = {\n  allowedTags: [\n    // Sections derived from MDN element categories and limited to the more\n    // benign categories.\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n    // Content sectioning\n    'address', 'article', 'aside', 'footer', 'header',\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hgroup',\n    'main', 'nav', 'section',\n    // Text content\n    'blockquote', 'dd', 'div', 'dl', 'dt', 'figcaption', 'figure',\n    'hr', 'li', 'main', 'ol', 'p', 'pre', 'ul',\n    // Inline text semantics\n    'a', 'abbr', 'b', 'bdi', 'bdo', 'br', 'cite', 'code', 'data', 'dfn',\n    'em', 'i', 'kbd', 'mark', 'q',\n    'rb', 'rp', 'rt', 'rtc', 'ruby',\n    's', 'samp', 'small', 'span', 'strong', 'sub', 'sup', 'time', 'u', 'var', 'wbr',\n    // Table content\n    'caption', 'col', 'colgroup', 'table', 'tbody', 'td', 'tfoot', 'th',\n    'thead', 'tr'\n  ],\n  disallowedTagsMode: 'discard',\n  allowedAttributes: {\n    a: [ 'href', 'name', 'target' ],\n    // We don't currently allow img itself by default, but this\n    // would make sense if we did. You could add srcset here,\n    // and if you do the URL is checked for safety\n    img: [ 'src' ]\n  },\n  // Lots of these won't come up by default because we don't allow them\n  selfClosing: [ 'img', 'br', 'hr', 'area', 'base', 'basefont', 'input', 'link', 'meta' ],\n  // URL schemes we permit\n  allowedSchemes: [ 'http', 'https', 'ftp', 'mailto', 'tel' ],\n  allowedSchemesByTag: {},\n  allowedSchemesAppliedToAttributes: [ 'href', 'src', 'cite' ],\n  allowProtocolRelative: true,\n  enforceHtmlBoundary: false\n};\n\nsanitizeHtml.simpleTransform = function(newTagName, newAttribs, merge) {\n  merge = (merge === undefined) ? true : merge;\n  newAttribs = newAttribs || {};\n\n  return function(tagName, attribs) {\n    let attrib;\n    if (merge) {\n      for (attrib in newAttribs) {\n        attribs[attrib] = newAttribs[attrib];\n      }\n    } else {\n      attribs = newAttribs;\n    }\n\n    return {\n      tagName: newTagName,\n      attribs: attribs\n    };\n  };\n};\n","'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  if (console && console.warn) {\n    console.warn(\n      name +\n        ': postcss.plugin was deprecated. Migration guide:\\n' +\n        'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n    )\n    if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n      // istanbul ignore next\n      console.warn(\n        name +\n          ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n          'https://www.w3ctech.com/topic/2226'\n      )\n    }\n  }\n  function creator(...args) {\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n","'use strict'\n\nlet { dirname, resolve, relative, sep } = require('path')\nlet { pathToFileURL } = require('url')\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      this.root.walk(node => {\n        if (node.source && node.source.input.map) {\n          let map = node.source.input.map\n          if (!this.previousMaps.includes(map)) {\n            this.previousMaps.push(map)\n          }\n        }\n      })\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    let node\n    for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n      node = this.root.nodes[i]\n      if (node.type !== 'comment') continue\n      if (node.text.indexOf('# sourceMappingURL=') === 0) {\n        this.root.removeChild(i)\n      }\n    }\n  }\n\n  setSourcesContent() {\n    let already = {}\n    this.root.walk(node => {\n      if (node.source) {\n        let from = node.source.input.from\n        if (from && !already[from]) {\n          already[from] = true\n          this.map.setSourceContent(\n            this.toUrl(this.path(from)),\n            node.source.input.css\n          )\n        }\n      }\n    })\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      // istanbul ignore next\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    }\n    if (this.opts.from) {\n      return this.path(this.opts.from)\n    }\n    return 'to.css'\n  }\n\n  generateMap() {\n    this.generateString()\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    }\n    return [this.css, this.map]\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      // istanbul ignore next\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.mapOpts.absolute) {\n      if (pathToFileURL) {\n        return pathToFileURL(node.source.input.from).toString()\n      } else {\n        // istanbul ignore next\n        throw new Error(\n          '`map.absolute` option is not available in this PostCSS build'\n        )\n      }\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  generate() {\n    this.clearAnnotation()\n\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    }\n\n    let result = ''\n    this.stringify(this.root, i => {\n      result += i\n    })\n    return [result]\n  }\n}\n\nmodule.exports = MapGenerator\n","'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      while (tokens.length) {\n        token = tokens[tokens.length - 1][0]\n        if (token !== 'space' && token !== 'comment') break\n        this.tokenizer.back(tokens.pop())\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n    node.source.end = this.getPosition(last[3] || last[2])\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n    let firstSpaces = this.spacesAndCommentsFromStart(tokens)\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n    this.raw(node, 'value', tokens)\n    if (hasWord) {\n      node.raws.between += firstSpaces\n    } else {\n      node.value = firstSpaces + node.value\n    }\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      offset,\n      line: pos.line,\n      column: pos.col\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      start: this.getPosition(offset),\n      input: this.input\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  raw(node, prop, tokens) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n    let pattern = /^([#.|])?(\\w)+/i\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n\n      if (type === 'comment' && node.type === 'rule') {\n        prev = tokens[i - 1]\n        next = tokens[i + 1]\n\n        if (\n          prev[0] !== 'space' &&\n          next[0] !== 'space' &&\n          pattern.test(prev[1]) &&\n          pattern.test(next[1])\n        ) {\n          value += token[1]\n        } else {\n          clean = false\n        }\n\n        continue\n      }\n\n      if (type === 'comment' || (type === 'space' && i === length - 1)) {\n        clean = false\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { value, raw }\n    }\n    node[prop] = value\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  // Errors\n\n  unclosedBracket(bracket) {\n    throw this.input.error('Unclosed bracket', bracket[2])\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error('Unknown word', tokens[0][2])\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error('Unexpected }', token[2])\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  doubleColon(token) {\n    throw this.input.error('Double colon', token[2])\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error('At-rule without name', token[2])\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    throw this.input.error('Missed semicolon', token[2])\n  }\n}\n\nmodule.exports = Parser\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    nextToken,\n    endOfFile,\n    position\n  }\n}\n","'use strict'\n\nlet LazyResult = require('./lazy-result')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.2.15'\n    this.plugins = this.normalize(plugins)\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      opts.parser === opts.stringifier &&\n      !opts.hideNothingWarning\n    ) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(\n            'You did not set any plugins, parser, or stringifier. ' +\n              'Right now, PostCSS does nothing. Pick plugins for your case ' +\n              'on https://www.postcss.parts/ and use them in postcss.config.js.'\n          )\n        }\n      }\n    }\n    return new LazyResult(this, css, opts)\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet { isClean } = require('./symbols')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\n// istanbul ignore next\nfunction rebuild(node) {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  }\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      rebuild(child)\n    })\n  }\n}\n\nclass Container extends Node {\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  insertBefore(exist, add) {\n    exist = this.index(exist)\n\n    let type = exist === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist], type).reverse()\n    for (let node of nodes) this.proxyOf.nodes.splice(exist, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (exist <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertAfter(exist, add) {\n    exist = this.index(exist)\n\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist]).reverse()\n    for (let node of nodes) this.proxyOf.nodes.splice(exist + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (exist < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      // istanbul ignore next\n      if (typeof i.markDirty !== 'function') rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this\n      return i\n    })\n\n    return processed\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n","'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet { isClean } = require('./symbols')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      // istanbul ignore next\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let pos = this.positionBy(opts)\n      return this.source.input.error(message, pos.line, pos.column, opts)\n    }\n    return new CssSyntaxError(message)\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent) result = result.parent\n    return result\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        // istanbul ignore next\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          inputId,\n          start: value.start,\n          end: value.end\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  positionInside(index) {\n    let string = this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { line, column }\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n","'use strict'\n\nlet { red, bold, gray, options: colorette } = require('colorette')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      this.line = line\n      this.column = column\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = colorette.enabled\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n","'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n","'use strict'\n\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { resolve, isAbsolute } = require('path')\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffset cache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    }\n  }\n\n  error(message, line, column, opts = {}) {\n    let result\n    if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n    let origin = this.origin(line, column)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.line,\n        origin.column,\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        line,\n        column,\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { line, column, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  origin(line, column) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        // istanbul ignore next\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n"],"sourceRoot":""}