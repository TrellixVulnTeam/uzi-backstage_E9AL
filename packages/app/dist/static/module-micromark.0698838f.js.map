{"version":3,"sources":["webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/safe-from-int.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/parse.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/initialize/content.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/initialize/document.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/initialize/flow.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/content.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/constant/splice.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/create-tokenizer.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/serialize-chunks.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/slice-chunks.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/constructs.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/attention.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/constant/unicode-punctuation-regex.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/move-point.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/autolink.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/ascii-atext.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/block-quote.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/character-escape.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/ascii-punctuation.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/character-reference.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/ascii-hex-digit.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/code-fenced.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/code-indented.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/code-text.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/definition.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/hard-break-escape.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/heading-atx.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/html-flow.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/constant/html-block-names.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/constant/html-raw-names.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/html-text.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/label-start-image.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/label-start-link.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/line-ending.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/list.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/setext-underline.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/preprocess.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/postprocess.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/markdown-space.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/chunked-splice.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/markdown-line-ending-or-space.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/regex-check.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/shallow.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/constant/assign.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/prefix-size.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/ascii-alphanumeric.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/constant/from-char-code.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/partial-blank-line.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/resolve-all.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/ascii-alpha.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/normalize-identifier.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/miniflat.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/chunked-push.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/unicode-punctuation.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/unicode-whitespace.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/ascii-control.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/label-end.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/markdown-line-ending.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/factory-space.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/constant/has-own-property.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/size-chunks.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/subtokenize.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/initialize/text.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/combine-extensions.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/util/classify-character.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/character/ascii-digit.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/factory-destination.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/factory-label.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/factory-whitespace.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/factory-title.js","webpack:////Users/udanam/swift/backstage/demo-app/node_modules/micromark/dist/tokenize/thematic-break.js"],"names":["fromCharCode","module","exports","value","base","code","parseInt","content","document","flow","text","combineExtensions","createTokenizer","miniflat","constructs","options","parser","defined","concat","extensions","create","string","initializer","from","Object","defineProperty","markdownLineEnding","factorySpace","tokenize","effects","previous","contentStart","attempt","this","contentInitial","consume","enter","exit","lineStart","token","contentType","next","data","partialBlankLine","inspectResult","childFlow","childToken","self","stack","continued","inspectConstruct","ok","subcontinued","inspectStart","length","containerState","continuation","inspectContinue","inspectLess","currentConstruct","concrete","flowContinue","inspectDone","interrupt","interruptible","containerConstruct","inspectFlowEnd","_closeFlow","lazy","lazyFlowConstruct","check","inspectLazy","flowEnd","undefined","partial","start","documentContinue","documentContinued","flowStart","containerContinue","push","exitContainers","now","_tokenizer","continueFlow","documentAfterPeek","defineSkip","write","sliceStream","size","end","index","call","nok","disable","null","indexOf","initial","flowInitial","afterConstruct","prefixSize","subtokenize","contentEnd","continuationConstruct","contentContinue","resolve","events","prefixed","splice","assign","chunkedPush","chunkedSplice","resolveAll","serializeChunks","shallow","sliceChunks","initialize","point","line","column","offset","columnStart","resolveAllConstructs","chunks","accountForPotentialSkip","_bufferIndex","_index","context","type","fields","pop","constructFactory","construct","info","addResult","onsuccessfulcheck","sliceSerialize","slice","main","state","chunkIndex","chunk","go","charCodeAt","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","list","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","Array","store","name","resolveTo","atTab","result","join","view","startIndex","startBufferIndex","endIndex","endBufferIndex","text$1","attention","autolink","blockQuote","characterEscape","characterReference","codeFenced","codeIndented","codeText","definition","hardBreakEscape","headingAtx","htmlFlow","htmlText","labelEnd","labelStartImage","labelStartLink","lineEnding","setextUnderline","thematicBreak","42","43","45","48","49","50","51","52","53","54","55","56","57","62","91","32","35","60","61","95","96","126","38","92","33","93","insideSpan","resolver","classifyCharacter","movePoint","marker","before","sequence","after","open","close","_open","_close","group","openingSequence","closingSequence","use","nextEvents","asciiAlpha","asciiAlphanumeric","asciiAtext","asciiControl","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","regexCheck","markdownSpace","_container","asciiPunctuation","decodeEntity","asciiDigit","asciiHexDigit","_interopDefaultLegacy","e","default","decodeEntity__default","max","test","numeric","markdownLineEndingOrSpace","closingFenceConstruct","sizeOpen","closingSequenceEnd","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","indentedContentConstruct","afterPrefix","gap","tailExitIndex","headEnterIndex","normalizeIdentifier","factoryDestination","factoryLabel","factoryWhitespace","factoryTitle","identifier","labelAfter","titleConstruct","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","kind","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","toLowerCase","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","done","continuationRawEndTag","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","sizeChunks","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","paragraph","heading","search","atCarriageReturn","encoding","match","startPosition","endPosition","toString","lastIndex","exec","Math","ceil","remove","items","parameters","chunkStart","unshift","apply","regex","object","tail","String","called","replace","toUpperCase","unicodePunctuationRegex","unicodePunctuation","unicodeWhitespace","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","label","media","_used","destinationAfter","between","afterLabel","limit","Infinity","prefix","own","hasOwnProperty","subcontent","eventIndex","stream","entered","adjust","startPositions","tokenizer","childEvents","jumps","gaps","isInFirstContentOfListItem","_gfmTasklistFirstContentOfListItem","add","event","lineIndex","otherIndex","otherEvent","subevents","more","_movePreviousLineEndings","initializeFactory","createResolver","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","bufferIndex","tabs","extension","all","hook","left","right","existing","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","markerType","labelEscape","seen","atFirstTitleBreak","atTitleBreak","title","titleEscape"],"mappings":"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","file":"static/module-micromark.0698838f.js","sourcesContent":["'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\nvar factorySpace = require('./factory-space.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedPush = require('./chunked-push.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar shallow = require('./shallow.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar fromCharCode = require('../constant/from-char-code.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\nvar partialBlankLine = require('./partial-blank-line.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar asciiDigit = require('../character/ascii-digit.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('../util/shallow.js')\nvar factorySpace = require('./factory-space.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryTitle = require('./factory-title.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar asciiControl = require('../character/ascii-control.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n"],"sourceRoot":""}