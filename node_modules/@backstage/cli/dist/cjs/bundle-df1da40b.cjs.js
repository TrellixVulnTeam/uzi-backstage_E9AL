'use strict';

require('commander');
require('chalk');
var index = require('./index-ce78e402.cjs.js');
var fs = require('fs-extra');
require('@backstage/cli-common');
require('@backstage/config/package.json');
var path = require('path');
var parallel = require('./parallel-a4714c72.cjs.js');
require('./svgrTemplate-2d0d15cf.cjs.js');
require('child_process');
require('util');
require('./run-646af88e.cjs.js');
require('rollup');
require('rollup-plugin-peer-deps-external');
require('@rollup/plugin-commonjs');
require('@rollup/plugin-node-resolve');
require('rollup-plugin-postcss');
require('rollup-plugin-esbuild');
require('@svgr/rollup');
require('rollup-plugin-dts');
require('@rollup/plugin-json');
require('@rollup/plugin-yaml');
require('rollup-pluginutils');
var packager = require('./packager-8b72f974.cjs.js');
var os = require('os');
var tar = require('tar');
var index$1 = require('./index-a10e2df1.cjs.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);
var os__default = /*#__PURE__*/_interopDefaultLegacy(os);
var tar__default = /*#__PURE__*/_interopDefaultLegacy(tar);

const BUNDLE_FILE = "bundle.tar.gz";
const SKELETON_FILE = "skeleton.tar.gz";
var bundle = async (cmd) => {
  const targetDir = index.paths.resolveTarget("dist");
  const pkg = await fs__default['default'].readJson(index.paths.resolveTarget("package.json"));
  await packager.buildPackage({outputs: new Set([packager.Output.cjs])});
  const tmpDir = await fs__default['default'].mkdtemp(path.resolve(os__default['default'].tmpdir(), "backstage-bundle"));
  try {
    await index$1.createDistWorkspace([pkg.name], {
      targetDir: tmpDir,
      buildDependencies: Boolean(cmd.buildDependencies),
      buildExcludes: [pkg.name],
      parallel: parallel.parseParallel(process.env[parallel.PARALLEL_ENV_VAR]),
      skeleton: SKELETON_FILE
    });
    await fs__default['default'].remove(targetDir);
    await fs__default['default'].mkdir(targetDir);
    await fs__default['default'].move(path.resolve(tmpDir, SKELETON_FILE), path.resolve(targetDir, SKELETON_FILE));
    await tar__default['default'].create({
      file: path.resolve(targetDir, BUNDLE_FILE),
      cwd: tmpDir,
      portable: true,
      noMtime: true,
      gzip: true
    }, [""]);
  } finally {
    await fs__default['default'].remove(tmpDir);
  }
};

exports.default = bundle;
//# sourceMappingURL=bundle-df1da40b.cjs.js.map
