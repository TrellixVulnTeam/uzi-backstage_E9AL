/// <reference types="react" />
import { BackstagePlugin, RouteRef } from '@backstage/core';

declare const searchPlugin: BackstagePlugin<{
    root: RouteRef<undefined>;
    nextRoot: RouteRef<undefined>;
}, {}>;
declare const SearchPage: () => JSX.Element;
declare const SearchPageNext: () => JSX.Element;

declare type FiltersButtonProps = {
    numberOfSelectedFilters: number;
    handleToggleFilters: () => void;
};
declare const FiltersButton: ({ numberOfSelectedFilters, handleToggleFilters, }: FiltersButtonProps) => JSX.Element;

declare type FiltersState = {
    selected: string;
    checked: Array<string>;
};
declare type FilterOptions = {
    kind: Array<string>;
    lifecycle: Array<string>;
};
declare type FiltersProps = {
    filters: FiltersState;
    filterOptions: FilterOptions;
    resetFilters: () => void;
    updateSelected: (filter: string) => void;
    updateChecked: (filter: string) => void;
};
declare const Filters: ({ filters, filterOptions, resetFilters, updateSelected, updateChecked, }: FiltersProps) => JSX.Element;

declare type SearchBarProps = {
    searchQuery: string;
    handleSearch: any;
    handleClearSearchBar: any;
};
declare const SearchBar: ({ searchQuery, handleSearch, handleClearSearchBar, }: SearchBarProps) => JSX.Element;

declare const SearchPage$1: () => JSX.Element;

declare type SearchResultProps = {
    searchQuery?: string;
};
declare const SearchResult: ({ searchQuery }: SearchResultProps) => JSX.Element;

declare const SidebarSearch: () => JSX.Element;

export { Filters, FiltersButton, FiltersState, SearchPage$1 as Router, SearchBar, SearchPage, SearchPageNext, SearchResult, SidebarSearch, searchPlugin as plugin, searchPlugin };
